<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>大卫的博客园</title>
  
  <subtitle>Welcome!</subtitle>
  <link href="http://david-luge.cn/atom.xml" rel="self"/>
  
  <link href="http://david-luge.cn/"/>
  <updated>2025-03-28T07:16:39.000Z</updated>
  <id>http://david-luge.cn/</id>
  
  <author>
    <name>DavidGu</name>
    
  </author>
  
  <generator uri="https://hexo.io/">Hexo</generator>
  
  <entry>
    <title>线性代数16-投影矩阵与最小二乘</title>
    <link href="http://david-luge.cn/2025/03/28/Linear_Algebra/%E7%BA%BF%E6%80%A7%E4%BB%A3%E6%95%B0-16/"/>
    <id>http://david-luge.cn/2025/03/28/Linear_Algebra/%E7%BA%BF%E6%80%A7%E4%BB%A3%E6%95%B0-16/</id>
    <published>2025-03-28T07:16:39.000Z</published>
    <updated>2025-03-28T07:16:39.000Z</updated>
    
    <content type="html"><![CDATA[<h1 id="Linear-Algebra-投影矩阵与最小二乘-16"><a href="#Linear-Algebra-投影矩阵与最小二乘-16" class="headerlink" title="Linear Algebra-投影矩阵与最小二乘-16"></a>Linear Algebra-投影矩阵与最小二乘-16</h1><h2 id="一、知识概要"><a href="#一、知识概要" class="headerlink" title="一、知识概要"></a>一、知识概要</h2><p>本节聚焦于最小二乘法，深入探究上一节提及的投影概念。实际上，最小二乘法本质就是一种投影，其目的是使误差达到最小。同时，本节还涉及矩阵列空间与左零空间的相关知识，向量的投影就是在列空间中寻找距离最近的点，这与最小二乘法紧密相连。此外，还引出了标准正交向量组的概念。</p><h2 id="二、投影矩阵回顾"><a href="#二、投影矩阵回顾" class="headerlink" title="二、投影矩阵回顾"></a>二、投影矩阵回顾</h2><p>上一节介绍了投影矩阵<script type="math/tex">P</script>，其公式为：</p><script type="math/tex; mode=display">P = A(A^TA)^{-1}A^T</script><p>在推导该公式时，<script type="math/tex">A = [a_1\ a_2]</script>，其中<script type="math/tex">a_1</script>、<script type="math/tex">a_2</script>是平面上的两个基，<script type="math/tex">A</script>的列空间就是整个<script type="math/tex">R^2</script>空间 。</p><p>投影矩阵<script type="math/tex">P</script>与向量<script type="math/tex">b</script>的乘积，可以理解为将<script type="math/tex">b</script>向量投影到它在列空间中的最近一点上。这和上节课将向量<script type="math/tex">p</script>投影到平面上的过程类似。基于此，有以下两个问题：</p><ol><li><p>若<script type="math/tex">b</script>在矩阵<script type="math/tex">A</script>的列空间里，则<script type="math/tex">Pb =?</script>：此时<script type="math/tex">Pb = b</script>。因为<script type="math/tex">b</script>本身就在<script type="math/tex">A</script>的列空间中，就如同上节课中向量<script type="math/tex">b</script>就在平面上，投影就是其本身。</p><ul><li><strong>证明过程</strong>：<ul><li>由于<script type="math/tex">b</script>在<script type="math/tex">A</script>的列空间里，所以一定可以写成<script type="math/tex">Ax = b</script>的形式。</li><li>将其代入投影矩阵可得：<script type="math/tex">A(A^TA)^{-1}A^TAx</script>，根据矩阵乘法结合律，<script type="math/tex">A(A^TA)^{-1}A^TAx = (A(A^TA)^{-1}A^T)Ax</script>，而<script type="math/tex">A(A^TA)^{-1}A^T = P</script>，所以<script type="math/tex">A(A^TA)^{-1}A^TAx = PAx</script>，又因为<script type="math/tex">Ax = b</script>，所以<script type="math/tex">PAx = Pb = b</script> 。</li></ul></li></ul></li><li><p>若<script type="math/tex">b</script>垂直于<script type="math/tex">A</script>的列空间，则<script type="math/tex">Pb =?</script>：此时<script type="math/tex">Pb = 0</script>，即没有投影。例如上节课中向量与平面垂直穿过的情况，此时向量<script type="math/tex">b</script>在平面上没有分量，投影为 <script type="math/tex">0</script>。</p><ul><li><strong>证明过程</strong>：<ul><li>因为<script type="math/tex">b</script>垂直于<script type="math/tex">A</script>的列空间，所以<script type="math/tex">b</script>垂直于<script type="math/tex">A</script>的所有列向量，那么<script type="math/tex">b</script>在左零空间中。</li><li>代入投影矩阵<script type="math/tex">A(A^TA)^{-1}A^Tb</script>，由于<script type="math/tex">b</script>在左零空间，所以<script type="math/tex">A^Tb = 0</script>，则<script type="math/tex">A(A^TA)^{-1}A^Tb = A(A^TA)^{-1}×0 = 0</script> 。</li></ul></li></ul></li></ol><p>通过这两个问题可知，一个向量<script type="math/tex">b</script>总有两个分量，一个在<script type="math/tex">A</script>的列空间中，另一个垂直于<script type="math/tex">A</script>的列空间。投影矩阵的作用就是保留列空间中的分量，去除垂直于列空间的分量。可以用公式<script type="math/tex">b = p + e</script>表示这种关系，其中<script type="math/tex">p</script>是投影矩阵作用于<script type="math/tex">b</script>上得到的向量，<script type="math/tex">e</script>是左零空间中的分量。如果用类似投影矩阵表示，有<script type="math/tex">p = Pb</script>，<script type="math/tex">e = b - p = b - Pb = (I - P)b</script>，这里可以把<script type="math/tex">(I - P)</script>也看作一个投影矩阵，它将向量<script type="math/tex">b</script>投影到左零空间中。</p><p><img src="https://cdn.jsdelivr.net/gh/XduDavid/Blog_Img/Linear_Algebra160.png" alt="Linear_Algebra160"></p><h2 id="三、最小二乘法"><a href="#三、最小二乘法" class="headerlink" title="三、最小二乘法"></a>三、最小二乘法</h2><h3 id="3-1-最小二乘解题"><a href="#3-1-最小二乘解题" class="headerlink" title="3.1 最小二乘解题"></a>3.1 最小二乘解题</h3><p>【例】继续探讨上节课的例子，求解过三个点<script type="math/tex">(1,1)</script>、<script type="math/tex">(2,2)</script>、<script type="math/tex">(3,2)</script>拟合的直线方程。</p><ol><li><strong>列出方程</strong>：假设最优直线方程为<script type="math/tex">y = C + Dx</script>，将三个点代入可得方程组：</li></ol><script type="math/tex; mode=display">\begin{cases}C + D = 1 \\ C + 2D = 2 \\ C + 3D = 2\end{cases}</script><p>将其转化为矩阵方程<script type="math/tex">Ax = b</script>的形式为：</p><script type="math/tex; mode=display">\begin{bmatrix}1 & 1 \\ 1 & 2 \\ 1 & 3\end{bmatrix}\begin{bmatrix}C \\ D\end{bmatrix}=\begin{bmatrix}1 \\ 2 \\ 2\end{bmatrix}</script><p>很明显，这三个点不共线，该方程无解。</p><ol><li><strong>计算误差并拟合</strong>：由于三点不共线，先计算直线与各点之间的误差（偏移量），用<script type="math/tex">|Ax - b|</script>表示。为便于计算，研究它们的平方和<script type="math/tex">|e|^2 = |Ax - b|^2</script> 。从几何意义上讲，这个过程本质是将向量<script type="math/tex">b</script>投影到<script type="math/tex">A</script>的列空间中，也就是将三个点投影到满足方程条件的最近的一条直线上。</li></ol><p>使用上节课介绍的方程<script type="math/tex">A^Tb = A^TA\hat{x}</script>来拟合直线。在这个例子中，<script type="math/tex">A=\begin{bmatrix}1 & 1 \\ 1 & 2 \\ 1 & 3\end{bmatrix}</script>，<script type="math/tex">\hat{x}=\begin{bmatrix}\hat{C} \\ \hat{D}\end{bmatrix}</script>，<script type="math/tex">b=\begin{bmatrix}1 \\ 2 \\ 2\end{bmatrix}</script>，代入方程求解：</p><script type="math/tex; mode=display">A^TA=\begin{bmatrix}1 & 1 & 1 \\ 1 & 2 & 3\end{bmatrix}\begin{bmatrix}1 & 1 \\ 1 & 2 \\ 1 & 3\end{bmatrix}=\begin{bmatrix}3 & 6 \\ 6 & 14\end{bmatrix}\\A^Tb=\begin{bmatrix}1 & 1 & 1 \\ 1 & 2 & 3\end{bmatrix}\begin{bmatrix}1 \\ 2 \\ 2\end{bmatrix}=\begin{bmatrix}5 \\ 11\end{bmatrix}</script><p>则方程<script type="math/tex">A^TA\hat{x} = A^Tb</script>变为<script type="math/tex">\begin{bmatrix}3 & 6 \\ 6 & 14\end{bmatrix}\begin{bmatrix}\hat{C} \\ \hat{D}\end{bmatrix}=\begin{bmatrix}5 \\ 11\end{bmatrix}</script>，求解可得：</p><script type="math/tex; mode=display">\hat{C}=\frac{2}{3}，\hat{D}=\frac{1}{2}</script><p>所以得到的直线方程为<script type="math/tex">y=\hat{C}+\hat{D}x=\frac{2}{3}+\frac{1}{2}x</script> 。</p><ol><li><strong>检验</strong>：分别将<script type="math/tex">(1,1)</script>、<script type="math/tex">(2,2)</script>、<script type="math/tex">(3,2)</script>三个点的横坐标代入拟合直线方程，可以得到拟合直线上各点对应的位置，即<script type="math/tex">p</script>的位置。需要注意的是，以上能使用最小二乘法是因为没有误差过大的量。</li></ol><h3 id="3-2-性质讨论"><a href="#3-2-性质讨论" class="headerlink" title="3.2 性质讨论"></a>3.2 性质讨论</h3><p>上述问题也可以通过使误差最小来计算。将误差化为<script type="math/tex">\left|e_{1}\right|^{2}+\left|e_{2}\right|^{2}+\left|e_{3}\right|^{2}=(C + D - 1)^{2}+(C + 2D - 2)^{2}+(C + 3D - 2)^{2}</script>，从导数的角度，对<script type="math/tex">C</script>和<script type="math/tex">D</script>求偏导并求极值，也能求得拟合直线。</p><p><img src="https://cdn.jsdelivr.net/gh/XduDavid/Blog_Img/Linear_Algebra161.png" alt="Linear_Algebra161"></p><p>将误差向量记为<script type="math/tex">e</script>，对应的投影向量记为<script type="math/tex">p</script>（对应拟合直线上的<script type="math/tex">y</script>值），有<script type="math/tex">b = p + e</script>（<script type="math/tex">b</script>为给定的点的实际<script type="math/tex">y</script>值）。在本题中，<script type="math/tex">b=\begin{bmatrix}1 \\ 2 \\ 2\end{bmatrix}</script>，<script type="math/tex">p=\begin{bmatrix}\frac{7}{6} \\ \frac{10}{6} \\ \frac{13}{6}\end{bmatrix}</script>，<script type="math/tex">e=\begin{bmatrix}-\frac{1}{6} \\ \frac{2}{6} \\ -\frac{1}{6}\end{bmatrix}</script> 。由此可得到以下性质：</p><ol><li>误差向量<script type="math/tex">e</script>与投影向量<script type="math/tex">p</script>垂直，即<script type="math/tex">e\cdot p = 0</script>。</li><li>误差向量<script type="math/tex">e</script>不仅垂直于<script type="math/tex">p</script>，还垂直于列空间中的每一个向量。这些性质进一步验证了前文关于投影的相关介绍。</li></ol><h3 id="3-3-结论证明"><a href="#3-3-结论证明" class="headerlink" title="3.3 结论证明"></a>3.3 结论证明</h3><p>在解方程过程中，用到了“如果矩阵<script type="math/tex">A</script>各列线性无关，则矩阵<script type="math/tex">A^TA</script>可逆”这一结论，之前未给出证明，下面进行证明：</p><ol><li>写出零空间方程形式<script type="math/tex">A^TAx = 0</script>，目的是寻找零空间内的向量<script type="math/tex">x</script> 。</li><li><p>引入之前学过的结论：</p><ul><li>如果矩阵可逆，那么其对应的零空间仅包含零向量。</li><li>对于列向量<script type="math/tex">x</script>，<script type="math/tex">x^Tx</script>表示求<script type="math/tex">x</script>的长度。</li><li>若<script type="math/tex">x^Tx = 0</script>，则<script type="math/tex">x = 0</script>（<script type="math/tex">x</script>是列向量） 。</li></ul></li><li><p>证明过程：</p><ul><li>将方程<script type="math/tex">A^TAx = 0</script>两边同时左乘<script type="math/tex">x^T</script>，得到<script type="math/tex">x^TA^TAx = 0</script>。</li><li>根据矩阵乘法的性质<script type="math/tex">(AB)^T = B^TA^T</script>，则<script type="math/tex">x^TA^TAx = (Ax)^TAx = 0</script>。</li><li>因为向量的内积<script type="math/tex">(Ax)^TAx = 0</script>，且向量的内积为 <script type="math/tex">0</script> 时，该向量为零向量，所以可推得<script type="math/tex">Ax = 0</script>。</li><li>又因为已知矩阵<script type="math/tex">A</script>各列线性无关，根据线性无关的定义，若<script type="math/tex">Ax = 0</script>，则<script type="math/tex">x</script>必为零向量。</li><li>综上，证得<script type="math/tex">A^TA</script>的零空间只有零向量，根据矩阵可逆的判定条件，若矩阵的零空间只有零向量，则该矩阵可逆，所以<script type="math/tex">A^TA</script>可逆。即证明了如果矩阵<script type="math/tex">A</script>各列线性无关，则矩阵<script type="math/tex">A^TA</script>可逆。</li></ul></li></ol><h2 id="四、标准正交基"><a href="#四、标准正交基" class="headerlink" title="四、标准正交基"></a>四、标准正交基</h2><p>这部分内容主要是为下节课做铺垫，相对较少，简单了解即可。</p><p>之前接触过的向量组<script type="math/tex">\begin{bmatrix}1 \\ 0 \\ 0\end{bmatrix}</script>，<script type="math/tex">\begin{bmatrix}0 \\ 0 \\ 1\end{bmatrix}</script>，<script type="math/tex">\begin{bmatrix}0 \\ 1 \\ 0\end{bmatrix}</script>，它们是正交的，并且还有特殊性质——都是单位向量，长度为 <script type="math/tex">1</script>。基于此，引入“标准正交向量组”的概念，其中“标准”表示向量是单位向量。</p><p>同样属于标准正交向量组的还有<script type="math/tex">\begin{bmatrix}\cos\theta \\ \sin\theta\end{bmatrix}</script>，<script type="math/tex">\begin{bmatrix}-\sin\theta \\ \cos\theta\end{bmatrix}</script>。</p><h2 id="五、学习感悟"><a href="#五、学习感悟" class="headerlink" title="五、学习感悟"></a>五、学习感悟</h2><p>本节内容相互关联性强，最小二乘法与投影矩阵之间联系紧密，可以从多种角度进行理解。在学习过程中，记住将向量投影到列空间与左零空间的示意图非常重要，它有助于更牢固地掌握这部分知识。</p>]]></content>
    
    
    <summary type="html">投影矩阵与最小二乘</summary>
    
    
    
    <category term="Linear_Algebra" scheme="http://david-luge.cn/categories/Linear-Algebra/"/>
    
    
    <category term="Linear_Algebra" scheme="http://david-luge.cn/tags/Linear-Algebra/"/>
    
  </entry>
  
  <entry>
    <title>线性代数15-子空间投影</title>
    <link href="http://david-luge.cn/2025/03/28/Linear_Algebra/%E7%BA%BF%E6%80%A7%E4%BB%A3%E6%95%B0-15/"/>
    <id>http://david-luge.cn/2025/03/28/Linear_Algebra/%E7%BA%BF%E6%80%A7%E4%BB%A3%E6%95%B0-15/</id>
    <published>2025-03-28T07:15:39.000Z</published>
    <updated>2025-03-28T07:15:39.000Z</updated>
    
    <content type="html"><![CDATA[<h1 id="Linear-Algebra-子空间投影-15"><a href="#Linear-Algebra-子空间投影-15" class="headerlink" title="Linear Algebra-子空间投影-15"></a>Linear Algebra-子空间投影-15</h1><h2 id="一、知识概要"><a href="#一、知识概要" class="headerlink" title="一、知识概要"></a>一、知识概要</h2><p>本节重点聚焦于投影相关知识，从向量投影出发，逐步拓展至高维投影，并以矩阵形式呈现投影。上一节介绍的正交概念在本节中有着重要应用，做投影本质上就是向另一个向量作垂线。通过本节学习，能深化对正交概念以及空间投影概念的理解。</p><h2 id="二、投影"><a href="#二、投影" class="headerlink" title="二、投影"></a>二、投影</h2><h3 id="2-1-简单的投影"><a href="#2-1-简单的投影" class="headerlink" title="2.1 简单的投影"></a>2.1 简单的投影</h3><p>先来看简单投影的情况，如在下图中，向量<script type="math/tex">p</script>是向量<script type="math/tex">b</script>在向量<script type="math/tex">a</script>上的投影，可表示为<script type="math/tex">p = xa</script>（<script type="math/tex">x</script>为倍数） ，向量<script type="math/tex">b</script>与投影<script type="math/tex">p</script>的差值为<script type="math/tex">b-p</script>。</p><p><img src="https://cdn.jsdelivr.net/gh/XduDavid/Blog_Img/Linear_Algebra150.png" alt="Linear_Algebra150"></p><p>由向量<script type="math/tex">a</script>与<script type="math/tex">e = b - p</script>的垂直关系，结合上节正交概念，根据向量垂直时其点积为 <script type="math/tex">0</script>，可得：</p><script type="math/tex; mode=display">a^{T} e = a^{T}(b - p) = a^{T}(b - ax) = 0</script><p>求解上述关于<script type="math/tex">x</script>的方程：</p><script type="math/tex; mode=display">a^{T}(b - ax) = 0\xrightarrow{}a^{T}b - a^{T}ax = 0\xrightarrow{}a^{T}ax = a^{T}b\xrightarrow{}x = \frac{a^{T}b}{a^{T}a}</script><p>将<script type="math/tex">x</script>代入<script type="math/tex">p = xa</script>，可得到：</p><script type="math/tex; mode=display">p = a\frac{a^{T}b}{a^{T}a}</script><p>从<script type="math/tex">p</script>的表达式可以看出，投影是通过前面的系数（矩阵形式）来实现的，这个系数矩阵被称为投影矩阵，即<script type="math/tex">p = Pb</script>（<script type="math/tex">P</script>是投影矩阵，作用于<script type="math/tex">b</script>向量上）。由此可得投影矩阵<script type="math/tex">P = a\frac{a^{T}}{a^{T}a}</script>，该矩阵生成了投影<script type="math/tex">p</script>。</p><p>需要注意的是，当<script type="math/tex">a</script>是列向量时，<script type="math/tex">aa^{T}</script>是一个矩阵，<script type="math/tex">a^{T}a</script>是一个具体数字。在图一这种情况下，矩阵<script type="math/tex">P</script>的秩为 <script type="math/tex">1</script> 且对称。这一结论可以通过具体计算或上一节末尾的相关结论得出。</p><p>投影矩阵<script type="math/tex">P</script>具有两条重要性质：</p><ol><li><strong>对称性</strong>：<script type="math/tex">P^{T} = P</script>。因为<script type="math/tex">P = a\frac{a^{T}}{a^{T}a}</script>，分母<script type="math/tex">a^{T}a</script>是数字，分子<script type="math/tex">a a^{T}</script>转置后形式不变，所以<script type="math/tex">P</script>是对称矩阵 。</li><li><strong>幂等性</strong>：<script type="math/tex">P^{2} = P</script>。从投影意义来看，如果对向量投影两次，其结果与只投影一次是一样的，所以投影矩阵<script type="math/tex">P</script>满足<script type="math/tex">P^{2} = P</script>。这两条性质是后续扩展投影概念的重要基础。</li></ol><h3 id="2-2-平面上的投影"><a href="#2-2-平面上的投影" class="headerlink" title="2.2 平面上的投影"></a>2.2 平面上的投影</h3><p>在了解向量之间的投影后，进一步探讨向量与平面之间的投影。在下图中，<script type="math/tex">a_1</script>，<script type="math/tex">a_2</script>为构成平面的一组基，向量<script type="math/tex">p</script>在该平面上，则<script type="math/tex">p</script>可以表示为<script type="math/tex">p=\widehat{x_{1}} a_{1}+\widehat{x_{2}} a_{2}</script>，也可写为<script type="math/tex">p = A\hat{x}</script>，其中<script type="math/tex">A = [a_1\ a_2]</script>（<script type="math/tex">a_n</script>都是列向量），<script type="math/tex">\hat{x} = \begin{bmatrix}\widehat{x_{1}}\\\widehat{x_{2}}\end{bmatrix}</script>。</p><p><img src="https://cdn.jsdelivr.net/gh/XduDavid/Blog_Img/Linear_Algebra151.png" alt="Linear_Algebra151"></p><p>类比向量投影的思路，由于<script type="math/tex">a_1</script>，<script type="math/tex">a_2</script>都与<script type="math/tex">b - p</script>向量垂直，将<script type="math/tex">p = Ax</script>代入垂直关系可得：</p><script type="math/tex; mode=display">a_{1}^{T}(b - A\hat{x}) = 0</script><script type="math/tex; mode=display">a_{2}^{T}(b - A\hat{x}) = 0</script><p>将上述两个式子合写成矩阵形式为：</p><script type="math/tex; mode=display">\begin{bmatrix}a_{1}^{T}\\a_{2}^{T}\end{bmatrix}(b - A\hat{x}) = \begin{bmatrix}0\\0\end{bmatrix}$$，即$$A^{T}(b - A\hat{x}) = 0</script><p>可以发现，该式与前面向量投影时得到的式子形式相似，实际上向量投影的式子是<script type="math/tex">A</script>只有一列时的特殊情况。在<script type="math/tex">A^{T}(b - A\hat{x}) = 0</script>这个式子中，<script type="math/tex">b - A\hat{x}</script>（即垂直的<script type="math/tex">e</script>向量）在<script type="math/tex">A^{T}</script>的零空间里。根据上节课所学，零空间与行空间正交，所以<script type="math/tex">e</script>向量与<script type="math/tex">A^{T}</script>的行向量正交，进而与<script type="math/tex">A</script>的列向量<script type="math/tex">a_1</script>，<script type="math/tex">a_2</script>正交，这在图中是显然成立的。</p><p>接下来求平面上的投影矩阵<script type="math/tex">P</script>。由<script type="math/tex">A^{T}(b - A\hat{x}) = 0</script>，先化简得到<script type="math/tex">A^{T}b = A^{T}A\hat{x}</script>。这里需要注意，因为<script type="math/tex">A^{T}</script>不一定是方阵，所以不能直接在两边左乘<script type="math/tex">(A^{T})^{-1}</script>。但由于<script type="math/tex">A</script>是由两个线性无关的基向量构成的矩阵，根据上节知识可知<script type="math/tex">A^{T}A</script>是可逆的，因此在两边同时左乘<script type="math/tex">(A^{T}A)^{-1}</script>来解方程：</p><script type="math/tex; mode=display">A^{T}A\hat{x} = A^{T}b\xrightarrow{}\hat{x} = (A^{T}A)^{-1}A^{T}b</script><p>将<script type="math/tex">\hat{x} = (A^{T}A)^{-1}A^{T}b</script>代入<script type="math/tex">p = A\hat{x}</script>，可得：</p><script type="math/tex; mode=display">p = A(A^{T}A)^{-1}A^{T}b</script><p>由此得到投影矩阵<script type="math/tex">P</script>的表达式为：</p><script type="math/tex; mode=display">P = A(A^{T}A)^{-1}A^{T}</script><p>这是投影矩阵<script type="math/tex">P</script>的一般情况，而前面计算的<script type="math/tex">P = a\frac{a^{T}}{a^{T}a}</script>是投影矩阵的一维特殊情况。同样，<script type="math/tex">P = A(A^{T}A)^{-1}A^{T}</script>也具有<script type="math/tex">P^{T} = P</script>和<script type="math/tex">P^{2} = P</script>这两个性质，其证明过程与一维情况类似，在此不再详述，读者可以自行验证。</p><h2 id="三、最小二乘法初涉"><a href="#三、最小二乘法初涉" class="headerlink" title="三、最小二乘法初涉"></a>三、最小二乘法初涉</h2><p>前面学习的投影知识有着重要的实际应用，其中投影中的<script type="math/tex">e = b - p</script>可以看作向量<script type="math/tex">b</script>与向量<script type="math/tex">a</script>（或向量<script type="math/tex">b</script>与平面）之间偏移量的大小，这为使用最小二乘法拟合直线提供了便利。</p><p>【例】求解过三个点<script type="math/tex">(1,1)</script>，<script type="math/tex">(2,2)</script>，<script type="math/tex">(3,2)</script>拟合的直线方程。</p><ol><li><strong>列出方程</strong>：假设最优直线方程为<script type="math/tex">b = C + Dt</script>，将三个点代入方程可得：</li></ol><script type="math/tex; mode=display">C + D = 1</script><script type="math/tex; mode=display">C + 2D = 2</script><script type="math/tex; mode=display">C + 3D = 2</script><ol><li><strong>转化为矩阵方程并求解</strong>：将上述方程列成矩阵方程<script type="math/tex">Ax = b</script>，发现该方程无解。此时运用投影中讲到的方法，将方程化为<script type="math/tex">A^{T}b = A^{T}A\hat{x}</script>来求解。这种方法的关键在于，原本无解的方程<script type="math/tex">Ax = b</script>，经过处理后得到的<script type="math/tex">A^{T}A\hat{x} = A^{T}b</script>可以求出最优解，从而实现将无解的方程转换为可求解的最优方程。最小二乘法在后续课程中还会详细讲解。</li></ol><h2 id="四、学习感悟"><a href="#四、学习感悟" class="headerlink" title="四、学习感悟"></a>四、学习感悟</h2><p>本节内容是上一节正交知识的延伸。借助正交概念计算投影，并利用投影与向量之间的偏差引入最小二乘法，从而解决方程<script type="math/tex">Ax = b</script>无解时的最优解问题，实现直线拟合。这部分内容实际应用性较强，核心目的是求解<script type="math/tex">A^{T}A\hat{x} = A^{T}b</script>，以获得最优解。</p>]]></content>
    
    
    <summary type="html">子空间投影</summary>
    
    
    
    <category term="Linear_Algebra" scheme="http://david-luge.cn/categories/Linear-Algebra/"/>
    
    
    <category term="Linear_Algebra" scheme="http://david-luge.cn/tags/Linear-Algebra/"/>
    
  </entry>
  
  <entry>
    <title>线性代数14-正交向量与子空间</title>
    <link href="http://david-luge.cn/2025/03/28/Linear_Algebra/%E7%BA%BF%E6%80%A7%E4%BB%A3%E6%95%B0-14/"/>
    <id>http://david-luge.cn/2025/03/28/Linear_Algebra/%E7%BA%BF%E6%80%A7%E4%BB%A3%E6%95%B0-14/</id>
    <published>2025-03-28T07:14:39.000Z</published>
    <updated>2025-03-28T07:14:39.000Z</updated>
    
    <content type="html"><![CDATA[<h1 id="Linear-Algebra-正交向量与子空间-14"><a href="#Linear-Algebra-正交向量与子空间-14" class="headerlink" title="Linear Algebra-正交向量与子空间-14"></a>Linear Algebra-正交向量与子空间-14</h1><h2 id="一、知识概要"><a href="#一、知识概要" class="headerlink" title="一、知识概要"></a>一、知识概要</h2><p>本节开启新的研究篇章，聚焦于之前提及的子空间，不过研究视角转向正交方向，重点探讨子空间的相关性质以及正交向量的特性等内容。这些核心要点集中呈现在下表中。</p><div class="table-container"><table><thead><tr><th>子空间</th><th>维数</th><th>与矩阵关系</th></tr></thead><tbody><tr><td>列空间 <script type="math/tex">C(A)</script></td><td><script type="math/tex">r</script></td><td>由矩阵 <script type="math/tex">A</script> 的列向量生成的空间</td></tr><tr><td>行空间 <script type="math/tex">C(A^T)</script></td><td><script type="math/tex">r</script></td><td>由矩阵 <script type="math/tex">A</script> 的行向量转置后生成的空间</td></tr><tr><td>零空间 <script type="math/tex">N(A)</script></td><td><script type="math/tex">n - r</script></td><td>满足 <script type="math/tex">Ax = 0</script> 的所有解向量构成的空间</td></tr><tr><td>左零空间 <script type="math/tex">N(A^T)</script></td><td><script type="math/tex">m - r</script></td><td>满足 <script type="math/tex">A^T y = 0</script> 的所有解向量构成的空间</td></tr></tbody></table></div><h2 id="二、正交向量与子空间"><a href="#二、正交向量与子空间" class="headerlink" title="二、正交向量与子空间"></a>二、正交向量与子空间</h2><h3 id="2-1-基本正交概念"><a href="#2-1-基本正交概念" class="headerlink" title="2.1 基本正交概念"></a>2.1 基本正交概念</h3><p>在探讨正交向量之前，先明确正交的定义：在线性代数范畴内，正交等同于垂直，无论是向量正交还是空间正交，都可按垂直的概念来理解。</p><ol><li><strong>向量正交</strong>：观察向量 <script type="math/tex">x</script> 和 <script type="math/tex">y</script>，从垂直关系可直观得出 <script type="math/tex">x^t y = 0</script>。这一结论也能通过勾股定理推导得出：<ul><li>根据勾股定理，有 <script type="math/tex">|x|^2 + |y|^2 = |x + y|^2</script> 。</li><li>用向量形式表示为 <script type="math/tex">x^t x + y^t y = (x + y)^t(x + y)</script> 。</li><li>对等式右边展开化简：</li></ul></li></ol><script type="math/tex; mode=display">(x + y)^t(x + y)=(x^t + y^t)(x + y)=x^t x + x^t y + y^t x + y^t</script><p>从而得到 <script type="math/tex">x^t y + y^t x = 0</script> 。</p><ul><li><p>由于 <script type="math/tex">x^t y</script> 与 <script type="math/tex">y^t x</script> 本质相同，均表示两个一维向量的点乘，所以进一步化简可得 <script type="math/tex">2x^t y = 0</script> ，即两个向量正交时， <script type="math/tex">x^t y = 0</script>。</p></li><li><p>特别地，若两个向量中一个是零向量，根据上述结论，这两个向量一定正交。</p></li></ul><ol><li><strong>空间正交</strong>：两个空间正交的定义为，<strong>一个空间中的任意向量，都与另一个空间中的任意向量正交</strong>。例如，黑板所在平面和地面所在平面的子空间并不正交，因为它们存在交线，交线上的非零向量不满足空间正交的定义。这表明，<strong>若两个平面在某一非零向量处相交，那么这两个平面一定不正交</strong>。</li><li><p><script type="math/tex">R^2</script><strong>子空间的正交情况</strong>：在 <script type="math/tex">R^2</script> 中，平面上的子空间有三种类型，分别是整个平面 <script type="math/tex">D</script> 、过原点的直线 <script type="math/tex">L</script> 以及原点 <script type="math/tex">O</script> 。</p><ul><li><script type="math/tex">L</script> 与 <script type="math/tex">D</script> 的正交情况：在一个平面内，直线不可能始终与该平面垂直。</li><li><script type="math/tex">L</script>与 <script type="math/tex">O</script> 的正交情况：<script type="math/tex">L</script> 与 <script type="math/tex">O</script> 永远正交。</li><li><script type="math/tex">L</script>与另一个 <script type="math/tex">L</script>的正交情况：根据正交定义，只有当两条直线在原点处互相垂直时，这两个 <script type="math/tex">L</script> 空间才正交。</li></ul></li></ol><h3 id="2-2-零空间与行空间的正交关系"><a href="#2-2-零空间与行空间的正交关系" class="headerlink" title="2.2 零空间与行空间的正交关系"></a>2.2 零空间与行空间的正交关系</h3><p>零空间与行空间存在正交关系，这种关系就如同将一个空间一分为二，得到的两个子空间相互正交。</p><ol><li><strong>证明正交关系</strong>：将矩阵 <script type="math/tex">A</script> 写成行向量形式，对于方程 <script type="math/tex">Ax = 0</script> ，即：</li></ol><script type="math/tex; mode=display">\begin{bmatrix}R_1 \\R_2 \\\vdots \\R_m\end{bmatrix}\begin{bmatrix}x_1 \\x_2 \\\vdots \\\end{bmatrix}=\begin{bmatrix}R_1(x_1, x_2, \cdots) \\R_2(x_1, x_2, \cdots) \\\vdots \\R_m(x_1, x_2, \cdots)\end{bmatrix}=\begin{bmatrix}0 \\0 \\\vdots \\0\end{bmatrix}</script><p>可以发现，<script type="math/tex">A</script> 的每一行 <script type="math/tex">R_x</script> 与向量 <script type="math/tex">x</script> 的列相乘结果都为 0 。其中，<script type="math/tex">x</script> 代表零空间中的任意向量，而 <script type="math/tex">A</script> 的每一行的线性组合构成了<script type="math/tex">A</script>的行空间，这完全符合正交子空间的定义，所以零空间与行空间是正交的。</p><ol><li><strong>维数关系及示例</strong>：行空间与零空间的维数之和恰好为 <script type="math/tex">n</script> 。以矩阵 <script type="math/tex">A = \begin{bmatrix}1 & 2 & 5 \\ 2 & 4 & 10\end{bmatrix}</script> 为例，<script type="math/tex">Ax = 0</script> 可表示为：</li></ol><script type="math/tex; mode=display">\begin{bmatrix}1 & 2 & 5 \\ 2 & 4 & 10\end{bmatrix}\begin{bmatrix}x_1 \\ x_2 \\ x_3\end{bmatrix}=\begin{bmatrix}0 \\ 0 \\ 0\end{bmatrix}</script><p>在此例中，<script type="math/tex">A</script> 的行空间是一维的，通过计算可得其零空间是二维的（<script type="math/tex">3 - 1 = 2</script>），可以理解为垂直于向量 <script type="math/tex">(1, 2, 5)</script> 的一个平面。行空间与零空间的向量都是三维的，它们都是 <script type="math/tex">R^3</script> 的子空间，这充分验证了零空间与行空间维数之和等于空间 <script type="math/tex">R^n</script> 的维数这一性质，也解释了二者类似于将一个空间一分为二得到两个正交子空间的关系，这种关系被称为 <script type="math/tex">R^n</script> 空间的正交补。</p><h3 id="2-3-无解方程的最优解"><a href="#2-3-无解方程的最优解" class="headerlink" title="2.3 无解方程的最优解"></a>2.3 无解方程的最优解</h3><p>在实际应用中，矩阵的数据常来源于测量，难免存在测量不准确的情况。例如求解 <script type="math/tex">Ax = b</script> 方程时，如果 <script type="math/tex">A</script> 的列数较多，其中可能混入不准确数据，导致无法用常规方法求出准确解。此时，需要寻找方程的最优解，方法是将方程改写为 <script type="math/tex">A^T A \hat{x} = A^T b</script> ，求解得到的 <script type="math/tex">\hat{x}</script> 即为最优解（注意，<script type="math/tex">\hat{x}</script> 并非 <script type="math/tex">Ax = b</script> 的解）。</p><ol><li><p><script type="math/tex">A^T A</script>矩阵的性质：</p><ul><li><strong>方阵性质</strong>：设 <script type="math/tex">A</script> 为 <script type="math/tex">m×n</script> 矩阵，则 <script type="math/tex">A^T A</script> 为 <script type="math/tex">n×n</script> 型的矩阵 ，即 <script type="math/tex">A^T A</script> 的结果总是方阵。</li><li><strong>对称性质</strong>：因为 <script type="math/tex">(A^T A)^T = A^T A</script> ，所以 <script type="math/tex">A^T A</script> 总是对称阵。</li></ul></li><li><p>$A^T A$的可逆性判断：<script type="math/tex">A^T A</script> 矩阵不一定总是可逆的。当 <script type="math/tex">A</script> 矩阵列向量线性相关时，<script type="math/tex">A^T A</script> 就不可逆。<br>证明：假设<script type="math/tex">A</script> 矩阵列向量线性相关，且<script type="math/tex">A^T A</script>可逆，则存在非零向量<script type="math/tex">x</script>，使得<script type="math/tex">A^T Ax=0</script>。</p><script type="math/tex; mode=display">^T Ax=0\xrightarrow{左乘x^T}x^T A^T Ax=0\xrightarrow{}||Ax||=0\xrightarrow{A列向量线性相关}x=0</script><p>与<script type="math/tex">x\neq 0</script>矛盾，因此当 <script type="math/tex">A</script> 矩阵列向量线性相关时，<script type="math/tex">A^T A</script> 就不可逆。<br>判断 <script type="math/tex">A^T A</script> 是否可逆有以下两个基本结论：</p><ul><li><script type="math/tex">N(A^T A) = N(A)</script> ，即 <script type="math/tex">A^T A</script> 与 <script type="math/tex">A</script> 的零空间相同。</li><li><script type="math/tex">A^T A</script> 与 <script type="math/tex">A</script> 的秩相同。</li></ul></li></ol><p>由上述结论可知，<script type="math/tex">A^T A</script> 可逆意味着其零空间中只有零向量，即 <script type="math/tex">A</script> 的各列线性无关。所以在求最优解时，需要先判断 <script type="math/tex">A</script> 的列向量是否线性无关，再进行求解。</p><h2 id="三、学习感悟"><a href="#三、学习感悟" class="headerlink" title="三、学习感悟"></a>三、学习感悟</h2><p>本节围绕正交概念展开深入学习，从向量正交逐步延伸到空间正交，进而揭示了零空间与行空间之间的正交关系。最后探讨并引入了解决 <script type="math/tex">Ax = b</script> 无解情况的方法，这部分内容是本章的核心要点。空间之间的正交关系在开篇的表中已有所体现，理解正交与子空间的概念是后续深入学习核心内容——求解 <script type="math/tex">A^T A \hat{x} = A^T b</script> 的重要基础。</p>]]></content>
    
    
    <summary type="html">正交向量与子空间</summary>
    
    
    
    <category term="Linear_Algebra" scheme="http://david-luge.cn/categories/Linear-Algebra/"/>
    
    
    <category term="Linear_Algebra" scheme="http://david-luge.cn/tags/Linear-Algebra/"/>
    
  </entry>
  
  <entry>
    <title>线性代数13-复习</title>
    <link href="http://david-luge.cn/2025/03/28/Linear_Algebra/%E7%BA%BF%E6%80%A7%E4%BB%A3%E6%95%B0-13/"/>
    <id>http://david-luge.cn/2025/03/28/Linear_Algebra/%E7%BA%BF%E6%80%A7%E4%BB%A3%E6%95%B0-13/</id>
    <published>2025-03-28T07:13:39.000Z</published>
    <updated>2025-03-28T07:13:39.000Z</updated>
    
    <content type="html"><![CDATA[<h1 id="Linear-Algebra-复习-13"><a href="#Linear-Algebra-复习-13" class="headerlink" title="Linear Algebra-复习-13"></a>Linear Algebra-复习-13</h1><h2 id="一、知识概要"><a href="#一、知识概要" class="headerlink" title="一、知识概要"></a>一、知识概要</h2><p>本节为习题课，主要目的是回顾之前所学内容，帮助学习者掌握经典题型的解法，巩固线性代数的基础知识。</p><h2 id="二、例题"><a href="#二、例题" class="headerlink" title="二、例题"></a>二、例题</h2><h3 id="【例-1】"><a href="#【例-1】" class="headerlink" title="【例 1】"></a>【例 1】</h3><p>设<script type="math/tex">u</script>，<script type="math/tex">v</script>，<script type="math/tex">w</script>是<script type="math/tex">R^{7}</script>空间内的非零向量，由它们生成了一个属于<script type="math/tex">R^{7}</script>的向量子空间，求此空间的维数。</p><p><strong>答案</strong>：三个向量生成的空间，维数可能是 0、1、2、3。由于题设中向量为非零向量，所以维数不可能是 0，最终答案为 1、2、3。</p><p><strong>解析</strong>：向量组生成的子空间维数等于向量组的极大线性无关组所含向量的个数。在本题中，三个非零向量可能线性相关，也可能线性无关。若三个向量线性相关，极大线性无关组可能含 1 个或 2 个向量，此时子空间维数为 1 或 2；若三个向量线性无关，极大线性无关组含 3 个向量，子空间维数为 3 。</p><h3 id="【例-2】"><a href="#【例-2】" class="headerlink" title="【例 2】"></a>【例 2】</h3><p>有一个 <script type="math/tex">5×3</script>的阶梯形矩阵<script type="math/tex">U</script>，秩为3，求矩阵<script type="math/tex">U</script> 的零空间。</p><p><strong>答案</strong>：只有零向量。</p><p><strong>复习概念</strong>：</p><ol><li><strong>零空间</strong>：使得<script type="math/tex">Ax = 0</script>成立的所有解向量构成的空间。</li><li><strong>行阶梯矩阵</strong>：在矩阵中可画出一条阶梯线，线的下方全为 0，每个台阶只有一行，台阶数即是非零行的行数，阶梯线的竖线（每段竖线的长度为一行）后面的第一个元素为非零元，也就是非零行的第一个非零元。例如：</li></ol><script type="math/tex; mode=display">\begin{bmatrix}∗ & ∗ & ∗ & ∗ & ∗ \\0 & ∗ & ∗ & ∗ & ∗ \\0 & 0 & 0 & * & * \\0 & 0 & 0 & 0 & *\\0 & 0 & 0 & 0 & 0\end{bmatrix}</script><ol><li><strong>行最简形矩阵</strong>：非零行的第一个非零元都为 1，且这些非零元所在的列的其他元素都为 0。例如：</li></ol><script type="math/tex; mode=display">\begin{bmatrix}1 & 0 & 0 & 0 & 0 \\0 & 1 & 0 & 0 & 0 \\0 & 0 & 1 & 0 & 0 \\0 & 0 & 0 & 1 & 0 \\0 & 0 & 0 & 0 & 1 \\\end{bmatrix},\begin{bmatrix}1 & 0 & 2 & 0 & -2 \\0 & 1 & -1 & 0 & 3 \\0 & 0 & 0 & 1 & 4 \\0 & 0 & 0 & 0 & 0\end{bmatrix}</script><ol><li><strong>矩阵 A 右乘列向量的意义</strong>：矩阵<script type="math/tex">A</script>右乘列向量可以理解为对<script type="math/tex">A</script>各列向量的线性组合。</li></ol><p><strong>分析</strong>：由矩阵<script type="math/tex">U</script>的秩为 3 可知，其列向量线性无关。因为零空间是由满足<script type="math/tex">Ux = 0</script>的解向量构成，而列向量线性无关意味着不存在非零的线性组合能得到零向量，所以<script type="math/tex">U</script>的零空间中只有零向量。</p><h3 id="【例-3】"><a href="#【例-3】" class="headerlink" title="【例 3】"></a>【例 3】</h3><p>给定 <script type="math/tex">10×3</script>矩阵<script type="math/tex">B</script>，<script type="math/tex">B</script>中含有矩阵<script type="math/tex">R</script>和<script type="math/tex">2R</script>，即<script type="math/tex">B=\begin{bmatrix}R\\2R\end{bmatrix}</script>（<script type="math/tex">R</script>是行最简形矩阵）。求该矩阵的秩以及其阶梯型矩阵。</p><p><strong>答案</strong>：利用分块矩阵思想，<script type="math/tex">B</script>可化简为<script type="math/tex">\begin{bmatrix}R\\0\end{bmatrix}</script>，这就是<script type="math/tex">B</script>的阶梯型矩阵，它的秩即为矩阵<script type="math/tex">R</script>的秩。</p><p><strong>进一步问题</strong>：矩阵<script type="math/tex">C=\begin{bmatrix}R & R\\R & 0\end{bmatrix}</script>的行最简形是什么？</p><p><strong>解答</strong>：</p><script type="math/tex; mode=display">\begin{bmatrix}R & R\\R & 0\end{bmatrix} \xrightarrow{行变化} \begin{bmatrix}R & R\\0 & -R\end{bmatrix} \xrightarrow{提出 (-1)} \begin{bmatrix}R & R\\0 & R\end{bmatrix} \xrightarrow{行变化} \begin{bmatrix}R & 0\\0 & R\end{bmatrix}</script><p>注意：严格意义上还应当将<script type="math/tex">\begin{bmatrix}R & 0\\0 & R\end{bmatrix}</script>中<script type="math/tex">R</script>的下面零行移到最简形<script type="math/tex">\begin{bmatrix}R & 0\\0 & R\end{bmatrix}</script>整体的最下面一行，这才是标准的行最简型矩阵。</p><p><strong>再进一步问题</strong>：已知<script type="math/tex">R</script>的秩为 3，求<script type="math/tex">C</script>的转置矩阵的零空间的维数。</p><p><strong>知识回顾</strong>：矩阵的零空间的维数等于列数减去矩阵的秩（<script type="math/tex">n-r</script>），列满秩的矩阵对应零空间的维数为 0。</p><p><strong>解答</strong>：这里，<script type="math/tex">C</script>为 <script type="math/tex">10×6</script>的矩阵，则<script type="math/tex">C^{T}</script>为<script type="math/tex">6×10</script>的矩阵，<script type="math/tex">n-r=10-(3+3)=4</script>，所以其零空间的维数为 4。</p><h3 id="【例-4】"><a href="#【例-4】" class="headerlink" title="【例 4】"></a>【例 4】</h3><p>已知<script type="math/tex">Ax=\begin{bmatrix}2\\4\\2\end{bmatrix}</script>，<script type="math/tex">x=\begin{bmatrix}2\\0\\0\end{bmatrix}+c\begin{bmatrix}1\\1\\0\end{bmatrix}+d\begin{bmatrix}0\\0\\1\end{bmatrix}</script>，求<script type="math/tex">A</script>的行向量的生成空间的相关信息。</p><p><strong>分析</strong>：</p><ol><li><strong>矩阵</strong><script type="math/tex">A</script>的形状：由<script type="math/tex">Ax=\begin{bmatrix}2\\4\\2\end{bmatrix}</script>，因为是<script type="math/tex">A</script>（<script type="math/tex">m×n</script>）与<script type="math/tex">x</script>（<script type="math/tex">n×1</script>）相乘得到结果，所以<script type="math/tex">n = 3</script>，又因为结果是 <script type="math/tex">3×1</script>向量，所以<script type="math/tex">m = 3</script>，可知矩阵<script type="math/tex">A</script>的形状是<script type="math/tex">3×3</script>的。</li><li><strong>矩阵</strong><script type="math/tex">A</script>的秩：已知零空间的维数为 2，根据<script type="math/tex">n-r=2</script>，且<script type="math/tex">A</script>的列数<script type="math/tex">n = 3</script>，可得<script type="math/tex">A</script>的秩<script type="math/tex">r = 1</script> 。</li><li><strong>矩阵</strong><script type="math/tex">A</script>的具体形式：由通解<script type="math/tex">x</script>的形式，先将<script type="math/tex">c = d = 0</script>代入<script type="math/tex">Ax = b</script>方程，即<script type="math/tex">A\begin{bmatrix}2\\0\\0\end{bmatrix}=\begin{bmatrix}2\\4\\2\end{bmatrix}</script>，由此可推出<script type="math/tex">A</script>的第一行为<script type="math/tex">\begin{bmatrix}1 & 2 & 1\end{bmatrix}</script>。又因为<script type="math/tex">Ax = b</script>通解中包含了零空间<script type="math/tex">Ax = 0</script>的两个特解<script type="math/tex">\begin{bmatrix}1\\1\\0\end{bmatrix}</script>，<script type="math/tex">\begin{bmatrix}0\\0\\1\end{bmatrix}</script>，将其代入方程<script type="math/tex">Ax = 0</script>就能解出<script type="math/tex">A</script>的形式，最终确定<script type="math/tex">A=\begin{bmatrix}1 & -1 & 0\\2 & -2 & 0\\1 & -1 & 0\end{bmatrix}</script>。</li></ol><p><strong>引申问题</strong>：既然<script type="math/tex">A=\begin{bmatrix}1 & -1 & 0\\2 & -2 & 0\\1 & -1 & 0\end{bmatrix}</script>，那么当<script type="math/tex">b</script>满足何种条件时，<script type="math/tex">Ax = b</script>有解？</p><p><strong>分析</strong>：由之前几节的结论知道，当<script type="math/tex">b</script>属于矩阵的列空间时有解。对于<script type="math/tex">A</script>矩阵来说，其列向量线性相关，实际上只有一列对线性组合有贡献。</p><p><strong>答案</strong>：<script type="math/tex">b</script>向量应当满足<script type="math/tex">b = c\begin{bmatrix}1\\2\\1\end{bmatrix}</script>（<script type="math/tex">c</script>为任意常数）。</p><h3 id="【例-5】"><a href="#【例-5】" class="headerlink" title="【例 5】"></a>【例 5】</h3><p>如果一个方阵<script type="math/tex">A</script>的零空间只包含零向量，那它转置矩阵的零空间呢？</p><p><strong>答案</strong>：也只包含零向量。</p><p><strong>解析</strong>：根据矩阵的性质，方阵<script type="math/tex">A</script>与其转置矩阵<script type="math/tex">A^{T}</script>的秩相等。已知<script type="math/tex">A</script>的零空间只包含零向量，说明<script type="math/tex">A</script>满秩，那么<script type="math/tex">A^{T}</script>也满秩，所以<script type="math/tex">A^{T}</script>的零空间同样只包含零向量。</p><h3 id="【例-6】"><a href="#【例-6】" class="headerlink" title="【例 6】"></a>【例 6】</h3><p>5 阶可逆方阵是否构成向量空间？</p><p><strong>答案</strong>：否。因为向量空间必须包含零向量，而 5 阶可逆方阵中不包含零矩阵，所以肯定不是向量空间。</p><h3 id="【例-7】"><a href="#【例-7】" class="headerlink" title="【例 7】"></a>【例 7】</h3><p>存在除零矩阵外的平方为零的矩阵吗？</p><p><strong>答案</strong>：存在，例如<script type="math/tex">B=\begin{bmatrix}0 & 1\\0 & 0\end{bmatrix}</script> 。这个例子在后续学习中对于理解特殊矩阵的性质很重要。</p><h3 id="【例-8】"><a href="#【例-8】" class="headerlink" title="【例 8】"></a>【例 8】</h3><p>方阵的列线性无关，<script type="math/tex">Ax = b</script>是否总是有解？</p><p><strong>分析</strong>：因为矩阵列线性无关且为方阵，所以该方阵可逆。在之前学习消元矩阵时提到，可逆矩阵可以通过消元回代求解。所以此时<script type="math/tex">Ax = b</script>总是可解的。</p><h3 id="【例-9】"><a href="#【例-9】" class="headerlink" title="【例 9】"></a>【例 9】</h3><p>研究矩阵<script type="math/tex">B</script>的零空间，已知<script type="math/tex">B</script>是 <script type="math/tex">3×4</script>矩阵，由一个可逆矩阵<script type="math/tex">\begin{bmatrix}1 & 1 & 0\\0 & 1 & 0\\1 & 0 & 1\end{bmatrix}</script>左乘矩阵<script type="math/tex">\begin{bmatrix}1 & 0 & -1 & 2\\0 & 1 & 1 & -1\\0 & 0 & 0 & 0\end{bmatrix}</script> 得到。</p><p><strong>解答</strong>：首先，<script type="math/tex">B</script>有四个列向量，所以<script type="math/tex">B</script>的零空间必是<script type="math/tex">R^{4}</script>的子空间。引入结论：假设有矩阵<script type="math/tex">C</script>，<script type="math/tex">D</script>，当<script type="math/tex">C</script>可逆的时候，<script type="math/tex">N(CD)=N(D)</script>（<script type="math/tex">N(A)</script>表示<script type="math/tex">A</script>的零空间），原因是可以对<script type="math/tex">CDx = 0</script>两侧同时乘上<script type="math/tex">C^{-1}</script> 。回到本题，<script type="math/tex">B</script>零空间的求解只取决于矩阵<script type="math/tex">\begin{bmatrix}1 & 0 & -1 & 2\\0 & 1 & 1 & -1\\0 & 0 & 0 & 0\end{bmatrix}</script> ，通过计算，或者直接使用之前介绍过的结论（第 7 课），可得<script type="math/tex">B</script>零空间的基为<script type="math/tex">\begin{bmatrix}1\\ -1\\1\\0\end{bmatrix}</script>，<script type="math/tex">\begin{bmatrix}-2\\1\\0\\1\end{bmatrix}</script>。</p><p><strong>进一步问题</strong>：求<script type="math/tex">Bx=\begin{bmatrix}1\\0\\1\end{bmatrix}</script>的通解。</p><p><strong>分析</strong>：先分析其特解，观察<script type="math/tex">B</script>的第一列，<script type="math/tex">B</script>的第一列恰好就是等式右侧的<script type="math/tex">b=\begin{bmatrix}1\\0\\1\end{bmatrix}</script> 。在<script type="math/tex">Ax = b</script>中，如果<script type="math/tex">b</script>与<script type="math/tex">A</script>中一个列向量相同，则可以直接写出一个特解，即该列系数为 1，其余列系数为 0 的线性组合方式，所以这里的一个特解为<script type="math/tex">\begin{bmatrix}1\\0\\0\\0\end{bmatrix}</script> 。而零空间的基之前已讨论得出，所以通解即可求出。</p><h3 id="【例-10】"><a href="#【例-10】" class="headerlink" title="【例 10】"></a>【例 10】</h3><p>如果矩阵是方阵，是否意味着矩阵的行空间等于列空间？</p><p><strong>答案</strong>：错误，反例：<script type="math/tex">B=\begin{bmatrix}0 & 1\\0 & 0\end{bmatrix}</script> 。该矩阵的行空间是由向量<script type="math/tex">(0, 1)</script>张成的空间，列空间是由向量<script type="math/tex">(1, 0)</script>张成的空间，二者不相等。</p><h3 id="【例-11】"><a href="#【例-11】" class="headerlink" title="【例 11】"></a>【例 11】</h3><p>如果<script type="math/tex">A</script>与<script type="math/tex">B</script>的四个子空间相同，则<script type="math/tex">A</script>是<script type="math/tex">B</script>的倍数？</p><p><strong>答案</strong>：错误，例如：任意的可逆矩阵的四个子空间都相同，但它们不一定成倍数关系。</p><h3 id="【例-12】"><a href="#【例-12】" class="headerlink" title="【例 12】"></a>【例 12】</h3><p>给定矩阵<script type="math/tex">A</script>，交换其中的两行，哪些子空间没变？</p><p><strong>答案</strong>：行空间与零空间。交换矩阵的两行，行向量组的线性相关性不变，所以行空间不变；同时，<script type="math/tex">Ax = 0</script>的解的情况也不变，所以零空间不变。</p><h3 id="【例-13】"><a href="#【例-13】" class="headerlink" title="【例 13】"></a>【例 13】</h3><p>为什么向量<script type="math/tex">(1, 2, 3)</script>不能既是<script type="math/tex">A</script>的某一行，又在<script type="math/tex">A</script>零空间中？</p><p><strong>分析</strong>：直接代入方程<script type="math/tex">Ax = 0</script>，若向量<script type="math/tex">(1, 2, 3)</script>是<script type="math/tex">A</script>的某一行，设<script type="math/tex">A=\begin{bmatrix}1 & 2 & 3\\ \cdot & \cdot & \cdot\\ \cdot & \cdot & \cdot\end{bmatrix}</script>，则<script type="math/tex">\begin{bmatrix}1 & 2 & 3\\ \cdot & \cdot & \cdot\\ \cdot & \cdot & \cdot\end{bmatrix}\begin{bmatrix}1\\2\\3\end{bmatrix}=\begin{bmatrix}1\times1 + 2\times2 + 3\times3\\ \cdot\\ \cdot\end{bmatrix}=\begin{bmatrix}14\\ \cdot\\ \cdot\end{bmatrix}\neq\begin{bmatrix}0\\0\\0\end{bmatrix}</script>，等式不成立。</p><p><strong>结论</strong>：给定矩阵，其行空间与零空间共享的向量只能是零向量（以后会提到：矩阵的零空间与行空间正交）。</p><h2 id="三、学习感悟"><a href="#三、学习感悟" class="headerlink" title="三、学习感悟"></a>三、学习感悟</h2><p>这节复习课结束，意味着线性代数这一部分的基础内容告一段落。接下来的课程将围绕正交、特征值等概念展开讨论，这些内容将进一步深化对线性代数的理解和应用。</p>]]></content>
    
    
    <summary type="html">复习</summary>
    
    
    
    <category term="Linear_Algebra" scheme="http://david-luge.cn/categories/Linear-Algebra/"/>
    
    
    <category term="Linear_Algebra" scheme="http://david-luge.cn/tags/Linear-Algebra/"/>
    
  </entry>
  
  <entry>
    <title>线性代数12-矩阵应用:图与网络</title>
    <link href="http://david-luge.cn/2025/03/28/Linear_Algebra/%E7%BA%BF%E6%80%A7%E4%BB%A3%E6%95%B0-12/"/>
    <id>http://david-luge.cn/2025/03/28/Linear_Algebra/%E7%BA%BF%E6%80%A7%E4%BB%A3%E6%95%B0-12/</id>
    <published>2025-03-28T07:12:39.000Z</published>
    <updated>2025-03-28T07:12:39.000Z</updated>
    
    <content type="html"><![CDATA[<h1 id="Linear-Algebra-矩阵应用-图与网络-12"><a href="#Linear-Algebra-矩阵应用-图与网络-12" class="headerlink" title="Linear Algebra-矩阵应用:图与网络-12"></a>Linear Algebra-矩阵应用:图与网络-12</h1><h2 id="一、知识概要"><a href="#一、知识概要" class="headerlink" title="一、知识概要"></a>一、知识概要</h2><p>本节重点阐述图与矩阵之间的紧密联系，借助矩阵来展现图的特性。与前面几节内容不同，之前例子中的矩阵元素大多是为解释性质而设定的，而本节矩阵元素均源于实际问题，这能更直观地体现之前所学矩阵性质在实际场景中的应用价值。</p><h2 id="二、图和关联矩阵"><a href="#二、图和关联矩阵" class="headerlink" title="二、图和关联矩阵"></a>二、图和关联矩阵</h2><p>我们先来看一个有向图（图一）：</p><p><img src="https://cdn.jsdelivr.net/gh/XduDavid/Blog_Img/Linear_Algebra120.png" alt="Linear_Algebra120"></p><p>在本节中，我们围绕这个有向图展开研究。对于有向图，我们可以写出它的关联矩阵 <script type="math/tex">A</script>，如下：</p><script type="math/tex; mode=display">A=\begin{bmatrix} -1 & 1 & 0 & 0 \\ 0 & -1 & 1 & 0 \\ -1 & 0 & 1 & 0 \\ -1 & 0 & 0 & 1 \\ 0 & 0 & -1 & 1 \end{bmatrix}</script><p>对于不太熟悉关联矩阵的读者，这里简单介绍一下。在这个 <script type="math/tex">5×4</script> 的矩阵中，每一列对应一个节点，例如第一列代表节点 1，第二列代表节点 2，以此类推；每一行则代表一条边的走向，第一行代表边 1，第二行代表边 2，依此类推。需要注意的是，在每一行所代表的边中，若该边以某个节点为起点，那么在矩阵中对应元素为 -1；若以某个节点为终点，对应元素则为 1。</p><p>以第一行为例，第一行代表边 1 的特征。在图（一）中，边 1 从节点 1 出发，到达节点 2，这在矩阵中就表现为 <script type="math/tex">A_{11} = -1</script>，<script type="math/tex">A_{12} = 1</script>。其他行以此类推。</p><p>接下来，我们探讨图（一）所代表的实际意义。</p><p>【例】假设 <script type="math/tex">x</script> 表示每个节点上的电势，研究 <script type="math/tex">Ax = b</script> 这种形式能得出哪些结论。</p><ol><li>当 <script type="math/tex">b</script><strong>为零向量</strong>时：此时需要求解 <script type="math/tex">Ax = 0</script>，即：</li></ol><script type="math/tex; mode=display">Ax=\begin{bmatrix} -1 & 1 & 0 & 0 \\ 0 & -1 & 1 & 0 \\ -1 & 0 & 1 & 0 \\ -1 & 0 & 0 & 1 \\ 0 & 0 & -1 & 1 \end{bmatrix}\begin{bmatrix}x_1 \\ x_2 \\ x_3 \\ x_4\end{bmatrix}=\begin{bmatrix}x_2 - x_1 \\ x_3 - x_2 \\ x_3 - x_1 \\ x_4 - x_1 \\ x_4 - x_3\end{bmatrix}=\begin{bmatrix}0 \\ 0 \\ 0 \\ 0 \\ 0\end{bmatrix}</script><p>求解上述方程组可得：<script type="math/tex">x = C\begin{bmatrix}1 \\ 1 \\ 1 \\ 1\end{bmatrix}</script>（<script type="math/tex">C</script> 为常数）。</p><p>因为 <script type="math/tex">x</script> 代表各个节点的电势，所以 <script type="math/tex">x</script> 的解集表明当 <script type="math/tex">b = 0</script> 时，各点电势必须相等。我们知道，电势差与电流的形成密切相关，<script type="math/tex">b = 0</script> 意味着各条边上都没有电流（即电势差为零），而最终解得各点电势相等时边上电流为 0，这与我们的物理常识相符。</p><ol><li>当 <script type="math/tex">b</script><strong>不为零</strong>时：我们可以通过特解加上通解的方法，求出在不同 <script type="math/tex">b</script> 值情况下方程的解。这些解代表了<strong>在不同电势差情况下，各点电势的大小</strong>。</li></ol><p>接下来研究左零空间 <script type="math/tex">A^T y = 0</script> 的特点。首先，矩阵 <script type="math/tex">A</script> 的转置为：</p><script type="math/tex; mode=display">A^T=\begin{bmatrix} -1 & 0 & -1 & -1 & 0 \\ 1 & -1 & 0 & 0 & 0 \\ 0 & 1 & 1 & 0 & -1 \\ 0 & 0 & 0 & 1 & 1 \end{bmatrix}</script><p>然后求解方程 <script type="math/tex">A^T y = 0</script>，即：</p><script type="math/tex; mode=display">A^T y=\begin{bmatrix} -1 & 0 & -1 & -1 & 0 \\ 1 & -1 & 0 & 0 & 0 \\ 0 & 1 & 1 & 0 & -1 \\ 0 & 0 & 0 & 1 & 1 \end{bmatrix}\begin{bmatrix}y_1 \\ y_2 \\ y_3 \\ y_4 \\ y_5\end{bmatrix}=\begin{bmatrix}0 \\ 0 \\ 0 \\ 0 \\ 0\end{bmatrix}</script><p>A转置后，<script type="math/tex">y</script> 有五个分量，是对 <script type="math/tex">A^T</script> 的行进行线性组合。由于 <script type="math/tex">A^T</script> 的行代表 1 - 5 边，结合前面的例子背景，这里求解的就是流过每条边的电流。</p><p>求解该方程可得：</p><script type="math/tex; mode=display">-y_1 - y_3 - y_4 = 0</script><script type="math/tex; mode=display">y_1 - y_2 = 0</script><script type="math/tex; mode=display">y_2 + y_3 - y_5 = 0</script><script type="math/tex; mode=display">y_4 + y_5 = 0</script><p>这些方程体现了<strong>基尔霍夫定律</strong>，即<strong>每个节点流入和流出的电流相同</strong>。每个方程分别代表一个节点的电流情况，最终解得的 <script type="math/tex">\begin{bmatrix}y_1 & y_2 & y_3 & y_4 & y_5\end{bmatrix}</script> 就是满足这一特性的各条边的电流值。</p><h2 id="三、实际应用的扩展"><a href="#三、实际应用的扩展" class="headerlink" title="三、实际应用的扩展"></a>三、实际应用的扩展</h2><p><script type="math/tex">Ax = \begin{bmatrix}x_2 - x_1 & x_3 - x_2 & x_3 - x_1 & x_4 - x_1 & x_4 - x_3\end{bmatrix}</script>，这个式子表示每两点之间的电势差。该方程将图的特征（通过矩阵 <script type="math/tex">A</script> 体现）与各点电势（x）紧密联系起来。</p><p>在研究 <script type="math/tex">A^T y</script> 时，其中的 <script type="math/tex">y</script> 代表各个边上的电流。结合电流与电势差的关系，我们联想到初中所学的欧姆定律。电流与电压之间存在一个比例系数，假设用矩阵 <script type="math/tex">C</script> 表示，即有：</p><p><script type="math/tex">\begin{bmatrix}y_1 \\ y_2 \\ y_3 \\ y_4\end{bmatrix}=C\begin{bmatrix}x_2 - x_1 \\ x_3 - x_2 \\ x_3 - x_1 \\ x_4 - x_3\end{bmatrix}=C Ax</script>，也就是 <script type="math/tex">y = CAx</script>。</p><p>这样，我们就成功地用矩阵表示了图像、电流和电势差这些概念。</p><p>进一步拓展，前面研究的 <script type="math/tex">A^T y = 0</script> 是<strong>无源场</strong>的情况。如果存在外加电源，可表示为 <script type="math/tex">A^T y = f</script>（<script type="math/tex">f</script> 表示外加电源的影响）。结合前面得到的 <script type="math/tex">y = CAx</script>，最终得到式子：<script type="math/tex">A^T CAx = f</script>。</p><h2 id="四、学习感悟"><a href="#四、学习感悟" class="headerlink" title="四、学习感悟"></a>四、学习感悟</h2><p>本节内容与之前所学知识联系紧密，同时与实际应用的结合也十分紧密。从一个有向图出发，结合实际物理问题，详细解释了如何运用矩阵来阐述欧姆定律和基尔霍夫定律。学习完本节后，我们对之前所学的各种空间在实际问题中的作用有了更深入、更切实的理解，真正体会到线性代数知识的实用性和广泛应用。</p>]]></content>
    
    
    <summary type="html">矩阵应用:图与网络</summary>
    
    
    
    <category term="Linear_Algebra" scheme="http://david-luge.cn/categories/Linear-Algebra/"/>
    
    
    <category term="Linear_Algebra" scheme="http://david-luge.cn/tags/Linear-Algebra/"/>
    
  </entry>
  
  <entry>
    <title>线性代数11-矩阵空间,秩1矩阵</title>
    <link href="http://david-luge.cn/2025/03/28/Linear_Algebra/%E7%BA%BF%E6%80%A7%E4%BB%A3%E6%95%B0-11/"/>
    <id>http://david-luge.cn/2025/03/28/Linear_Algebra/%E7%BA%BF%E6%80%A7%E4%BB%A3%E6%95%B0-11/</id>
    <published>2025-03-28T07:11:39.000Z</published>
    <updated>2025-03-28T07:11:39.000Z</updated>
    
    <content type="html"><![CDATA[<h1 id="Linear-Algebra-矩阵空间-秩-1-矩阵-11"><a href="#Linear-Algebra-矩阵空间-秩-1-矩阵-11" class="headerlink" title="Linear Algebra-矩阵空间,秩 1 矩阵-11"></a>Linear Algebra-矩阵空间,秩 1 矩阵-11</h1><h2 id="一、知识概要"><a href="#一、知识概要" class="headerlink" title="一、知识概要"></a>一、知识概要</h2><p>上节末尾我们介绍了矩阵空间，它是一种延伸的向量空间。本节将从矩阵空间入手，探讨矩阵空间的维数、基等问题，揭示微分方程与线性代数之间的联系，并剖析秩为 1 的矩阵的特点。</p><h2 id="二、矩阵空间"><a href="#二、矩阵空间" class="headerlink" title="二、矩阵空间"></a>二、矩阵空间</h2><p>在上一节的基础上，我们将所有 3×3 的矩阵视为“向量空间”中的元素。在由所有 3×3 矩阵构成的集合中，矩阵之间的加法与数乘矩阵运算都是封闭的。因此，这个集合 M 可以被称作空间。</p><p>上节提到，M 有两个基本的子空间：</p><ol><li><strong>对称矩阵 S</strong>：对称矩阵满足矩阵转置等于自身，即<script type="math/tex">A^T = A</script>。</li><li><strong>上三角矩阵 U</strong>：上三角矩阵主对角线以下的元素均为 0。</li></ol><p>在这两个矩阵集合中，加法封闭与数乘封闭的性质很容易证明。例如，对于对称矩阵<script type="math/tex">A</script>和<script type="math/tex">B</script>，以及实数<script type="math/tex">k</script>，<script type="math/tex">(A + B)^T = A^T + B^T = A + B</script>，<script type="math/tex">(kA)^T = kA^T = kA</script>，这就证明了对称矩阵集合对加法和数乘封闭；上三角矩阵同理。</p><p>而 S 与 U 空间相交，得到另一个子空间：对角阵 D。对角阵既是对称矩阵，又是上三角矩阵，其主对角线以外的元素都为 0。</p><h3 id="2-1-基与维数"><a href="#2-1-基与维数" class="headerlink" title="2.1 基与维数"></a>2.1 基与维数</h3><ol><li><strong>M 的基与维数</strong>：M 的基与<script type="math/tex">R^9</script>的基类似。对于<script type="math/tex">R^9</script>，其标准基是 9 个单位向量，每个向量只有一个分量为 1，其余分量为 0。在 3×3 矩阵空间 M 中，其基可以表示为：</li></ol><script type="math/tex; mode=display">\left[\begin{array}{lll}1 & 0 & 0 \\ 0 & 0 & 0 \\ 0 & 0 & 0\end{array}\right],\left[\begin{array}{lll}0 & 1 & 0 \\ 0 & 0 & 0 \\ 0 & 0 & 0\end{array}\right],\left[\begin{array}{lll}0 & 0 & 1 \\ 0 & 0 & 0 \\ 0 & 0 & 0\end{array}\right], \cdots,\left[\begin{array}{lll}0 & 0 & 0 \\ 0 & 0 & 0 \\ 0 & 0 & 1\end{array}\right]</script><p>由于 3×3 矩阵有 9 个元素，所以 M 的维数为 9。这就如同在<script type="math/tex">R^9</script>向量空间中，需要 9 个线性无关的向量才能构成基，从而确定空间的维数。</p><ol><li><strong>S 与 U 的基与维数</strong>：对称矩阵 S 的基有 6 个，如下：</li></ol><script type="math/tex; mode=display">\left[\begin{array}{lll}1 & 0 & 0 \\ 0 & 0 & 0 \\ 0 & 0 & 0\end{array}\right],\left[\begin{array}{lll}0 & 1 & 0 \\ 1 & 0 & 0 \\ 0 & 0 & 0\end{array}\right],\left[\begin{array}{lll}0 & 0 & 0 \\ 0 & 1 & 0 \\ 0 & 0 & 0\end{array}\right],\left[\begin{array}{lll}0 & 0 & 1 \\ 0 & 0 & 0 \\ 1 & 0 & 0\end{array}\right],\left[\begin{array}{lll}0 & 0 & 0 \\ 0 & 0 & 1 \\ 0 & 1 & 0\end{array}\right],\left[\begin{array}{lll}0 & 0 & 0 \\ 0 & 0 & 0 \\ 0 & 0 & 1\end{array}\right]</script><p>上三角矩阵 U 的基也有 6 个：</p><script type="math/tex; mode=display">\left[\begin{array}{lll}1 & 0 & 0 \\ 0 & 0 & 0 \\ 0 & 0 & 0\end{array}\right],\left[\begin{array}{lll}0 & 1 & 0 \\ 0 & 0 & 0 \\ 0 & 0 & 0\end{array}\right],\left[\begin{array}{lll}0 & 0 & 1 \\ 0 & 0 & 0 \\ 0 & 0 & 0\end{array}\right],\left[\begin{array}{lll}0 & 0 & 0 \\ 0 & 1 & 0 \\ 0 & 0 & 0\end{array}\right],\left[\begin{array}{lll}0 & 0 & 0 \\ 0 & 0 & 1 \\ 0 & 0 & 0\end{array}\right],\left[\begin{array}{lll}0 & 0 & 0 \\ 0 & 0 & 0 \\ 0 & 0 & 1\end{array}\right]</script><p>所以 S 和 U 的维数都是 6。这里要强调的是，矩阵基与向量在形式上有所不同。向量的基通常是简单的数值向量，而矩阵基则是由矩阵构成，其元素的排列和性质与矩阵的运算规则紧密相关。</p><ol><li><strong>对角阵 D 的基与维数</strong>：对角阵 D 的基很明显只有 3 个：</li></ol><script type="math/tex; mode=display">\left[\begin{array}{lll}1 & 0 & 0 \\ 0 & 0 & 0 \\ 0 & 0 & 0\end{array}\right],\left[\begin{array}{lll}0 & 0 & 0 \\ 0 & 1 & 0 \\ 0 & 0 & 0\end{array}\right],\left[\begin{array}{lll}0 & 0 & 0 \\ 0 & 0 & 0 \\ 0 & 0 & 1\end{array}\right]</script><p>所以对角阵 D 的维数为 3，其基正好是 S 与 U 的交集。用数学符号表示为：<script type="math/tex">dim(S \cap U)=3</script>。</p><ol><li><strong>S + U 的维数</strong>：在向量空间中，两个子空间的并集通常不是向量空间，因为两个向量相加可能会超出这个并集的范围。而<script type="math/tex">S + U</script>这个集合，包含了 S 与 U 的线性组合，即任意对称阵加上任意上三角矩阵的和都在这个集合里。实际上，<script type="math/tex">S + U</script>这个集合就是 M。所以<script type="math/tex">S + U</script>的维数是 9。</li></ol><p>联系上述所有维数，存在这样一个等式：</p><script type="math/tex; mode=display">dim(S)+dim(U)=dim(S \cap U)+dim(S + U)</script><p>代入具体维数可得：<script type="math/tex">6 + 6 = 3 + 9</script></p><h3 id="2-2-微分方程"><a href="#2-2-微分方程" class="headerlink" title="2.2 微分方程"></a>2.2 微分方程</h3><p>“空间”的概念应用广泛，线性空间中的元素不仅可以是向量、矩阵，还可以是方程的解。</p><p>以解微分方程<script type="math/tex">\frac{d^{2} y}{d x^{2}}+y=0</script>为例，在实数范围内，该微分方程有两个特解：<script type="math/tex">y = \sin x</script>与<script type="math/tex">y = \cos x</script>。而它的所有解都是这两个特解的线性组合，即<script type="math/tex">y = c_1\cos x + c_2\sin x</script>。</p><p>这与零空间的概念类似，我们可以将这些解看作线性空间中的元素，称其为解空间。解空间中的元素满足线性运算封闭条件，即如果<script type="math/tex">y_1 = c_{11}\cos x + c_{12}\sin x</script>和<script type="math/tex">y_2 = c_{21}\cos x + c_{22}\sin x</script>是解空间中的两个解，那么<script type="math/tex">y_1 + y_2 = (c_{11} + c_{21})\cos x + (c_{12} + c_{22})\sin x</script>也是解，<script type="math/tex">ky_1 = kc_{11}\cos x + kc_{12}\sin x</script>（<script type="math/tex">k</script>为实数）同样是解。</p><p>从空间的角度来看，这个解空间的两个基就是<script type="math/tex">\cos x</script>与<script type="math/tex">\sin x</script>，它们的线性组合构成了解空间，所以解空间的维数为 2。</p><h2 id="三、秩一矩阵"><a href="#三、秩一矩阵" class="headerlink" title="三、秩一矩阵"></a>三、秩一矩阵</h2><h3 id="3-1-秩一矩阵的优点"><a href="#3-1-秩一矩阵的优点" class="headerlink" title="3.1 秩一矩阵的优点"></a>3.1 秩一矩阵的优点</h3><ol><li><strong>易于分解</strong>：对于矩阵<script type="math/tex">A=\left[\begin{array}{lll}1 & 4 & 5 \\ 2 & 8 & 10\end{array}\right]</script>，很明显它的秩为 1。因为第二行元素是第一行元素的 2 倍，满足秩一矩阵的特点，即每一行都是第一行的倍数。这类矩阵可以分解为一列乘一行的形式，<script type="math/tex">A=\left[\begin{array}{lll}1 & 4 & 5 \\ 2 & 8 & 10\end{array}\right]=\left[\begin{array}{l}1 \\ 2\end{array}\right]\left[\begin{array}{lll}1 & 4 & 5\end{array}\right]</script>。一般地，秩一矩阵都可以写为<script type="math/tex">A = UV^T</script>的形式，其中<script type="math/tex">U</script>是列向量，<script type="math/tex">V^T</script>是行向量。</li><li><strong>可搭建其他矩阵</strong>：秩一矩阵还可以用来“搭建”其他矩阵。例如，秩为 4 的矩阵可以通过四个秩一矩阵搭建出来。这一过程类似于矩阵乘法中的“列乘行”形式，通过一列一行的组合搭出一个矩阵。假设要搭建一个秩为 4 的矩阵<script type="math/tex">B</script>，可以找到四个线性无关的秩一矩阵<script type="math/tex">A_1 = U_1V_1^T</script>，<script type="math/tex">A_2 = U_2V_2^T</script>，<script type="math/tex">A_3 = U_3V_3^T</script>，<script type="math/tex">A_4 = U_4V_4^T</script>，然后通过线性组合<script type="math/tex">B = k_1A_1 + k_2A_2 + k_3A_3 + k_4A_4</script>（<script type="math/tex">k_1,k_2,k_3,k_4</script>为非零实数）来构造。</li></ol><h3 id="3-2-空间角度解释同秩矩阵"><a href="#3-2-空间角度解释同秩矩阵" class="headerlink" title="3.2 空间角度解释同秩矩阵"></a>3.2 空间角度解释同秩矩阵</h3><p>从空间角度看，所有秩为 4 的矩阵构成的集合 M 不能称之为空间。原因主要有两点：</p><ol><li><strong>不包含零向量</strong>：零矩阵的秩为 0，而不是 4，所以集合 M 中不包含零向量。在线性空间的定义中，零向量是必须存在的元素。</li><li><strong>对加法不封闭</strong>：根据矩阵秩的性质<script type="math/tex">R(A + B) \leq R(A) + R(B)</script>，两个秩为 4 的矩阵相加，结果的秩可能小于或等于 8，但不一定等于 4。例如，对于矩阵<script type="math/tex">A=\left[\begin{array}{cccc}1 & 0 & 0 & 0 \\ 0 & 1 & 0 & 0 \\ 0 & 0 & 1 & 0 \\ 0 & 0 & 0 & 1\end{array}\right]</script>和<script type="math/tex">B=\left[\begin{array}{cccc}-1 & 0 & 0 & 0 \\ 0 & -1 & 0 & 0 \\ 0 & 0 & -1 & 0 \\ 0 & 0 & 0 & -1\end{array}\right]</script>，<script type="math/tex">A + B</script>是零矩阵，秩为 0，这表明两个秩为 4 的矩阵相加，结果的秩可能发生变化，不满足对加法封闭的条件。所以所有秩为 4 的矩阵集合并不能构成空间。同理，秩为 1 的矩阵集合也不能构成空间。</li></ol><h3 id="3-3-子空间的转化"><a href="#3-3-子空间的转化" class="headerlink" title="3.3 子空间的转化"></a>3.3 子空间的转化</h3><p>通过以下例子加深对子空间的理解：</p><p>在四维空间中，向量<script type="math/tex">v=\left[\begin{array}{l}v_1 \\ v_2 \\ v_3 \\ v_4\end{array}\right]</script>都满足<script type="math/tex">v_1 + v_2 + v_3 + v_4 = 0</script>，设这样的向量构成的集合为 S。</p><p>首先判断 S 是否为子空间：</p><ol><li><strong>加法封闭</strong>：设<script type="math/tex">v=\left[\begin{array}{l}v_1 \\ v_2 \\ v_3 \\ v_4\end{array}\right]</script>，<script type="math/tex">w=\left[\begin{array}{l}w_1 \\ w_2 \\ w_3 \\ w_4\end{array}\right]</script>都属于 S，即<script type="math/tex">v_1 + v_2 + v_3 + v_4 = 0</script>，<script type="math/tex">w_1 + w_2 + w_3 + w_4 = 0</script>。那么<script type="math/tex">v + w=\left[\begin{array}{l}v_1 + w_1 \\ v_2 + w_2 \\ v_3 + w_3 \\ v_4 + w_4\end{array}\right]</script>，且<script type="math/tex">(v_1 + w_1)+(v_2 + w_2)+(v_3 + w_3)+(v_4 + w_4)=(v_1 + v_2 + v_3 + v_4)+(w_1 + w_2 + w_3 + w_4)=0</script>，所以<script type="math/tex">v + w</script>也属于 S，满足加法封闭。</li><li><strong>数乘封闭</strong>：对于任意实数<script type="math/tex">k</script>，<script type="math/tex">kv=\left[\begin{array}{l}kv_1 \\ kv_2 \\ kv_3 \\ kv_4\end{array}\right]</script>，且<script type="math/tex">kv_1 + kv_2 + kv_3 + kv_4 = k(v_1 + v_2 + v_3 + v_4)=0</script>，所以<script type="math/tex">kv</script>也属于 S，满足数乘封闭。</li><li><strong>包含零向量</strong>：当<script type="math/tex">v_1 = v_2 = v_3 = v_4 = 0</script>时，满足<script type="math/tex">v_1 + v_2 + v_3 + v_4 = 0</script>，即零向量属于 S。</li></ol><p>综上，S 是一个子空间。</p><p>接下来求 S 的维数：</p><p>假设有一矩阵<script type="math/tex">A=\left[\begin{array}{llll}1 & 1 & 1 & 1\end{array}\right]</script>，由 S 中<script type="math/tex">v</script>的特殊性质，可得<script type="math/tex">Av=\left[\begin{array}{llll}1 & 1 & 1 & 1\end{array}\right]\left[\begin{array}{l}v_1 \\ v_2 \\ v_3 \\ v_4\end{array}\right]=v_1 + v_2 + v_3 + v_4 = 0</script>。</p><p>这样就通过 A 构造了一个<script type="math/tex">Ax = 0</script>的方程，将 S 空间转化为了 A 的零空间。此时问题转化为求此零空间的基和维数。</p><p>矩阵 A 的秩<script type="math/tex">r</script>为 1，列数<script type="math/tex">n = 4</script>。根据秩的定义，主元只有一个，自由变元有<script type="math/tex">n-r=4-1=3</script>个。</p><p>所以 S 的零空间是三维空间，其基为<script type="math/tex">Av = 0</script>的三个特解：</p><script type="math/tex; mode=display">\left[\begin{array}{r}-1 \\ 1 \\ 0 \\ 0\end{array}\right],\left[\begin{array}{r}-1 \\ 0 \\ 1 \\ 0\end{array}\right],\left[\begin{array}{r}-1 \\ 0 \\ 0 \\ 1\end{array}\right]</script><p>最后回顾 A 的列空间与左零空间：</p><ol><li><strong>列空间</strong>：<script type="math/tex">A=\left[\begin{array}{llll}1 & 1 & 1 & 1\end{array}\right]</script>，它的列空间的基就是<script type="math/tex">R^1</script>的基，其线性组合构成的空间就是<script type="math/tex">R^1</script>。所以 A 列空间即为<script type="math/tex">R^1</script>。</li><li><strong>左零空间</strong>：A 的左零空间是线性组合各行得到零向量的方式。对于<script type="math/tex">A=\left[\begin{array}{llll}1 & 1 & 1 & 1\end{array}\right]</script>，很显然它的左零空间只有零向量。</li></ol><h2 id="四、小世界图"><a href="#四、小世界图" class="headerlink" title="四、小世界图"></a>四、小世界图</h2><p>这部分内容是为下一节“图与网络”做铺垫，主要介绍图与矩阵之间的关联。</p><p>给定一个包含五个节点和六条边的图，可以用一个 5×6 的矩阵来表示其中的所有信息，具体表示方法将在下节课详细讲解。</p><p><img src="https://cdn.jsdelivr.net/gh/XduDavid/Blog_Img/Wz6mbsBNQokk46xpF49cOtMXncg.png" alt="Wz6mbsBNQokk46xpF49cOtMXncg"></p><p>此外，“六度分割理论”大家可能有所耳闻，该理论指出任何两位素不相识的人之间，通过一定的联系方式，总能够产生必然联系或关系。在这个理论中，将人抽象成点，将联系抽象为图，这体现了图在描述关系网络方面的应用，也进一步说明了图与矩阵之间存在着某种潜在的联系，具体内容同样留到下节课探讨。</p><h2 id="五、学习感悟"><a href="#五、学习感悟" class="headerlink" title="五、学习感悟"></a>五、学习感悟</h2><p>本节主要介绍了线性空间，包括矩阵空间、解空间等具体类型。秩一矩阵不仅将之前学习的矩阵乘法列乘行方式联系起来，而且其易于分解的特点使其在矩阵构造中具有重要作用。通过对这些内容的学习，我们对线性代数的知识体系有了更深入的理解，也为后续学习图与网络等相关内容奠定了基础。</p>]]></content>
    
    
    <summary type="html">矩阵空间,秩1矩阵</summary>
    
    
    
    <category term="Linear_Algebra" scheme="http://david-luge.cn/categories/Linear-Algebra/"/>
    
    
    <category term="Linear_Algebra" scheme="http://david-luge.cn/tags/Linear-Algebra/"/>
    
  </entry>
  
  <entry>
    <title>线性代数10-四个基本子空间</title>
    <link href="http://david-luge.cn/2025/03/28/Linear_Algebra/%E7%BA%BF%E6%80%A7%E4%BB%A3%E6%95%B0-10/"/>
    <id>http://david-luge.cn/2025/03/28/Linear_Algebra/%E7%BA%BF%E6%80%A7%E4%BB%A3%E6%95%B0-10/</id>
    <published>2025-03-28T07:10:39.000Z</published>
    <updated>2025-03-28T07:10:39.000Z</updated>
    
    <content type="html"><![CDATA[<h1 id="Linear-Algebra-四个基本子空间-10"><a href="#Linear-Algebra-四个基本子空间-10" class="headerlink" title="Linear Algebra-四个基本子空间-10"></a>Linear Algebra-四个基本子空间-10</h1><h2 id="一、知识概要"><a href="#一、知识概要" class="headerlink" title="一、知识概要"></a>一、知识概要</h2><p>此前介绍过列空间、零空间，但对于一个矩阵而言，可挖掘的空间不止这些。本节介绍四个基本子空间，作为对空间概念的补充，方便后续讨论。</p><h2 id="二、四个基本空间介绍"><a href="#二、四个基本空间介绍" class="headerlink" title="二、四个基本空间介绍"></a>二、四个基本空间介绍</h2><p>对于一个<script type="math/tex">m×n</script>矩阵<script type="math/tex">A</script>，以下四个基本空间是其基础：</p><ol><li><strong>列空间 </strong><script type="math/tex">C(A)</script>：由矩阵<script type="math/tex">A</script>的列向量线性组合构成的空间。<script type="math/tex">m×n</script>矩阵<script type="math/tex">A</script>的每个列向量有<script type="math/tex">m</script>个分量，属于<script type="math/tex">R^{m}</script>空间，所以列空间是<script type="math/tex">R^{m}</script>的子空间。</li><li><strong>零空间 </strong><script type="math/tex">N(A)</script>：由<script type="math/tex">Ax = 0</script>的解构成的空间。由于<script type="math/tex">x</script>本质是对<script type="math/tex">A</script>列向量的线性组合，<script type="math/tex">A</script>有<script type="math/tex">n</script>个列向量，所以零空间是<script type="math/tex">R^{n}</script>的子空间 。</li><li><strong>行空间 </strong><script type="math/tex">C(A^{T})</script>：矩阵<script type="math/tex">A</script>各行线性组合构成的子空间，也可理解为<script type="math/tex">A</script>转置的列空间，即<script type="math/tex">C(A^{T})</script>。<script type="math/tex">A</script>的每个行向量有<script type="math/tex">n</script>个分量，都在<script type="math/tex">R^{n}</script>中，所以<script type="math/tex">A</script>的行空间是<script type="math/tex">R^{n}</script>的子空间。</li><li><strong>左零空间 </strong><script type="math/tex">N(A^{T})</script>：可以理解为<script type="math/tex">A^{T}</script>的零空间。<script type="math/tex">A^{T}</script>是一个<script type="math/tex">n×m</script>的矩阵，<script type="math/tex">A^{T}</script>有<script type="math/tex">m</script>个列向量，所以左零空间是<script type="math/tex">R^{m}</script>的子空间。</li></ol><h3 id="2-1-四个基本空间的维数与基"><a href="#2-1-四个基本空间的维数与基" class="headerlink" title="2.1 四个基本空间的维数与基"></a>2.1 四个基本空间的维数与基</h3><p>研究<script type="math/tex">m×n</script>的矩阵<script type="math/tex">A</script>，其四个子空间的基本性质如下：</p><ol><li><strong>列空间</strong>：设矩阵<script type="math/tex">A</script>的秩为<script type="math/tex">r</script>，<script type="math/tex">A</script>有<script type="math/tex">r</script>个主列，这<script type="math/tex">r</script>个主列就是列空间<script type="math/tex">C(A)</script>一组基，一组基里有<script type="math/tex">r</script>个向量，所以列空间维数为<script type="math/tex">r</script>。</li><li><strong>零空间</strong>：当矩阵<script type="math/tex">A</script>秩为<script type="math/tex">r</script>时，自由列为<script type="math/tex">n-r</script>列。这<script type="math/tex">n-r</script>列决定了<script type="math/tex">x</script>中的<script type="math/tex">n-r</script>个自由变元，赋值后构成零空间的<script type="math/tex">n-r</script>个基向量，故零空间维数为<script type="math/tex">n-r</script>。</li><li><p><strong>行空间</strong>：<script type="math/tex">A</script>的行空间可化为<script type="math/tex">A^{T}</script>的列空间，也可直接对<script type="math/tex">A</script>的行向量进行变换，行空间的维数是秩数<script type="math/tex">r</script>。</p><ul><li><strong>例</strong>：设<script type="math/tex">A=\begin{bmatrix}1&2&3&1\\1&1&2&1\\1&2&3&1\end{bmatrix}</script>，对<script type="math/tex">A</script>进行变换得到<script type="math/tex">\begin{bmatrix}1&0&1&1\\0&1&1&0\\0&0&0&0\end{bmatrix}</script>（行最简形矩阵<script type="math/tex">R</script>，左上角是单位矩阵<script type="math/tex">I</script>，右上角是自由列<script type="math/tex">F</script>，下面是全零行）。<script type="math/tex">A</script>只有两行线性无关，秩为 <script type="math/tex">2</script>，<script type="math/tex">A</script>行向量的基就是<script type="math/tex">R</script>的前两行，维数为 <script type="math/tex">2</script>。行变换不改变<script type="math/tex">A</script>的行空间，将<script type="math/tex">A</script>化简为行最简型<script type="math/tex">R</script>后取前<script type="math/tex">r</script>（秩数）行向量，即为<script type="math/tex">A</script>行空间的基。</li></ul></li><li><p><strong>左零空间</strong>：左零空间写成方程形式为<script type="math/tex">A^{T}y = 0</script>，两边同时转置得<script type="math/tex">y^{T}A = 0</script> ，此时对于 A 矩阵而言，<script type="math/tex">y^{T}</script>左乘 A 得到零向量，因此我们称之为左零空间。<script type="math/tex">A^{T}</script>是<script type="math/tex">n×m</script>的矩阵，其零空间维数为<script type="math/tex">m-r</script>。</p><ul><li>寻找左零空间的基：设<script type="math/tex">A=\begin{bmatrix}1&2&3&1\\1&1&2&1\\1&2&3&1\end{bmatrix}</script>，行变换后得到行最简矩阵<script type="math/tex">R=\begin{bmatrix}1&0&1&1\\0&1&1&0\\0&0&0&0\end{bmatrix}</script>，行变换过程可用消元矩阵<script type="math/tex">E</script>表示，即</li></ul></li></ol><script type="math/tex; mode=display">EA=\begin{bmatrix}-1&2&0\\1&-1&0\\-1&0&1\end{bmatrix}\begin{bmatrix}1&2&3&1\\1&1&2&1\\1&2&3&1\end{bmatrix}=\begin{bmatrix}1&0&1&1\\0&1&1&0\\0&0&0&0\end{bmatrix}=R</script><p>观察<script type="math/tex">R</script>下面一行为零行，抽出<script type="math/tex">E</script>第三行<script type="math/tex">\begin{bmatrix}-1&0&1\end{bmatrix}</script>，<script type="math/tex">\begin{bmatrix}-1&0&1\end{bmatrix}\begin{bmatrix}1&2&3&1\\1&1&2&1\\1&2&3&1\end{bmatrix}=\begin{bmatrix}0&0&0&0\end{bmatrix}=0</script>，得到左零空间的一组基<script type="math/tex">[-1,0,1]</script>，向量个数为<script type="math/tex">m-r=3-2=1</script>个。寻找左零矩阵的基，重点是找<script type="math/tex">A</script>行组合为零的系数，通过将<script type="math/tex">\begin{bmatrix}A&I\end{bmatrix}\xrightarrow{初等行变换}\begin{bmatrix}R&E\end{bmatrix}</script>，求得<script type="math/tex">E</script>矩阵，根据<script type="math/tex">R</script>中的零行找到<script type="math/tex">E</script>中的线性组合方式，得到左零空间的基。</p><h3 id="2-2-四个基本空间图像"><a href="#2-2-四个基本空间图像" class="headerlink" title="2.2 四个基本空间图像"></a>2.2 四个基本空间图像</h3><p><script type="math/tex">m×n</script>矩阵对应的四个基本空间图像如下：</p><div class="table-container"><table><thead><tr><th>子空间</th><th>所属空间</th><th>维数</th></tr></thead><tbody><tr><td>列空间 <script type="math/tex">C(A)</script></td><td><script type="math/tex">R^{m}</script>的子空间</td><td><script type="math/tex">r</script></td></tr><tr><td>行空间 <script type="math/tex">C(A^{T})</script></td><td><script type="math/tex">R^{n}</script>的子空间</td><td><script type="math/tex">r</script></td></tr><tr><td>零空间 <script type="math/tex">N(A)</script></td><td><script type="math/tex">R^{n}</script>的子空间</td><td><script type="math/tex">n-r</script></td></tr><tr><td>左零空间 <script type="math/tex">N(A^{T})</script></td><td><script type="math/tex">R^{m}</script>的子空间</td><td><script type="math/tex">m-r</script></td></tr></tbody></table></div><h2 id="三、矩阵空间"><a href="#三、矩阵空间" class="headerlink" title="三、矩阵空间"></a>三、矩阵空间</h2><p>线性空间的元素不一定是实数组成的向量，所有 <script type="math/tex">3×3</script>的矩阵可当成一个“向量空间”中的向量，只要满足线性空间的八条规律，对线性运算封闭，就可将其当做线性空间中的元素。因为矩阵本身满足线性空间的八条运算律，所以可将所有的<script type="math/tex">3×3</script>矩阵看做一个线性空间。</p><p>其常见子空间有上三角矩阵、对称矩阵、对角矩阵，上三角矩阵与对称矩阵的交集为对角矩阵（<script type="math/tex">diag</script>）。例如，随意给出对角矩阵的一个基：<script type="math/tex">\begin{bmatrix}1&0&0\\0&0&0\\0&0&0\end{bmatrix}</script>，<script type="math/tex">\begin{bmatrix}1&0&0\\0&3&0\\0&0&0\end{bmatrix}</script>，<script type="math/tex">\begin{bmatrix}0&0&0\\0&0&0\\0&0&7\end{bmatrix}</script>。</p><h2 id="四、学习感悟"><a href="#四、学习感悟" class="headerlink" title="四、学习感悟"></a>四、学习感悟</h2><p>本节主要是概念的渗透，介绍了四个基本空间，其中左零空间是新内容，即行向量的线性组合得到零向量，需要重点理解。2.2 中的表格在后续学习中会经常用到。此外，还引出了向量空间的概念，下节会详细介绍。</p>]]></content>
    
    
    <summary type="html">四个基本子空间</summary>
    
    
    
    <category term="Linear_Algebra" scheme="http://david-luge.cn/categories/Linear-Algebra/"/>
    
    
    <category term="Linear_Algebra" scheme="http://david-luge.cn/tags/Linear-Algebra/"/>
    
  </entry>
  
  <entry>
    <title>线性代数09-线性无关,基和维数</title>
    <link href="http://david-luge.cn/2025/03/28/Linear_Algebra/%E7%BA%BF%E6%80%A7%E4%BB%A3%E6%95%B0-9/"/>
    <id>http://david-luge.cn/2025/03/28/Linear_Algebra/%E7%BA%BF%E6%80%A7%E4%BB%A3%E6%95%B0-9/</id>
    <published>2025-03-28T07:09:39.000Z</published>
    <updated>2025-03-28T07:09:39.000Z</updated>
    
    <content type="html"><![CDATA[<h1 id="Linear-Algebra-线性无关-基和维数-09"><a href="#Linear-Algebra-线性无关-基和维数-09" class="headerlink" title="Linear Algebra-线性无关,基和维数-09"></a>Linear Algebra-线性无关,基和维数-09</h1><h2 id="引言"><a href="#引言" class="headerlink" title="引言"></a>引言</h2><p>向量的线性无关意味着什么？如何用线性无关的概念来帮助我们描述包括零空间在内的子空间。</p><h2 id="线性无关-Linear-Independence"><a href="#线性无关-Linear-Independence" class="headerlink" title="线性无关(Linear Independence)"></a>线性无关(Linear Independence)</h2><p>矩阵<em>A</em>为 mxn 矩阵，其中 m&lt;n（未知数个数多于方程数）。则<em>A</em>中具有至少一个自由变量，那么<em>A_x=0 一定具有非零解。_A</em>的列向量可以线性组合得到零向量，所以<em>A</em>的列向量是线性相关的。</p><p>若<script type="math/tex">c_1x_1+c_2x_2+...+c_nx_n=0</script>仅在<script type="math/tex">c_1=c_2=...=c_n</script>时才成立，则称<script type="math/tex">x_1,x_2,...,x_n</script>是线性无关的。若这些向量作为列向量构成矩阵<em>A</em>，则方程Ax=0 只有零解 x=0，或称矩阵<em>A</em>的零空间只有零向量。换而言之，若存在非零向量 c，使得Ac=0，则这个矩阵<em>A</em>的列向量线性相关。</p><p>在<script type="math/tex">R^2</script>空间中，两个向量只要不在一条直线上就是线性无关的。（在<script type="math/tex">R^3</script>中，三个向量线性无关的条件是它们不在一个平面上。）若选定空间<script type="math/tex">R^2</script>中的三个向量，则他们必然是线性相关的。例如，如下的三个列向量是线性相关的。</p><script type="math/tex; mode=display">A=\begin{bmatrix}2&1&2.5\\1&2&-1\end{bmatrix}</script><p>此矩阵构成的方程_Ax=0 必有非零解，即三个向量线性相关。</p><p>如果矩阵<em>A</em>的列向量为线性无关，则<em>A</em>所有的列均为主元列，没有自由列，矩阵的秩为 n。若<em>A</em>的列向量为线性相关，则矩阵的秩小于 n，并且存在自由列。</p><h2 id="张成空间-Spanning-Space"><a href="#张成空间-Spanning-Space" class="headerlink" title="张成空间(Spanning Space)"></a>张成空间(Spanning Space)</h2><p>当一个空间是由向量<script type="math/tex">v_1,v_2,...,v_k</script>的所有线性组合组成时，我们称这些向量张成了这个空间。例如矩阵的列向量张成了该矩阵的列空间。</p><p>如果向量<script type="math/tex">v_1,v_2,...,v_k</script>张成空间 S，则 S 是包含这些向量的最小空间。</p><h2 id="基与维数-Basis-and-Dimension"><a href="#基与维数-Basis-and-Dimension" class="headerlink" title="基与维数(Basis and Dimension)"></a>基与维数(Basis and Dimension)</h2><p>向量空间的基是具有如下两个性质的一组向量：<script type="math/tex">v_1,v_2,...,v_d</script></p><ul><li><script type="math/tex">v_1,v_2,...,v_d</script>线性无关</li><li><script type="math/tex">v_1,v_2,...,v_d</script>张成该向量空间</li></ul><p>因此空间的基告诉我们关于该空间的一切信息。</p><p>[例]<script type="math/tex">R^3</script>空间有一组基<script type="math/tex">\begin{bmatrix}1\\0\\0\end{bmatrix},\begin{bmatrix}0\\1\\0\end{bmatrix},\begin{bmatrix}0\\0\\1\end{bmatrix}</script>，因为它们满足<script type="math/tex">c_1\begin{bmatrix}1\\0\\0\end{bmatrix}+c_2\begin{bmatrix}0\\1\\0\end{bmatrix}+c_3\begin{bmatrix}0\\0\\1\end{bmatrix}=\begin{bmatrix}0\\0\\0\end{bmatrix}</script>只有零解，并且这三个向量线性无关，可以张成<script type="math/tex">R^3</script>空间。</p><p>而<script type="math/tex">\begin{bmatrix}1\\1\\2\end{bmatrix},\begin{bmatrix}2\\2\\5\end{bmatrix},\begin{bmatrix}3\\3\\8\end{bmatrix}</script>则不能构成一组基，因为以它们为列向量组成的矩阵，有两个相同的行，消元肯定有自由列存在，因此这三个向量并非线性无关。</p><blockquote><p>当判定线性相关性时，可以随时在矩阵、空间和方程组的概念之间切换，哪个判据更容易判定就用哪个，这里显然矩阵不可逆更容易看出来，因为存在行向量重复的情况。从这里也可以看到行向量线性相关则列向量不可能线性无关。</p></blockquote><p>若以<script type="math/tex">R^n</script>空间中的 n 个向量为列向量构成的矩阵为可逆矩阵，则这些向量可以构成<script type="math/tex">R^n</script>空间中的一组基。</p><h2 id="子空间的基-Basis-for-a-subspace"><a href="#子空间的基-Basis-for-a-subspace" class="headerlink" title="子空间的基(Basis for a subspace)"></a>子空间的基(Basis for a subspace)</h2><p>向量<script type="math/tex">\begin{bmatrix}1\\1\\2\end{bmatrix},\begin{bmatrix}2\\2\\5\end{bmatrix}</script>可以张成<script type="math/tex">R^3</script>中的一个平面，但是它们无法成为<script type="math/tex">R^3</script>空间的一组基。</p><p>空间的每一组基都具有相同的向量数，这个数值就是空间的维数（dimension）。所以<script type="math/tex">R^n</script>空间的每组基都包含 n 个向量。</p><h2 id="列空间和零空间的基-Basis-of-a-column-space-and-nullspace"><a href="#列空间和零空间的基-Basis-of-a-column-space-and-nullspace" class="headerlink" title="列空间和零空间的基(Basis of a column space and nullspace)"></a>列空间和零空间的基(Basis of a column space and nullspace)</h2><p>取<script type="math/tex">A=\begin{bmatrix}1&2&3&1\\1&1&2&1\\1&2&3&1\end{bmatrix}</script></p><p>讨论列空间：矩阵<em>A</em>的四个列向量张成了矩阵<em>A</em>的列空间，其中第 3 列和第 4 列与前两列线性相关，而前两个列向量线性无关。因此前两列为主元列。他们组成了列空间 C(<em>A</em>)的一组基。矩阵的秩为 2。</p><p>实际上对于任何矩阵<em>A</em>均有：矩阵的秩 r=矩阵主元列的数目=列空间的维数</p><blockquote><p>注意：矩阵具有秩 rank 而不是维数 dimension，而空间有维数而不是秩。</p></blockquote><p>当知道了列空间的维数，可以从矩阵列向量中<strong>随意选取足够数量的线性无关的向量</strong>，它们每一组都可以构成列空间的一组基。</p><h2 id="讨论下零空间"><a href="#讨论下零空间" class="headerlink" title="讨论下零空间"></a>讨论下零空间</h2><p>本例中矩阵的列向量不是线性无关的，因此其零空间 N(<em>A</em>)不止包含零向量。因为可以看出第 3 列是第 1 列和第 2 列的加和。所以向量<script type="math/tex">\begin{bmatrix}−1\\−1\\1\\0\end{bmatrix}</script>必然在零空间 N(<em>A</em>)之内。同样还可以对<script type="math/tex">x_4</script>赋值为 1，从而得到<script type="math/tex">\begin{bmatrix}-1\\0\\0\\1\end{bmatrix}</script>也在零空间之内。它们就是_A_x=0 的两个特解。</p><p>零空间的维数=自由列的数目=n-r，因此本例中 N(A)的维数为 4-2=2。这两个特解就构成了零空间的一组基。</p>]]></content>
    
    
    <summary type="html">线性无关,基和维数</summary>
    
    
    
    <category term="Linear_Algebra" scheme="http://david-luge.cn/categories/Linear-Algebra/"/>
    
    
    <category term="Linear_Algebra" scheme="http://david-luge.cn/tags/Linear-Algebra/"/>
    
  </entry>
  
  <entry>
    <title>线性代数08-求解 Ax=b:可解性与结构</title>
    <link href="http://david-luge.cn/2025/03/28/Linear_Algebra/%E7%BA%BF%E6%80%A7%E4%BB%A3%E6%95%B0-8/"/>
    <id>http://david-luge.cn/2025/03/28/Linear_Algebra/%E7%BA%BF%E6%80%A7%E4%BB%A3%E6%95%B0-8/</id>
    <published>2025-03-28T07:08:39.000Z</published>
    <updated>2025-03-28T07:08:39.000Z</updated>
    
    <content type="html"><![CDATA[<h1 id="Linear-Algebra-求解-Ax-b-可解性与结构-08"><a href="#Linear-Algebra-求解-Ax-b-可解性与结构-08" class="headerlink" title="Linear Algebra-求解 Ax=b:可解性与结构-08"></a>Linear Algebra-求解 Ax=b:可解性与结构-08</h1><h2 id="可解的条件"><a href="#可解的条件" class="headerlink" title="可解的条件"></a>可解的条件</h2><p>仍以 <script type="math/tex">A=\begin{bmatrix}1&2&2&2\\2&4&6&8\\3&6&8&10\\\end{bmatrix}</script>为例，则方程为<script type="math/tex">\begin{bmatrix}1&2&2&2\\2&4&6&8\\3&6&8&10\\\end{bmatrix}\begin{bmatrix}x_1\\x_2\\x_3\\x_4\\\end{bmatrix}=\begin{bmatrix}b_1\\b_2\\b_3\\\end{bmatrix}</script></p><p>矩阵 A 的第三行为第一行和第二行的加和，因此<script type="math/tex">Ax=b</script>中的 b 要满足<script type="math/tex">b_3=b_2+b_1</script>，否则方程无解。</p><p>检验<script type="math/tex">Ax=b</script>是否可解的方法是增广矩阵进行行消元。如果矩阵 A 的行被完全消去的话，则对应的 b 的分量也得是 0。在本例中，矩阵 A 的第三行被消去：</p><script type="math/tex; mode=display">\begin{bmatrix}1&2&2&2&b_1\\2&4&6&8&b_2\\3&6&8&10&{b_3}\\\end{bmatrix}->...->\begin{bmatrix}1&2&2&2&b_1\\0&0&2&4&b_2-b_1\\0&0&0&0&b_3-b_2-b_1\\\end{bmatrix}</script><p>如果<script type="math/tex">Ax=b</script>有解，则<script type="math/tex">b_3-b_2-b_1=0</script>。在本例中我们令 <script type="math/tex">b=\begin{bmatrix}1\\5\\6\\\end{bmatrix}</script></p><p>前几讲讨论过，只有当 b 处于矩阵的列空间 C(<em>A</em>)之中时，方程才有解。本讲推导出矩阵<em>A</em>的行向量若经过线性组合成为了零向量，则对应的 b 经同样的线性组合后也要等于 0。</p><h2 id="通解"><a href="#通解" class="headerlink" title="通解"></a>通解</h2><p>为求得<script type="math/tex">Ax=b</script>的所有解，我们首先检验方程是否可解，然后找到一个特解。将特解和矩阵零空间向量相加即为方程的通解。</p><h2 id="特解"><a href="#特解" class="headerlink" title="特解"></a>特解</h2><p>求<script type="math/tex">Ax=b</script>特解的方法是将自由变量均赋值为 0，求其主变量。</p><p>本例中，令<script type="math/tex">x_2=x_{4}=0</script>得到方程组：</p><script type="math/tex; mode=display">x_1+2x_3=1\\2x_3=3</script><p>不难得到，<script type="math/tex">x_3=\frac{3}{2},x_1=-2</script>，因此特解为<script type="math/tex">x_p=\begin{bmatrix}-2\\0\\3/2\\0\end{bmatrix}</script>。</p><blockquote><p>上一讲说了主元列和自由列的一个重要区别就是，自由列可以表示为主元列的线性组合，主元列之间是线性无关的。</p><script type="math/tex; mode=display">U=\begin{bmatrix}x&*&*&*&*&*&*&*\\0&0&y&*&*&*&*&*\\0&0&0&0&0&z&*&*\\0&0&0&0&0&0&0&u\\\end{bmatrix}</script><p>我们仍以消元完成后的梯形矩阵<em>U</em>为例，其包含四个主元列。对于_A_x=b 的求解转变为_U_x=c，其中 c 是向量 b 经过与左侧 A 矩阵相同的行操作得到的向量。显然，此时四个主元列的线性组合可以组成任何<script type="math/tex">R^4</script>中的向量，我们将 x 中的自由变量赋值为 0 就可以去掉自由列列向量的干扰，求得方程的特解<script type="math/tex">x_p</script>。如果消元得到的 U 最后 i 行为 0，如果方程要有解，c 的最后 i 个分量就要为 0，这时主元列才可以通过线性组合得到 c，否则方程无解。</p></blockquote><h2 id="与零空间进行线性组合"><a href="#与零空间进行线性组合" class="headerlink" title="与零空间进行线性组合"></a>与零空间进行线性组合</h2><p><script type="math/tex">Ax=b</script>的通解为<script type="math/tex">x_{uni}=x_p+x_n</script>，其中<script type="math/tex">x_n</script>为矩阵零空间中的向量，将<script type="math/tex">Ax_p=b</script>和<script type="math/tex">Ax_n=0</script>相加可得<script type="math/tex">A(x_p+x_n)=b</script>。</p><p>上一讲我们知道，矩阵的零空间<script type="math/tex">N(A)</script>就是其特解<script type="math/tex">\begin{bmatrix}-2\\1\\0\\0\end{bmatrix},\begin{bmatrix}2\\0\\-2\\1\end{bmatrix}</script>的线性组合的集合，因此方程<script type="math/tex">Ax=\begin{bmatrix}1\\5\\6\end{bmatrix}</script>的通解即为：<script type="math/tex">x_{uni}=\begin{bmatrix}-2\\0\\3/2\\0\end{bmatrix}+c_1\begin{bmatrix}-2\\1\\0\\0\end{bmatrix}+c_2\begin{bmatrix}2\\0\\-2\\1\end{bmatrix}</script>，式中<script type="math/tex">c_1</script>和<script type="math/tex">c_2</script>为任意实数。</p><p>矩阵的零空间 N(<em>A</em>)是<script type="math/tex">R^4</script>空间中的二维子空间，方程的解<script type="math/tex">Ax=b</script>构成了穿过<script type="math/tex">x_p</script>点并和 N(A)平行的“平面“。但该”平面“并不是<script type="math/tex">R^4</script>空间的子空间(因为该平面不过零点，不满足数乘的条件)。</p><blockquote><p>前面求取<script type="math/tex">Ax=b</script>的特解过程中，我们令所有自由变量赋值为 0。如果不赋值为 0，则等于带着自由列进行计算，但自由列其实也就是主元列的线性组合，这样求的特解<script type="math/tex">x_p'</script>只不过是<script type="math/tex">x_p</script>与零空间特解的一个加和。</p></blockquote><h2 id="秩-Rank"><a href="#秩-Rank" class="headerlink" title="秩 Rank"></a>秩 Rank</h2><p>矩阵的秩等于矩阵的主元数。如果 mxn 矩阵的秩为 r，则必有 r&lt;=m 且 r&lt;=n。</p><p>下面讨论一下满秩的情形：</p><ul><li>列满秩：r=n。每列都有主元，x 的每一个分量都是主变量，没有自由变量。零空间 N(A)之内只有零向量。方程无解或者有唯一解<script type="math/tex">x_p</script>。</li><li>行满秩：r=m。每行都有主元，无论 b 取何值，方程_A_x=b 都有解。主变量 r 个，自由变量 n-r 个。如<script type="math/tex">A=\begin{bmatrix}1&0&*&*\\0&1&*&*\end{bmatrix}</script>的形式。</li><li>满秩 r=m=n，矩阵可逆。零空间只有零向量，无论 b 取何值，方程_A_x=b 都有唯一解。如单位矩阵。</li></ul><p>总结如下：</p><div class="table-container"><table><thead><tr><th>r=m=n</th><th>r=n&lt;m</th><th>r=m&lt;n</th><th>r&lt;n,r&lt;m</th></tr></thead><tbody><tr><td>有效方程数量等于未知数数量</td><td>有效方程数数量大于未知数数量</td><td>有效方程数数量小于未知数数量</td><td>It depends.</td></tr><tr><td><script type="math/tex">R=</script></td><td><script type="math/tex">R=\begin{bmatrix}I\\0\end{bmatrix}</script></td><td><script type="math/tex">R=\begin{bmatrix}I&F\end{bmatrix}</script></td><td><script type="math/tex">R=\begin{bmatrix}I&F\\0&0\end{bmatrix}</script></td></tr><tr><td>唯一解</td><td>无解或者唯一解</td><td>无穷多解</td><td>无解或无穷多解</td></tr></tbody></table></div><blockquote><p>当矩阵是<em>m</em>×<em>n</em>的矩阵，且矩阵的秩<em>r</em>既小于<em>m</em>又小于<em>n</em>时，对应的线性方程组的解的情况如下：</p><ul><li>无穷多解：对于非齐次线性方程组<em>Ax</em>=<em>b</em>，当<em>r</em>(<em>A</em>)=<em>r</em>(<em>A</em>∣<em>b</em>)&lt;<em>n</em>时，方程组有无穷多解。因为秩小于未知数个数<em>n</em>，意味着方程组中存在自由变量，自由变量可以取任意值，从而导致方程组有无穷多组解。</li><li>无解：对于非齐次线性方程组<em>Ax</em>=<em>b</em>，当<script type="math/tex">r(A)\neq r(A|b)</script>时，方程组无解。此时增广矩阵(<em>A</em>∣<em>b</em>)经过初等行变换后，会出现形如[0 0 ⋯ 0 ∣ <em>c</em>]（<script type="math/tex">c\neq 0</script>）的行，这表示方程组中存在矛盾方程，所以无解。<br>这种情况下，线性方程组不可能有唯一解。因为唯一解的充分必要条件是<script type="math/tex">r(A)=r(A|b)=n</script>，而题目中给定秩<em>r</em>小于<em>n</em>，不满足唯一解的条件。</li></ul></blockquote><p>总而言之，<strong>矩阵的秩决定了方程组解的数量</strong>。</p>]]></content>
    
    
    <summary type="html">求解 Ax=b:可解性与结构</summary>
    
    
    
    <category term="Linear_Algebra" scheme="http://david-luge.cn/categories/Linear-Algebra/"/>
    
    
    <category term="Linear_Algebra" scheme="http://david-luge.cn/tags/Linear-Algebra/"/>
    
  </entry>
  
  <entry>
    <title>线性代数07-求解 Ax=0，主变量，特解</title>
    <link href="http://david-luge.cn/2025/03/28/Linear_Algebra/%E7%BA%BF%E6%80%A7%E4%BB%A3%E6%95%B0-7/"/>
    <id>http://david-luge.cn/2025/03/28/Linear_Algebra/%E7%BA%BF%E6%80%A7%E4%BB%A3%E6%95%B0-7/</id>
    <published>2025-03-28T07:07:39.000Z</published>
    <updated>2025-03-28T07:07:39.000Z</updated>
    
    <content type="html"><![CDATA[<h1 id="Linear-Algebra-求解-Ax-0，主变量，特解-07"><a href="#Linear-Algebra-求解-Ax-0，主变量，特解-07" class="headerlink" title="Linear Algebra-求解 Ax=0，主变量，特解-07"></a>Linear Algebra-求解 Ax=0，主变量，特解-07</h1><h2 id="概要"><a href="#概要" class="headerlink" title="概要"></a>概要</h2><p>记得上一节中我们讨论了列空间和零空间的相关问题，那么这一节我们从它们的定义过渡到它们的计算，即如何求解出这些空间的一般形式。给出一种可以解出<script type="math/tex">Ax=0</script>中的 x 构成的零空间的算法。</p><h2 id="消元法求解零空间"><a href="#消元法求解零空间" class="headerlink" title="消元法求解零空间"></a>消元法求解零空间</h2><p>记得之前在讲解使用消元法解方程组<script type="math/tex">Ax=b</script>时，我们对一种情况是无法处理的，那就是矩阵 A 不可逆的情况。之前对这种情况的解释是：求出的解不唯一。这正好对应了我们现在学到的“空间”概念。</p><p>我们首先从最简单的零空间(b=0)的计算谈起。</p><h3 id="消元法确定主变量与自由变量-消元"><a href="#消元法确定主变量与自由变量-消元" class="headerlink" title="消元法确定主变量与自由变量(消元)"></a>消元法确定主变量与自由变量(消元)</h3><p>【例】设 <script type="math/tex">A=\begin{bmatrix}1 & 2 & 2 & 2\\2 & 4 & 6 & 8\\3 & 6 & 8 & 10\\\end{bmatrix}</script>，求由 Ax=0 中的 x 构成的零空间。</p><p>Ax=0 其实就是一个方程组：</p><script type="math/tex; mode=display">\begin{bmatrix}1 & 2 & 2 & 2\\2 & 4 & 6 & 8\\3 & 6 & 8 & 10\\\end{bmatrix}\begin{bmatrix}x_1\\x_2\\x_3\\x_4\\\end{bmatrix}=0</script><p>还是之前学过的消元法来直接处理矩阵 A：</p><script type="math/tex; mode=display">\begin{bmatrix}1 & 2 & 2 & 2\\2 & 4 & 6 & 8\\3 & 6 & 8 & 10\\\end{bmatrix}->\begin{bmatrix}1 & 2 & 2 & 2\\0 & 0 & 2 & 4\\0 & 0 & 2 & 4\\\end{bmatrix}->\begin{bmatrix}1 & 2 & 2 & 2\\0 & 0 & 2 & 4\\0 & 0 & 0 & 0\\\end{bmatrix}=U</script><p>首先注意 A 矩阵消元之后只有两个主元：1 和 2，主元的个数被称为秩，即 A 的秩为 2。</p><p>接下来应该是进行回代求解了，但是在这之前，由于消元得到的 U 不是一个严格的上三角矩阵，因此方程的解就不唯一，所以先来明确几个概念。</p><p><img src="https://cdn.jsdelivr.net/gh/XduDavid/Blog_Img/Linear_Algebra70.png" alt="Linear_Algebra70"></p><p>所以这个 U 的主变量(主元)为<script type="math/tex">x_1,x_3</script>。自由变量为<script type="math/tex">x_2,x_4</script>。</p><h3 id="对自由变量赋值覆盖零空间-回代"><a href="#对自由变量赋值覆盖零空间-回代" class="headerlink" title="对自由变量赋值覆盖零空间(回代)"></a>对自由变量赋值覆盖零空间(回代)</h3><ol><li>首先给自由变量 <script type="math/tex">\begin{bmatrix}x_2\\x_4\\\end{bmatrix}</script>赋值为<script type="math/tex">\begin{bmatrix}1\\0\\\end{bmatrix}</script>。</li></ol><p>回代入方程组：</p><script type="math/tex; mode=display">x_1+2x_2+2x_3+2x_4=0\\2x_3+4x_4=0</script><p>当 <script type="math/tex">\begin{bmatrix}x_2\\x_4\\\end{bmatrix}=\begin{bmatrix}1\\0\\\end{bmatrix}</script>时，解向量为：<script type="math/tex">\begin{bmatrix}-2\\1\\0\\0\\\end{bmatrix}</script>。</p><ol><li>再给自由变量 <script type="math/tex">\begin{bmatrix}x_2\\x_4\\\end{bmatrix}</script>赋值为<script type="math/tex">\begin{bmatrix}0\\1\\\end{bmatrix}</script>。</li></ol><p>再次回代入方程组，此时的解向量为 <script type="math/tex">\begin{bmatrix}2\\0\\-2\\1\\\end{bmatrix}</script>。</p><p>还有别的给 <script type="math/tex">\begin{bmatrix}x_2\\x_4\\\end{bmatrix}</script>赋值的方法吗？很明显其余的赋值方法都可以被<script type="math/tex">\begin{bmatrix}1\\0\\\end{bmatrix}</script>和<script type="math/tex">\begin{bmatrix}0\\1\\\end{bmatrix}</script>的线性组合所覆盖，所以这两个解向量足够代表零空间的特征了，我们称这两个解向量为：<strong>特解</strong>。其特殊之处便在于给自由变量赋值为了<script type="math/tex">\begin{bmatrix}1\\0\\\end{bmatrix}</script>和<script type="math/tex">\begin{bmatrix}0\\1\\\end{bmatrix}</script>。</p><p>通过<strong>特解的任意倍的线性组合可以构造出整个零空间。</strong></p><p>即<script type="math/tex">Ax=0</script>的所有解，或者说<script type="math/tex">Ax=0</script>中的 x 构成的零向量空间为：</p><script type="math/tex; mode=display">x=c\begin{bmatrix}-2\\1\\0\\0\\\end{bmatrix}+d\begin{bmatrix}2\\0\\-2\\1\\\end{bmatrix}</script><h3 id="算法总结"><a href="#算法总结" class="headerlink" title="算法总结"></a>算法总结</h3><p>对于一个<script type="math/tex">m\times n</script>的矩阵 A，若其秩(R)为 r，那么就意味着其主变量为 r 个，而自由变量为 n-r 个。也就是只有 r 个方程起作用，而一共有 n 个变量 x，我们将其中的 n-r 个自由变量依次赋值为：<script type="math/tex">\begin{bmatrix}1\\0\\...\\0\\\end{bmatrix},\begin{bmatrix}0\\1\\...\\0\\\end{bmatrix},...,\begin{bmatrix}0\\0\\...\\1\\\end{bmatrix}</script>。接下来解方程求特解，将特解的任意倍进行线性组合就可以了。</p><h2 id="简化行阶梯形式"><a href="#简化行阶梯形式" class="headerlink" title="简化行阶梯形式"></a>简化行阶梯形式</h2><p>上面的消元法看上去已经很完美了，但是最后一步解方程还有化简的余地，最后得到的 U 矩阵还可以被进一步化简。</p><p>拿上面【例】中的 U 矩阵 <script type="math/tex">\begin{bmatrix}1 & 2 & 2 & 2\\0 & 0 & 2 & 4\\0 & 0 & 0 & 0\\\end{bmatrix}</script> 为例，继续化简：</p><ul><li>首先向上消元，使主元列<strong>除主元之外都是 0</strong>：<script type="math/tex">\begin{bmatrix}1 & 2 & 0 & -2\\0 & 0 & 2 & 4\\0 & 0 & 0 & 0\\\end{bmatrix}</script></li><li>提出一列元素公倍数，<strong>使主元均为 1</strong>：<script type="math/tex">R=2\begin{bmatrix}1 & 2 & 0 & -2\\0 & 0 & 1 & 2\\0 & 0 & 0 & 0\\\end{bmatrix}</script></li><li>列交换，使左上角变为单位阵 I：<script type="math/tex">2\begin{bmatrix}1 & 0 & 2 & -2\\0 & 1 & 0 & 2\\0 & 0 & 0 & 0\\\end{bmatrix}</script></li></ul><p>在矩阵中主元行和主元列的交汇处存在一个单位阵，通过“列交换”，可以将矩阵 R 中的主元列集中在左侧，从而在左上角形成这个单位阵，而将自由列集中在矩阵的右侧。如果矩阵 A 中的某些行是线性相关的，则在矩阵 R 的下半部分就会出现一些完全为 0 的行向量。</p><p><img src="https://cdn.jsdelivr.net/gh/XduDavid/Blog_Img/Linear_Algebra71.png" alt="Linear_Algebra71"></p><p>这里的<script type="math/tex">I</script>是一个<script type="math/tex">r\times r</script>的方阵，F 即自由列消元后组成的部分。</p><p>原方程<script type="math/tex">Ax=0</script>变为求解 R 的主元行乘以 x，<script type="math/tex">\begin{bmatrix}I & F\end{bmatrix}\begin{bmatrix}x_{pivot} \\ x_{free}\end{bmatrix}=0</script></p><p>我们将<script type="math/tex">Ax=0</script>的特解作为列向量写成矩阵<script type="math/tex">N</script>，即零空间矩阵。则其形式为 <script type="math/tex">N=\begin{bmatrix}\\I\end{bmatrix}</script>。这里的I为一个<script type="math/tex">(n-r)\times (n-r)</script>的矩阵，就是对n-r个自由变量分别赋值1所构造出来的，零空间矩阵满足<script type="math/tex">RN=0</script>，这里的0是一个<script type="math/tex">m\times (n-r)</script>的矩阵，则从矩阵分块乘法运算可知零空间矩阵上半部分为<script type="math/tex">-F</script>，即N的最终形式为<script type="math/tex">N=\begin{bmatrix}-F\\I\end{bmatrix}</script>。</p><blockquote><p>对于矩阵 R 而言，求零空间的特解就变得非常简单，只需要将消元得到的 F 部分拼接上单位矩阵就可以得到所有的通解。注意如果在变换出 R 左上角的单位矩阵的过程中如果采用的列变换，则在最后的解中也要完成相应的变换。</p></blockquote>]]></content>
    
    
    <summary type="html">求解 Ax=0，主变量，特解</summary>
    
    
    
    <category term="Linear_Algebra" scheme="http://david-luge.cn/categories/Linear-Algebra/"/>
    
    
    <category term="Linear_Algebra" scheme="http://david-luge.cn/tags/Linear-Algebra/"/>
    
  </entry>
  
  <entry>
    <title>线性代数06-列空间和零空间</title>
    <link href="http://david-luge.cn/2025/03/28/Linear_Algebra/%E7%BA%BF%E6%80%A7%E4%BB%A3%E6%95%B0-6/"/>
    <id>http://david-luge.cn/2025/03/28/Linear_Algebra/%E7%BA%BF%E6%80%A7%E4%BB%A3%E6%95%B0-6/</id>
    <published>2025-03-28T07:06:39.000Z</published>
    <updated>2025-03-28T07:06:39.000Z</updated>
    
    <content type="html"><![CDATA[<h1 id="Linear-Algebra-列空间和零空间-06"><a href="#Linear-Algebra-列空间和零空间-06" class="headerlink" title="Linear Algebra-列空间和零空间-06"></a>Linear Algebra-列空间和零空间-06</h1><h2 id="概要"><a href="#概要" class="headerlink" title="概要"></a>概要</h2><p>本节从之前学习的子空间开始，介绍了子空间的部分性质。并重点介绍了列空间与方程<script type="math/tex">Ax=b</script>之间的联系，并由此引出了零空间，根据<script type="math/tex">Ax=b</script>这个方程给出了两种构建子空间的方法。</p><h2 id="子空间"><a href="#子空间" class="headerlink" title="子空间"></a>子空间</h2><h3 id="子空间回顾"><a href="#子空间回顾" class="headerlink" title="子空间回顾"></a>子空间回顾</h3><p>首先我们回顾一下上次讲到的子空间。首先明确，<strong>子空间必须对线性运算封闭。</strong>我们从一个简单的向量空间：<script type="math/tex">R^3</script>空间开始。其图像如下，整个三维空间皆为<script type="math/tex">R^3</script>空间。</p><p><img src="https://cdn.jsdelivr.net/gh/XduDavid/Blog_Img/three_dimension.png" alt="three_dimension"></p><p>上一节中我们学习过，<script type="math/tex">R^3</script>的子空间就是如下三个（注：子空间必须包含原点，即零向量）：</p><ol><li>穿过原点的无限延伸的平面 P；</li><li>穿过原点的无限延伸的直线 L；</li><li>Z，原点；</li></ol><p>反映在图像上，即：</p><p><img src="https://cdn.jsdelivr.net/gh/XduDavid/Blog_Img/liekongjian1.png" alt="liekongjian1"></p><p>很明显，子空间直线 L 或平面 P 上，任取两个向量相加，得到的向量仍在该子空间中。而且将其上的向量做数乘伸长或缩短一定倍数，其结果也还在该子空间中，所以它们都对线性运算封闭。</p><h3 id="子空间的“交”与“并”"><a href="#子空间的“交”与“并”" class="headerlink" title="子空间的“交”与“并”"></a>子空间的“交”与“并”</h3><p>上面我们都是分别研究的两个子空间，那么接下来我们对两个空间之间联系的部分展开讨论。</p><h4 id="P∪L-空间"><a href="#P∪L-空间" class="headerlink" title="P∪L 空间"></a>P∪L 空间</h4><p>我们还是聚焦于<script type="math/tex">R^3</script>的子空间 P 与 L，首先要研究的就是他们的并空间，即：现有一集合，包含了 P 与 L 中的所有向量，那么这个集合是子空间吗？</p><p>答案是否定的。</p><p>很明显，我们将直线 L 与平面 P 看做同一个集合 P∪L 之后，这个集合对线性运算并不封闭。比如我们随便在直线 L 上取一个向量 a，在平面 P 上取一个向量 b，此时向量 a+b 的方向就会夹在直线 L 与平面 P 之间，脱离了 P∪L 的范围，因此 P∪L 无法构成子空间。</p><p><img src="https://cdn.jsdelivr.net/gh/XduDavid/Blog_Img/liekongjian2.png" alt="liekongjian2"></p><h4 id="P∩L-空间"><a href="#P∩L-空间" class="headerlink" title="P∩L 空间"></a>P∩L 空间</h4><p>如果看的是两个子空间的交集，那么上面那个<script type="math/tex">R^3</script>的例子就很合适。因为平面 P 与直线 L 只在原点相交，而原点显然是<script type="math/tex">R^3</script>的子空间之一。</p><p>如果推广到任意两个子空间的交呢？假设现在有子空间 S 和 T，问其交集 S∩T 是否为子空间？</p><p>这次答案是肯定的。</p><p>为什么呢？抽象层面上来看，S∩T 的集合是比 S，T 限制条件更多的集合，相当于一个更小的集合，所以 S∩T 势必满足原本 S 和 T 的条件，所以可以构成一个子空间。</p><h2 id="列空间"><a href="#列空间" class="headerlink" title="列空间"></a>列空间</h2><h3 id="列空间回顾"><a href="#列空间回顾" class="headerlink" title="列空间回顾"></a>列空间回顾</h3><p>我们通过一个例子来回顾之前的内容。</p><p>现有矩阵 <script type="math/tex">A=\begin{bmatrix}1 & 1 & 2\\2 & 1 & 3\\3 & 1 & 4\\4 & 1 & 5\\\end{bmatrix}</script>，矩阵的列向量<script type="math/tex">\begin{bmatrix}1\\2\\3\\4\\\end{bmatrix}\begin{bmatrix}1\\1\\1\\1\\\end{bmatrix}\begin{bmatrix}2\\3\\4\\5\\\end{bmatrix}</script>均是<script type="math/tex">R^4</script>中的四维向量，所以<strong>A的列空间是</strong><script type="math/tex">R^4</script> <strong>的子空间。</strong></p><p>那么列空间里包含了什么呢？除了 <script type="math/tex">\begin{bmatrix}1\\2\\3\\4\\\end{bmatrix}\begin{bmatrix}1\\1\\1\\1\\\end{bmatrix}\begin{bmatrix}2\\3\\4\\5\\\end{bmatrix}</script>三个列向量，列空间里还包含着它们的各种线性组合。也就是说，A的列空间是由<script type="math/tex">\begin{bmatrix}1\\2\\3\\4\\\end{bmatrix}\begin{bmatrix}1\\1\\1\\1\\\end{bmatrix}\begin{bmatrix}2\\3\\4\\5\\\end{bmatrix}</script> 三个列向量张开的一个子空间。</p><p>那么这个子空间有多大呢？这就需要<script type="math/tex">Ax=b</script>方程来解释了。</p><h3 id="Ax-b-的空间解释"><a href="#Ax-b-的空间解释" class="headerlink" title="Ax=b 的空间解释"></a>Ax=b 的空间解释</h3><p>还是取 <script type="math/tex">A=\begin{bmatrix}1 & 1 & 2\\2 & 1 & 3\\3 & 1 & 4\\4 & 1 & 5\\\end{bmatrix}</script>。假设有一个方程<script type="math/tex">Ax=b</script> 如下：</p><script type="math/tex; mode=display">Ax=\begin{bmatrix}1 & 1 & 2\\2 & 1 & 3\\3 & 1 & 4\\4 & 1 & 5\\\end{bmatrix}\begin{bmatrix}x_1\\x_2\\x_3\\\end{bmatrix}=\begin{bmatrix}b_1\\b_2\\b_3\\b_4\\\end{bmatrix}=b</script><p><strong>首先第一个问题</strong>：这个方程是否始终有解？</p><p>我们看到，Ax 的本质就是对 A 的列向量进行线性组合：</p><script type="math/tex; mode=display">Ax=\begin{bmatrix}1 & 1 & 2\\2 & 1 & 3\\3 & 1 & 4\\4 & 1 & 5\\\end{bmatrix}\begin{bmatrix}x_1\\x_2\\x_3\\\end{bmatrix}=x_1\begin{bmatrix}1\\2\\3\\4\\\end{bmatrix}+x_2\begin{bmatrix}1\\1\\1\\1\\\end{bmatrix}+x_3\begin{bmatrix}2\\3\\4\\5\\\end{bmatrix}</script><p>或者可以认为，Ax 代表着 A 的列空间。</p><p>显然，三个四维向量的线性组合是无法铺满整个四维空间的，就如同两个三维向量无法张开一个三维空间一样。所以，这里的 Ax 只能是<script type="math/tex">R^4</script>空间的部分子空间，也就是说，无法保证任意拿出一个四维向量 <script type="math/tex">b=\begin{bmatrix}b_1\\b_2\\b_3\\b_4\\\end{bmatrix}\in R^4</script>，都能找到A列向量的一种线性组合，使<script type="math/tex">Ax=b</script>。</p><p><strong>第二个问题</strong>：什么样的 b 可以使方程 Ax=b 有解？</p><p>上面介绍过，Ax 就表示着 A 列向量的所有线性组合，也就是 A 的列空间。上面提到，A 的列空间就是<script type="math/tex">R^4</script>的一个子空间，所以对于一个四维向量 b，只要 b 在“A 的列空间”这个<script type="math/tex">R^4</script>的子空间中，那么就可以找到一种 A 列向量的线性组合来构成 b。也就是使得 Ax=b 有解。</p><p><strong>第三个问题</strong>：能否去掉 A 的一列，却不影响 A 的列空间呢？</p><p>先看看这三个列向量：<script type="math/tex">\begin{bmatrix}1\\2\\3\\4\\\end{bmatrix}\begin{bmatrix}1\\1\\1\\1\\\end{bmatrix}\begin{bmatrix}2\\3\\4\\5\\\end{bmatrix}</script>。显然第三列<script type="math/tex">\begin{bmatrix}2\\3\\4\\5\\\end{bmatrix}</script>可以写成前两列的线性组合：<script type="math/tex">\begin{bmatrix}2\\3\\4\\5\\\end{bmatrix}=\begin{bmatrix}1\\2\\3\\4\\\end{bmatrix}+\begin{bmatrix}1\\1\\1\\1\\\end{bmatrix}</script>。也就是说这第三列对线性组合没有贡献。所以我们仅依靠前两列的线性组合就可以构成A的列空间。我们称<script type="math/tex">\begin{bmatrix}1\\2\\3\\4\\\end{bmatrix}\begin{bmatrix}1\\1\\1\\1\\\end{bmatrix}</script> 这样的列为主列。所以去掉第三列，并不影响 A 的列空间的构成。</p><h2 id="零空间"><a href="#零空间" class="headerlink" title="零空间"></a>零空间</h2><h3 id="零空间介绍"><a href="#零空间介绍" class="headerlink" title="零空间介绍"></a>零空间介绍</h3><p>所谓零空间，就是<script type="math/tex">Ax=0</script>的所有解所构成的一个空间。</p><p>还是以 <script type="math/tex">A=\begin{bmatrix}1 & 1 & 2\\2 & 1 & 3\\3 & 1 & 4\\4 & 1 & 5\\\end{bmatrix}</script> 为例，其零空间就是下面这个方程的解构成的空间：</p><script type="math/tex; mode=display">Ax=\begin{bmatrix}1 & 1 & 2\\2 & 1 & 3\\3 & 1 & 4\\4 & 1 & 5\\\end{bmatrix}\begin{bmatrix}x_1\\x_2\\x_3\\\end{bmatrix}=\begin{bmatrix}0\\0\\0\\0\\\end{bmatrix}=0</script><p>也就是 <script type="math/tex">x=\begin{bmatrix}x_1\\x_2\\x_3\\\end{bmatrix}</script>，可以看到x有三个分量，所以A的零空间是<script type="math/tex">R^3</script> 的子空间。</p><p>所以，对于<script type="math/tex">m\times n</script>的矩阵来说，列空间是<script type="math/tex">R^m</script>的子空间，零空间是<script type="math/tex">R^n</script>的子空间。<strong>列空间关键在于列空间的维数，零空间关键在于列向量的个数。</strong></p><p>首先来验证这样的 <script type="math/tex">\begin{bmatrix}x_1\\x_2\\x_3\\\end{bmatrix}</script> 为什么能构成向量空间？</p><ol><li>加法封闭：在此零空间中任取两向量 v,w，有 Av=Aw=0，很显然 A(v+w)=0，所以(v+w)也属于零空间，加法封闭得证；</li><li>数乘封闭：在此零空间中任取向量 v，Av=0，则 cAv=0。矩阵 A 与常数 c 位置可交换，所以 A(cv)=0。所以 cv 也在零空间中。数乘运算封闭得证。</li></ol><p>【例】求 <script type="math/tex">A=\begin{bmatrix}1 & 1 & 2\\2 & 1 & 3\\3 & 1 & 4\\4 & 1 & 5\\\end{bmatrix}</script> 的零空间。</p><p>我们讨论过，这个 A 的第三列可以写成前两列的线性组合，所以可以写出令 Ax=0 的一个解：<script type="math/tex">\begin{bmatrix}1\\1\\-1\\\end{bmatrix}</script>，而其零空间即为：<script type="math/tex">C\begin{bmatrix}1\\1\\-1\\\end{bmatrix}</script>(C表示任意常数)。反映在图像上，就是<script type="math/tex">R^3</script> 中的一条穿过原点的直线。</p><h3 id="Ax-b-的空间解释-1"><a href="#Ax-b-的空间解释-1" class="headerlink" title="Ax=b 的空间解释"></a>Ax=b 的空间解释</h3><p>那如果上面构造零空间的方程右侧变为任意向量的话，其解集 x 还能构成向量空间吗？</p><p>如：</p><script type="math/tex; mode=display">\begin{bmatrix}1 & 1 & 2\\2 & 1 & 3\\3 & 1 & 4\\4 & 1 & 5\\\end{bmatrix}\begin{bmatrix}x_1\\x_2\\x_3\\\end{bmatrix}=\begin{bmatrix}1\\2\\3\\4\\\end{bmatrix}</script><p>这样的所有 x 构成的解集还是向量空间吗？</p><p>显然不是。将 <script type="math/tex">\begin{bmatrix}x_1\\x_2\\x_3\\\end{bmatrix}=\begin{bmatrix}0\\0\\0\\\end{bmatrix}</script> 代入，其显然不是这个方程的解，就是说明这个解集里根本没有零向量。之前我们学过，任何一个向量集合中必须要有零向量。就是说明这个解集连最基本的要求都无法满足，构不成向量空间。</p><p>反映在图像上，这里所有的 <script type="math/tex">\begin{bmatrix}x_1\\x_2\\x_3\\\end{bmatrix}</script> 其实构成的是一个不过原点的平面。</p><p>这也告诉我们，想从 x 的角度研究<script type="math/tex">Ax=b</script>这个方程，则只有 b 是零向量时，x 才能构成空间(零空间)，其他情况中连零向量都不在解集中，更别谈向量空间了。</p><h2 id="学习感悟"><a href="#学习感悟" class="headerlink" title="学习感悟"></a>学习感悟</h2><p>这一节我们学习了列空间与零空间，从<script type="math/tex">Ax=b</script>入手，给出了两种构建子空间的方法：</p><ol><li>从 A 的列向量入手，根据列向量的线性组合构造空间；</li><li>从<script type="math/tex">Ax=0</script>方程组入手，让 x 满足特定条件来构造子空间；</li></ol>]]></content>
    
    
    <summary type="html">列空间和零空间</summary>
    
    
    
    <category term="Linear_Algebra" scheme="http://david-luge.cn/categories/Linear-Algebra/"/>
    
    
    <category term="Linear_Algebra" scheme="http://david-luge.cn/tags/Linear-Algebra/"/>
    
  </entry>
  
  <entry>
    <title>局域网 Git 搭建</title>
    <link href="http://david-luge.cn/2025/03/24/Git/%E5%B1%80%E5%9F%9F%E7%BD%91Git%E6%90%AD%E5%BB%BA/"/>
    <id>http://david-luge.cn/2025/03/24/Git/%E5%B1%80%E5%9F%9F%E7%BD%91Git%E6%90%AD%E5%BB%BA/</id>
    <published>2025-03-24T11:15:39.000Z</published>
    <updated>2025-03-24T11:15:39.000Z</updated>
    
    <content type="html"><![CDATA[<h1 id="局域网-Git-搭建"><a href="#局域网-Git-搭建" class="headerlink" title="局域网 Git 搭建"></a>局域网 Git 搭建</h1><h2 id="共享文件夹配置-Git-服务器"><a href="#共享文件夹配置-Git-服务器" class="headerlink" title="共享文件夹配置 Git 服务器"></a>共享文件夹配置 Git 服务器</h2><p>本文说明在局域网中用一台电脑作为服务器，在服务器中创建一个文件夹，并设置共享。然后该文件夹作为公开的版本库，局域网内其他电脑都可以访问，这样可以实现统一的版本管理。</p><h2 id="配置公开版本库"><a href="#配置公开版本库" class="headerlink" title="配置公开版本库"></a>配置公开版本库</h2><p>首先选取一个数据盘，在数据盘中建立一个文件夹，本例中的名称就是 git。</p><ul><li>在 git 目录下新建一个裸仓库名字为 rx_script,命令如下：</li></ul><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">git init --bare rx_script</span><br></pre></td></tr></table></figure><blockquote><p><code>git init --bare</code> 是 Git 里的一个常用命令，其作用是创建一个裸仓库。<br><strong>命令解析</strong><br><code>git init</code> 用于初始化一个新的 Git 仓库。而 <code>--bare</code> 是 <code>git init</code> 的一个参数，添加这个参数后，创建的仓库就不会包含工作目录，只包含 Git 版本控制所需的元数据文件，如 <code>objects</code>（存储对象数据）、<code>refs</code>（存储引用信息）、<code>HEAD</code>（指向当前分支）等。<br><strong>主要作用</strong></p><ul><li><strong>作为共享仓库</strong>：在团队协作开发中，通常需要一个中央仓库来存储项目的代码，让团队成员能够共享代码。由于裸仓库没有工作目录，避免了工作目录可能带来的文件冲突、本地修改等问题，所以非常适合作为共享仓库。成员们可以将自己本地仓库的代码推送到这个裸仓库，也能从这里拉取其他成员的更新。</li><li><strong>服务器端部署</strong>：在服务器上部署 Git 仓库时，一般会使用裸仓库。服务器的主要功能是存储和管理代码，并不需要实际的工作目录。使用裸仓库可以减少服务器的资源占用，提高性能。</li><li><strong>版本控制与备份</strong>：裸仓库保存了项目的完整版本历史记录，可用于对项目进行版本控制和备份。即使本地仓库出现问题，也能从裸仓库恢复到任意一个历史版本。</li></ul></blockquote><p>rx_script 目录结构如下：</p><p><img src="https://cdn.jsdelivr.net/gh/XduDavid/Blog_Img/LMWPbBh5goked9xJlaJcvV6Lnpg.png" alt="LMWPbBh5goked9xJlaJcvV6Lnpg"></p><ul><li>设置 git 文件夹为共享文件夹</li></ul><p>右键 git 文件夹，属性：</p><p><img src="https://cdn.jsdelivr.net/gh/XduDavid/Blog_Img/WtwBbu2uroip2LxIOYLciZ3dneh.png" alt="WtwBbu2uroip2LxIOYLciZ3dneh"></p><ul><li>用户设置为 everyone，并进行共享</li></ul><p><img src="https://cdn.jsdelivr.net/gh/XduDavid/Blog_Img/GT3Fb5PNYonC8vxVseTcOvX9nBf.png" alt="GT3Fb5PNYonC8vxVseTcOvX9nBf"></p><ul><li>此时文件夹属性中就有一个网络路径：</li></ul><p><img src="https://cdn.jsdelivr.net/gh/XduDavid/Blog_Img/TW3fbKXh2oCfuHxeW0ncZ3nYnSg.png" alt="TW3fbKXh2oCfuHxeW0ncZ3nYnSg"></p><h2 id="客户端"><a href="#客户端" class="headerlink" title="客户端"></a>客户端</h2><ul><li>在客户端，右键我的电脑-&gt; 映射网络驱动器：</li></ul><p><img src="https://cdn.jsdelivr.net/gh/XduDavid/Blog_Img/LDKKbn8h5opAFyxrSx7cviNPnAd.png" alt="LDKKbn8h5opAFyxrSx7cviNPnAd"></p><ul><li>此时会发现电脑下多了个 Y 盘。Y 盘就是公开文件夹：</li></ul><p><img src="https://cdn.jsdelivr.net/gh/XduDavid/Blog_Img/MDzpbsImToKDg1xd7ATcM03rnpj.png" alt="MDzpbsImToKDg1xd7ATcM03rnpj"></p><p>git 就是公开版本库</p><h2 id="测试"><a href="#测试" class="headerlink" title="测试"></a>测试</h2><p>在各自需要同步的电脑上，创建本地版本库，并于远端进行关联即可。</p><p>比如我要在”D:\proj\scrpit”路径下去关联版本库，仅需：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">git init</span><br><span class="line">git remote add origin Y:\\rx_script</span><br></pre></td></tr></table></figure><p>后续完成”git add”，”git commit”，“git push”等操作后即完成了对仓库的初始化。</p><blockquote><p>考虑到仓库大小，最好第一次上库的时候就添加.gitignore 文件，避免跟踪过多不必要的文件。</p></blockquote><p>在仓库第一次初始化完后，后续接入的电脑仅需：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">git init</span><br><span class="line">git remote add origin Y:\\rx_script</span><br><span class="line">git fetch</span><br></pre></td></tr></table></figure><p>即可完成仓库的同步。</p>]]></content>
    
    
    <summary type="html">对局域网Git搭建的流程做了整理，方便以后快速查阅</summary>
    
    
    
    <category term="Git" scheme="http://david-luge.cn/categories/Git/"/>
    
    
    <category term="Git" scheme="http://david-luge.cn/tags/Git/"/>
    
  </entry>
  
  <entry>
    <title>线性代数05-转置矩阵与向量空间</title>
    <link href="http://david-luge.cn/2025/03/16/Linear_Algebra/%E7%BA%BF%E6%80%A7%E4%BB%A3%E6%95%B0-5/"/>
    <id>http://david-luge.cn/2025/03/16/Linear_Algebra/%E7%BA%BF%E6%80%A7%E4%BB%A3%E6%95%B0-5/</id>
    <published>2025-03-16T07:14:39.000Z</published>
    <updated>2025-03-16T07:14:39.000Z</updated>
    
    <content type="html"><![CDATA[<h1 id="Linear-Algebra-转置矩阵与向量空间-05"><a href="#Linear-Algebra-转置矩阵与向量空间-05" class="headerlink" title="Linear Algebra-转置矩阵与向量空间-05"></a>Linear Algebra-转置矩阵与向量空间-05</h1><h2 id="概要"><a href="#概要" class="headerlink" title="概要"></a>概要</h2><p>本节我们再谈置换矩阵与转置矩阵，并介绍对称矩阵，之后便进入学习线代的关键所在：向量空间与子空间。</p><h2 id="置换矩阵"><a href="#置换矩阵" class="headerlink" title="置换矩阵"></a>置换矩阵</h2><h3 id="回顾"><a href="#回顾" class="headerlink" title="回顾"></a>回顾</h3><p>所谓的置换矩阵 P，就是用来完成行交换的矩阵，更具体地说，是行重新排列了的单位矩阵。例如 I 就是一个置换矩阵，只不过 I 对矩阵没影响。</p><p>那么对于 n 阶矩阵来说，有多少个置换矩阵呢？答案是：n!种，也就是将单位矩阵 I 各行重新排列后所有可能的情况的数量。</p><p>置换矩阵的另一个优点就是可逆，因为置换矩阵各行还原后可以得到单位矩阵。而且对于置换矩阵 P，有<script type="math/tex">PP^T=I</script>，也就是<script type="math/tex">P^{-1}=P^{T}</script>。</p><p>这个性质其实很好理解，首先明确，P 是置换矩阵，因此 P 的每个列向量中只有一个分量是 1，其余分量均是 0。而既然要求<script type="math/tex">PP^{-1}=I</script>，那就<strong>说明</strong><script type="math/tex">P</script><strong>中每一行的行向量与</strong><script type="math/tex">P^{-1}</script><strong>中每一列的列向量的数量积为 1，也就意味着</strong><script type="math/tex">P</script><strong>中每一行与</strong><script type="math/tex">P^{-1}</script><strong>中每一列中分量 1 出现的位置相同</strong>，也就是<script type="math/tex">P</script>与<script type="math/tex">P^{-1}</script>沿对角线对称，所以<script type="math/tex">P^{-1}=P^{T}</script>。</p><h3 id="置换矩阵的使用"><a href="#置换矩阵的使用" class="headerlink" title="置换矩阵的使用"></a>置换矩阵的使用</h3><p>在讲消元法的时候，主元位置为 0 是一件很让人头疼的事，这时就需要置换矩阵 P 来完成行交换，确保消元过程顺利进行。上节学习<script type="math/tex">A=LU</script>分解时，我们没有考虑要交换行的过程，如果我们想写出更普适的 LU 分解式的话，必须把行交换情况考虑进去，即：<script type="math/tex">PA=LU</script>，先用行交换使得主元位置不为 0，行顺序正确，其后再使用 LU 分解。</p><h2 id="转置矩阵"><a href="#转置矩阵" class="headerlink" title="转置矩阵"></a>转置矩阵</h2><h3 id="转置矩阵回顾"><a href="#转置矩阵回顾" class="headerlink" title="转置矩阵回顾"></a>转置矩阵回顾</h3><p>之前简单介绍过转置矩阵，即：</p><script type="math/tex; mode=display">A=\begin{bmatrix}1 & 3\\2 & 3\\4 & 1\\\end{bmatrix},A^T=\begin{bmatrix}1 & 2 & 4\\3 & 3 & 1\\\end{bmatrix}</script><p>用符号来表示就是对<script type="math/tex">A</script>矩阵以及<script type="math/tex">A^T</script>矩阵中每一个元素，都有：</p><script type="math/tex; mode=display">(A^T)_{ij}=A_{ji}</script><p>也就是说，转置矩阵中，行元素与列元素交换了，理解转置很简单。</p><h3 id="对称矩阵"><a href="#对称矩阵" class="headerlink" title="对称矩阵"></a>对称矩阵</h3><p>对称矩阵，顾名思义，就是主对角线两侧元素对应相等的矩阵。或者说，对于矩阵 A，如果有<script type="math/tex">A=A^T</script>，那么矩阵 A 就是一个对称矩阵，如 <script type="math/tex">\begin{bmatrix}3 & 1 & 7\\1 & 2 & 9\\7 & 9 & 4\\\end{bmatrix}</script>。</p><p>那么我们如何获取到对称矩阵呢？很简单，矩阵<script type="math/tex">A</script>与<script type="math/tex">A^T</script>相乘得到的方阵一定是对称矩阵，因为我们从对称矩阵的定义来看，取<script type="math/tex">(A^TA)^T</script>，根据转置的运算规律，可知<script type="math/tex">(AB)^T=B^TA^T</script>，所以有：</p><script type="math/tex; mode=display">(A^TA)^T=A^TA^{TT}=A^TA</script><p>所以任何的<script type="math/tex">A^TA</script>，转置仍然是其本身，故称为对称矩阵。</p><h2 id="向量空间与子空间"><a href="#向量空间与子空间" class="headerlink" title="向量空间与子空间"></a>向量空间与子空间</h2><h3 id="向量空间"><a href="#向量空间" class="headerlink" title="向量空间"></a>向量空间</h3><p>首先明确“向量空间”的概念，它表示一整个空间的向量，但是要注意，不是任意向量的集合都能被称为向量空间。所谓的向量空间，必须满足一定规则，就是：<strong>该空间对线性运算(相加，数乘)封闭</strong>。类似：v-&gt;3v 或者 v, w-&gt; v+w 运算，若得到的 3v 或者 v+w 都仍然在此空间中，则这个空间可称为向量空间。</p><p>举个例子，<script type="math/tex">R^2</script>就是一个向量空间，其中的向量均为二维实向量。在<script type="math/tex">R^2</script>上就存在线性组合，我们举例说明：</p><p><script type="math/tex">\begin{bmatrix}3\\2\\\end{bmatrix},\begin{bmatrix}0\\0\\\end{bmatrix},\begin{bmatrix}\pi\\e\\\end{bmatrix}</script>均在<script type="math/tex">R^2</script>的实数二维向量空间中，对它们做线性运算，得到的结果仍然在<script type="math/tex">R^2</script> 空间中。</p><p><img src="https://raw.githubusercontent.com/XduDavid/Blog_Img/main/transport_matrix0.png" alt="transport_matrix0"></p><p>显然，<script type="math/tex">R^2</script>的向量空间可以构成一个平面，即是图上的 xoy 平面。这个向量空间存在的关键在于上图中平面上任何向量都在<script type="math/tex">R^2</script>向量空间中，尤其是<strong>零向量</strong>。因为线性运算是“数乘”“相加”，任何向量乘上 0 或者加上其反向向量后得到的都是零向量，所以它必然存在于所有向量空间中，这一点十分重要。</p><p>同样，推广到<script type="math/tex">R^3</script>空间，<script type="math/tex">R^3</script>中是三维的向量，每个分量均为实数，例如 <script type="math/tex">\begin{bmatrix}3\\2\\0\\\end{bmatrix}</script>，这样的向量就在<script type="math/tex">R^3</script> 空间中。</p><p>再进行推广，<script type="math/tex">R^n</script>空间中包括所有的 n 维向量，每个列向量有 n 个分量，且分量均为实数。</p><p>再举一个不是向量空间的例子：</p><p>还是<script type="math/tex">R^2</script>空间中，但是这次我们只取第一象限内的区域 D：</p><p><img src="https://raw.githubusercontent.com/XduDavid/Blog_Img/main/transport_matrix1.png" alt="transport_matrix1"></p><p>显然，这部分空间无法满足“线性组合仍在空间中”的要求，比如数乘运算时，随便取个负数，向量就会跑到第三象限去，脱离 D 空间范围内了。</p><h3 id="子空间"><a href="#子空间" class="headerlink" title="子空间"></a>子空间</h3><p>上面的反例已经证明，在向量空间里随便取其一部分，很可能得到的不是向量空间。那如果我们取向量空间的一部分，构成的有没有可能是向量空间呢？ 答案是有的，这样还能构成向量空间的部分我们称之为子空间，还是以<script type="math/tex">R^2</script>为例：</p><p><img src="https://raw.githubusercontent.com/XduDavid/Blog_Img/main/transport_matrix2.png" alt="transport_matrix2"></p><p>如图，整个坐标平面表示的就是原向量空间<script type="math/tex">R^2</script>，而这条<strong>穿过原点的直线</strong>就是<script type="math/tex">R^2</script>的子空间之一。检验一下这条直线上的任意向量，他们的“数乘”，“相加”运算结果全部仍在这条直线上，这就构成了一个子空间。而如果这条直线不过原点，那么零向量都不在这个空间中，就更别谈什么子空间了。</p><p>那<script type="math/tex">R^2</script>空间中，还有没有其他的子空间呢？既然我们这么强调零向量，那就让它单独成一个空间就好了。记为 Z，其中之后一个零向量，它也是<script type="math/tex">R^2</script>的子空间之一。</p><p>再稍微推广一下，<script type="math/tex">R^3</script>的子空间就是如下三个：</p><ol><li>穿过原点的平面；</li><li>穿过原点的直线；</li><li>Z，原点；</li></ol><h3 id="列空间"><a href="#列空间" class="headerlink" title="列空间"></a>列空间</h3><p>上面介绍的子空间都是基于已知的图像来寻找的，接下来我们<strong>通过具体的矩阵来构造一个子空间</strong>，比如：列向量构造出的列空间。</p><p>我们以 <script type="math/tex">A=\begin{bmatrix}1 & 3\\2 & 3\\4 & 1\\\end{bmatrix}</script>为例。首先能看出来，各列向量<script type="math/tex">\begin{bmatrix}1\\2\\4\\\end{bmatrix},\begin{bmatrix}3\\3\\1\\\end{bmatrix}</script>均属于<script type="math/tex">R^3</script>，而且由这两个向量张开的子空间必须满足“线性运算封闭”这一性质。也就是说<script type="math/tex">\begin{bmatrix}1\\2\\4\\\end{bmatrix},\begin{bmatrix}3\\3\\1\\\end{bmatrix}</script>以及它们的线性组合构成了一个<script type="math/tex">R^3</script> 的子空间，我们称之为：列空间，记为 C(A)。</p><p><img src="https://raw.githubusercontent.com/XduDavid/Blog_Img/main/transport_matrix3.png" alt="transport_matrix3"></p><p>因为 <script type="math/tex">\begin{bmatrix}1\\2\\4\\\end{bmatrix},\begin{bmatrix}3\\3\\1\\\end{bmatrix}</script> 不在同一条直线上，所以，这个列空间表现在图像上，就是<strong>一个过原点与这两个列向量的平面</strong>。</p><p>两个向量 <script type="math/tex">\begin{bmatrix}1\\2\\4\\\end{bmatrix},\begin{bmatrix}3\\3\\1\\\end{bmatrix}</script>以及它们的所有线性组合都在这个二维平面上，构成一个空间。这里需要我们好好理解，用教授的话说“<script type="math/tex">R^3</script>情况下还可以作图，但是更高维的类似于<script type="math/tex">R^{10}</script>情况你要怎么办？譬如求<script type="math/tex">R^{10}</script> 空间中 5 个向量线性组合是什么样的？如果不共线，我们就可以类似地理解为一个十维空间中的五维平面之类的东西。”</p><p>这里还要注意列向量之间的性质，如果列向量之间就是共线的，那么其列空间就是一条过原点的直线。</p><h2 id="学习感悟"><a href="#学习感悟" class="headerlink" title="学习感悟"></a>学习感悟</h2><p>这节介绍了向量空间和子空间，并由子空间引出了通过具体的列向量构成的空间—列空间。如何理解空间的概念非常重要，本节中对低维的空间做了图，目的是便于我们理解“空间”这一概念。</p>]]></content>
    
    
    <summary type="html">转置矩阵与向量空间</summary>
    
    
    
    <category term="Linear_Algebra" scheme="http://david-luge.cn/categories/Linear-Algebra/"/>
    
    
    <category term="Linear_Algebra" scheme="http://david-luge.cn/tags/Linear-Algebra/"/>
    
  </entry>
  
  <entry>
    <title>芯片的工艺角</title>
    <link href="http://david-luge.cn/2025/03/16/IC/Basic/%E8%8A%AF%E7%89%87%E7%9A%84%E5%B7%A5%E8%89%BA%E8%A7%92/"/>
    <id>http://david-luge.cn/2025/03/16/IC/Basic/%E8%8A%AF%E7%89%87%E7%9A%84%E5%B7%A5%E8%89%BA%E8%A7%92/</id>
    <published>2025-03-16T03:34:39.000Z</published>
    <updated>2025-03-16T03:34:39.000Z</updated>
    
    <content type="html"><![CDATA[<h1 id="芯片的工艺角"><a href="#芯片的工艺角" class="headerlink" title="芯片的工艺角"></a>芯片的工艺角</h1><h2 id="芯片领域中的工艺角：概念与原理"><a href="#芯片领域中的工艺角：概念与原理" class="headerlink" title="芯片领域中的工艺角：概念与原理"></a><strong>芯片领域中的工艺角：概念与原理</strong></h2><p>在芯片设计中，“工艺角”（Process Corner）通常指的是制造过程中由于工艺参数的离散性（例如阈值电压、栅极氧化层厚度、掺杂浓度等）而造成的晶体管性能差异。<strong>不同的工艺角会导致芯片在速度、功耗等方面出现差异</strong>。为了保证芯片在各种可能的制造偏差条件下都能正常工作，设计工程师会在仿真阶段对不同工艺角进行分析和验证。</p><h3 id="1-什么是工艺角？"><a href="#1-什么是工艺角？" class="headerlink" title="1. 什么是工艺角？"></a><strong>1. 什么是工艺角？</strong></h3><p>工艺角（Process Corner）可以理解为在晶圆制造工艺允许的范围内，器件性能的最坏或最好情况的组合。通常用几个关键词来描述：</p><ul><li><strong>SS（Slow-Slow）</strong>：NMOS 和 PMOS 都是“最慢”工艺角。</li><li><strong>FF（Fast-Fast）</strong>：NMOS 和 PMOS 都是“最快”工艺角。</li><li><strong>TT（Typical-Typical）</strong>：NMOS 和 PMOS 都是“典型”工艺角。</li><li><strong>SF（Slow-Fast）</strong>：NMOS 慢、PMOS 快。</li><li><strong>FS（Fast-Slow）</strong>：NMOS 快、PMOS 慢。</li></ul><p>这里的“慢”和“快”并不是指实际的时钟速度，而是<strong>指器件的特性</strong>：阈值电压较高时，器件会偏慢；阈值电压较低时，器件会偏快。</p><p><img src="https://raw.githubusercontent.com/XduDavid/Blog_Img/main/NXz3bLJ0IoffE9xsET2cQNhln1e.png" alt="NXz3bLJ0IoffE9xsET2cQNhln1e"></p><h3 id="2-为什么要考虑工艺角？"><a href="#2-为什么要考虑工艺角？" class="headerlink" title="2. 为什么要考虑工艺角？"></a><strong>2. 为什么要考虑工艺角？</strong></h3><p>半导体制造过程中不可避免地会有一定的工艺波动（Process Variation）。如果只针对“典型”工艺角进行设计和验证，那么在实际制造时可能会遇到比典型情况更差或更好的器件性能，从而造成电路无法正常工作、功耗或速度不达标等问题。</p><ul><li><strong>在慢角（SS）下</strong>：器件速度变慢，电路延迟增加；同时器件阈值电压通常更高，漏电流更小，静态功耗会有所降低，但动态功耗也会因为速度减慢而有不同表现。</li><li><strong>在快角（FF）下</strong>：器件速度加快，电路延迟降低；但阈值电压通常更低，漏电流更大，可能导致静态功耗上升。</li></ul><p>因此，设计工程师需要在快角、慢角等极端情况下进行时序和功耗分析，以确保芯片在这些最坏或最好条件下依然能够正常工作。</p><hr><h2 id="其他影响芯片性能的因素：电压与温度"><a href="#其他影响芯片性能的因素：电压与温度" class="headerlink" title="其他影响芯片性能的因素：电压与温度"></a><strong>其他影响芯片性能的因素：电压与温度</strong></h2><p>除了工艺本身的差异外，芯片在不同电压和温度下的性能也会发生变化。为了全面反映芯片的工作范围，工程师通常会考虑<strong>PVT（Process、Voltage、Temperature）三个因素的组合，也称为PVT Corners</strong>。</p><ul><li><strong>电压（Voltage）</strong>：工作电压的上限和下限会影响晶体管的驱动能力和漏电流。</li><li><strong>温度（Temperature）</strong>：高温会增加漏电流、减小迁移率，导致器件速度下降；低温则可能使器件速度上升。</li></ul><p>因此，芯片设计通常要在最坏和最好的电压、温度条件下进行时序和功耗分析，确保芯片能够在整个 PVT 范围内可靠工作。</p><hr><h2 id="工艺角可能造成的影响"><a href="#工艺角可能造成的影响" class="headerlink" title="工艺角可能造成的影响"></a><strong>工艺角可能造成的影响</strong></h2><h3 id="对-PIN-信号的影响"><a href="#对-PIN-信号的影响" class="headerlink" title="对 PIN 信号的影响"></a><strong>对 PIN 信号的影响</strong></h3><p>不同工艺角会影响 <strong>信号完整性、时序、功耗和驱动能力</strong>，对 <strong>输入（Input）</strong> 和 <strong>输出（Output）</strong> PIN 均有影响。</p><h4 id="1-数字信号-PIN"><a href="#1-数字信号-PIN" class="headerlink" title="(1) 数字信号 PIN"></a><strong>(1) 数字信号 PIN</strong></h4><p><strong>影响因素：</strong></p><ul><li><p><strong>传播延迟（Propagation Delay）</strong></p><ul><li><strong>FF 工艺角</strong>：MOSFET 开关速度快，延迟最短，可能导致时序收敛困难，甚至产生 <strong>赛道竞争（Race Condition）</strong> 问题。</li><li><strong>SS 工艺角</strong>：MOSFET 速度慢，延迟最长，可能导致 Setup 时间（Tsetup）或 Hold 时间（Thold）违例，影响时序可靠性。</li></ul></li><li><p><strong>上升/下降时间（Rise/Fall Time）</strong></p><ul><li>FF 工艺角时，边沿更陡，可能导致高频噪声更强。</li><li>SS 工艺角时，边沿变缓，可能影响高速通信接口，如 <strong>DDR、PCIe</strong> 等。</li></ul></li><li><p><strong>电平阈值（Logic Threshold）</strong></p><ul><li>不同工艺角会导致输入信号的<strong>高低电平阈值变化</strong>，影响输入信号的识别可靠性。</li></ul></li></ul><h4 id="2-模拟信号-PIN"><a href="#2-模拟信号-PIN" class="headerlink" title="(2) 模拟信号 PIN"></a><strong>(2) 模拟信号 PIN</strong></h4><p><strong>影响因素：</strong></p><ul><li><p><strong>增益与失真（Gain &amp; Distortion）</strong></p><ul><li>FF 工艺角：MOSFET 的跨导（gm）更大，增益可能变高，但非线性失真也可能增大。</li><li>SS 工艺角：跨导变小，增益可能下降，影响放大器性能。</li></ul></li><li><p><strong>输入偏置电流（Input Bias Current）</strong></p><ul><li>FF 工艺角：漏电流增加，输入偏置电流可能增大，影响高阻抗模拟电路（如 ADC、运放）。</li><li>SS 工艺角：偏置电流较小，但可能增加噪声。</li></ul></li><li><p><strong>带宽和相位裕量</strong></p><ul><li>FF 工艺角：MOSFET 速度快，带宽可能增加，但相位裕量可能降低，导致不稳定。</li><li>SS 工艺角：带宽下降，信号可能变得更慢，影响 ADC 采样率。</li></ul></li></ul><hr><h3 id="对干扰（EMI-噪声）的影响"><a href="#对干扰（EMI-噪声）的影响" class="headerlink" title="对干扰（EMI/噪声）的影响"></a><strong>对干扰（EMI/噪声）的影响</strong></h3><p>工艺角会影响 <strong>电磁干扰（EMI）、串扰（Crosstalk）和电源噪声（Power Noise）</strong>，进而影响 PIN 信号的稳定性。</p><h4 id="1-电磁干扰（EMI）"><a href="#1-电磁干扰（EMI）" class="headerlink" title="(1) 电磁干扰（EMI）"></a><strong>(1) 电磁干扰（EMI）</strong></h4><ul><li><p><strong>FF 工艺角</strong>：</p><ul><li>MOSFET 速度快，信号切换更陡峭，高频分量更强，容易产生更强的 EMI。</li><li>需要额外考虑 <strong>PCB 走线屏蔽、地弹噪声（Ground Bounce）</strong> 及 <strong>去耦电容（Decoupling Cap）</strong> 的优化。</li></ul></li><li><p><strong>SS 工艺角</strong>：</p><ul><li>由于信号上升/下降时间变慢，EMI 相对较弱，但会导致信号质量下降，如<strong>眼图（Eye Diagram）收缩</strong>。</li></ul></li></ul><h4 id="2-串扰（Crosstalk）"><a href="#2-串扰（Crosstalk）" class="headerlink" title="(2) 串扰（Crosstalk）"></a><strong>(2) 串扰（Crosstalk）</strong></h4><ul><li><p><strong>FF 工艺角</strong>：</p><ul><li>信号上升时间短，高频分量增加，容易导致相邻信号线（特别是高速总线，如 DDR）之间的串扰增强。</li><li>需要增加 <strong>信号屏蔽、差分走线</strong> 或调整 PCB 布局。</li></ul></li><li><p><strong>SS 工艺角</strong>：</p><ul><li>信号传播时间变长，串扰相对较弱，但过慢的信号可能影响数据传输速率。</li></ul></li></ul><h4 id="3-电源噪声（Power-Noise）"><a href="#3-电源噪声（Power-Noise）" class="headerlink" title="(3) 电源噪声（Power Noise）"></a><strong>(3) 电源噪声（Power Noise）</strong></h4><ul><li><p><strong>FF 工艺角</strong>：</p><ul><li>由于开关速度快，电流突变更剧烈，容易引起 <strong>电源纹波（Power Ripple）</strong> 和 <strong>地弹噪声（Ground Bounce）</strong>，导致信号抖动（Jitter）。</li><li>需要优化电源去耦和 LDO/电感的设计。</li></ul></li><li><p><strong>SS 工艺角</strong>：</p><ul><li>电流变化较小，电源噪声较低，但电路性能可能不足，如振荡器频率下降、PLL 锁定时间变长。</li></ul></li></ul><h3 id="典型案例"><a href="#典型案例" class="headerlink" title="典型案例"></a>典型案例</h3><div class="table-container"><table><thead><tr><th style="text-align:center">应用</th><th style="text-align:center">FF 影响</th><th style="text-align:center">SS 影响</th></tr></thead><tbody><tr><td style="text-align:center">高速数字接口（DDR, PCIe, USB）</td><td style="text-align:center">EMI 增加，可能出现信号反射</td><td style="text-align:center">速度变慢，数据吞吐量下降</td></tr><tr><td style="text-align:center">ADC/DAC</td><td style="text-align:center">增益偏移，噪声增大</td><td style="text-align:center">带宽变小，响应速度下降</td></tr><tr><td style="text-align:center">PLL（锁相环）</td><td style="text-align:center">锁定时间缩短，但相位噪声增加</td><td style="text-align:center">锁定时间变长，可能无法正常工作</td></tr><tr><td style="text-align:center">电源管理（LDO, DC-DC）</td><td style="text-align:center">纹波增大，可能需要更大的去耦电容</td><td style="text-align:center">稳压变慢，响应滞后</td></tr></tbody></table></div><hr><h2 id="设计优化策略"><a href="#设计优化策略" class="headerlink" title="设计优化策略"></a><strong>设计优化策略</strong></h2><h3 id="1-数字电路优化"><a href="#1-数字电路优化" class="headerlink" title="(1) 数字电路优化"></a><strong>(1) 数字电路优化</strong></h3><ul><li>采用 <strong>静态时序分析（STA）</strong>，确保在 <strong>SS 工艺角</strong> 仍满足时序要求。</li><li>在 FF 角测试 <strong>EMI</strong>，如果过大，可调整信号上升时间（如插入小电容）。</li><li>适当调整 <strong>驱动强度</strong>，减少串扰影响。</li></ul><h3 id="2-模拟电路优化"><a href="#2-模拟电路优化" class="headerlink" title="(2) 模拟电路优化"></a><strong>(2) 模拟电路优化</strong></h3><ul><li>在 <strong>SS 工艺角</strong> 下确保带宽足够，避免增益衰减影响信号质量。</li><li>在 <strong>FF 工艺角</strong> 下关注功耗和失真，避免 MOSFET 过驱动。</li></ul><h3 id="3-电源优化"><a href="#3-电源优化" class="headerlink" title="(3) 电源优化"></a><strong>(3) 电源优化</strong></h3><ul><li>采用 <strong>更好的去耦电容（如 X7R/X5R 陶瓷电容）</strong>，减少电源噪声。</li><li>在 PLL 设计中，优化 <strong>环路滤波器（Loop Filter）</strong> 以适应不同工艺角。</li><li>适当增加 <strong>电源裕量（Voltage Margining）</strong>，确保不同工艺角下都能稳定工作。</li></ul><hr><h2 id="总结"><a href="#总结" class="headerlink" title="总结"></a><strong>总结</strong></h2><p>工艺角（TT、SS、FF）不仅影响芯片的核心逻辑，还会对 <strong>PIN 信号质量、EMI、串扰、电源噪声</strong> 等方面产生显著影响：</p><ul><li><strong>FF 工艺角</strong>：信号快、噪声大、功耗高、串扰强，时序更紧张。</li><li><strong>SS 工艺角</strong>：信号慢、功耗低、噪声小，但可能影响电路性能。</li><li><strong>SF/FS 工艺角</strong>：主要影响模拟电路的 P/N 不匹配问题，如放大器失调。</li></ul><p>在设计时，需要 <strong>PVT（Process-Voltage-Temperature）联合仿真</strong>，并针对不同工艺角进行 <strong>时序分析、信号完整性优化、去耦设计</strong>，确保系统可靠运行。</p><p>在半导体工艺不断缩进（如从 7nm 向 5nm、3nm 演进）的过程中，器件的工艺波动日益显著，对设计的精细化管理也提出了更高要求。只有深入理解并有效应对工艺角的挑战，才能在芯片设计中保证高良率、高性能和低功耗，为最终产品提供可靠的技术支撑。</p>]]></content>
    
    
    <summary type="html">简述芯片的工艺角</summary>
    
    
    
    <category term="IC" scheme="http://david-luge.cn/categories/IC/"/>
    
    <category term="Basics" scheme="http://david-luge.cn/categories/IC/Basics/"/>
    
    
    <category term="Basics" scheme="http://david-luge.cn/tags/Basics/"/>
    
  </entry>
  
  <entry>
    <title>线性代数04-矩阵LU分解</title>
    <link href="http://david-luge.cn/2025/03/16/Linear_Algebra/%E7%BA%BF%E6%80%A7%E4%BB%A3%E6%95%B0-4/"/>
    <id>http://david-luge.cn/2025/03/16/Linear_Algebra/%E7%BA%BF%E6%80%A7%E4%BB%A3%E6%95%B0-4/</id>
    <published>2025-03-16T03:14:39.000Z</published>
    <updated>2025-03-16T03:14:39.000Z</updated>
    
    <content type="html"><![CDATA[<h1 id="Linear-Algebra-矩阵的-LU-分解-04"><a href="#Linear-Algebra-矩阵的-LU-分解-04" class="headerlink" title="Linear Algebra-矩阵的 LU 分解-04"></a>Linear Algebra-矩阵的 LU 分解-04</h1><h2 id="概要"><a href="#概要" class="headerlink" title="概要"></a>概要</h2><p>这一节首先完善之前讲到的逆矩阵内容，然后使用消元矩阵介绍 A 的 LU 分解，即将矩阵 A 分解为矩阵 L 与上三角矩阵 U，介绍这种运算的普遍规律。最后再一次提起之前介绍的“行交换矩阵”，引入置换矩阵的概念。</p><h2 id="逆矩阵性质补充"><a href="#逆矩阵性质补充" class="headerlink" title="逆矩阵性质补充"></a>逆矩阵性质补充</h2><p>首先考虑一个问题：如果 A，B 都是可逆矩阵的话，AB 的逆矩阵是什么呢？这个问题并不复杂，想求出逆矩阵，无非就是令<script type="math/tex">AB\times(AB)^{-1}=I</script>，而我们不难想到<script type="math/tex">ABB^{-1}A^{-1}=I</script>，因此有：</p><script type="math/tex; mode=display">(AB)^{-1}=B^{-1}A^{-1}</script><p>由于下一章中要涉及到矩阵的转置问题，我们在这里一起讨论矩阵转置和矩阵的逆的关系。</p><p>首先介绍一下转置矩阵，转置矩阵就是将原矩阵各行转换为各列所得到的新矩阵，如：</p><script type="math/tex; mode=display">A=\begin{bmatrix}1 & 2\\3 & 4\\4 & 1\end{bmatrix},A^T=\begin{bmatrix}1 & 3 & 4\\2 & 4 & 1\end{bmatrix}</script><p>接下来我们看看转置矩阵和逆矩阵有什么联系。说到逆矩阵，最经典的式子无非就是<script type="math/tex">AA^{-1}=I</script>。为了找到转置矩阵<script type="math/tex">A^T</script>与逆矩阵<script type="math/tex">A^{-1}</script>间的关系，我们对<script type="math/tex">AA^{-1}=I</script>两边同时进行转置运算，得到：</p><script type="math/tex; mode=display">(AA^{-1})^T=(A^{-1})^TA^T=I</script><p>为什么<script type="math/tex">(A^{-1})^T</script>会变换到<script type="math/tex">A^T</script>的前面来呢？我们用非方阵 A 来理解一下这个过程，假设 A 是一个 <script type="math/tex">3\times 4</script>的矩阵，则A的右逆<script type="math/tex">A^{-1}</script>是一个<script type="math/tex">4\times 3</script>的矩阵，二者相乘是一个 <script type="math/tex">3\times 3</script> 的单位矩阵。</p><p>对其求转置，如果<script type="math/tex">A^T</script>在<script type="math/tex">(A^{-1})^T</script>前面，则会得到一个 <script type="math/tex">4\times 4</script> 的单位矩阵，矛盾。</p><p>再次观察此式：<script type="math/tex">(A^{-1})^TA^T=I</script>，由于 A 是方阵，则<script type="math/tex">A^{T}</script>必然也是方阵，那么我们就能得到<script type="math/tex">A^T</script>的逆矩阵，即为<script type="math/tex">(A^{-1})^T</script>，也就是说：<script type="math/tex">(A^T)^{-1}=(A^{-1})^T</script></p><p>这个结果告诉我们：<strong>对于单个矩阵，转置和取逆两个运算顺序可以颠倒。</strong></p><h2 id="矩阵的-LU-分解"><a href="#矩阵的-LU-分解" class="headerlink" title="矩阵的 LU 分解"></a>矩阵的 LU 分解</h2><p>我们熟悉的消元法都是直接使用行变换得来的，而由于消元矩阵的存在，说明用矩阵乘法也可以达到与之一样的消元效果。所以，现在假设有可逆矩阵 A，如果有：<script type="math/tex">A-初等行变换->U(上三角矩阵)</script>，就一定有类似于这样的形式：<script type="math/tex">E\times A=U</script>的等式存在，使 A 相当于进行了初等行变换成为了 U。而我们已经学习了逆矩阵，E 这样的矩阵一定有逆矩阵，因为它本身就是由单位阵变化过来的。所以<script type="math/tex">E\times A=U</script>可以写成<script type="math/tex">A=E^{-1}\times U</script>。这一形式即为<script type="math/tex">A=LU</script>形式，这个过程就是 LU 分解过程。</p><p>那么<strong>矩阵 L(下三角矩阵)</strong>是否有什么特别之处呢？我们可以通过一道例题来探讨下：</p><p>【例】现有<script type="math/tex">E_{32}E_{31}E_{21}A=U</script>，已知 <script type="math/tex">E_{32}=\begin{bmatrix}1 & 0 & 0\\0 & 1 & 0\\0 & -5 & 1\\\end{bmatrix}</script>，<script type="math/tex">E_{21}=\begin{bmatrix}1 & 0 & 0\\-2 & 1 & 0\\0 & 0 & 1\\\end{bmatrix}</script>，<script type="math/tex">E_{31}=I</script>，求<script type="math/tex">A=LU</script> 分解后的 L。</p><p>思路：</p><ol><li>逆矩阵化简为<script type="math/tex">A=E_{21}^{-1}E_{31}^{-1}E_{32}^{-1}U</script>；</li><li>后面计算各个矩阵：<script type="math/tex">E_{21}^{-1}=\begin{bmatrix}1 & 0 & 0\\2 & 1 & 0\\0 & 0 & 1\\\end{bmatrix}</script>，<script type="math/tex">E_{32}^{-1}=\begin{bmatrix}1 & 0 & 0\\0 & 1 & 0\\0 & 5 & 1\\\end{bmatrix}</script></li><li>直接带入计算：<script type="math/tex">L=E_{21}^{-1}E_{31}^{-1}E_{32}^{-1}=\begin{bmatrix}1 & 0 & 0\\2 & 1 & 0\\0 & 5 & 1\\\end{bmatrix}</script></li></ol><p>观察发现，L 具有一个非常重要的特点，L 矩阵中各个元素都是<script type="math/tex">E_{21}^{-1}</script>与<script type="math/tex">E_{32}^{-1}</script>中对应位置的元素。</p><p>以上的结论给了我们启示，在使用<script type="math/tex">A=LU</script>分解矩阵的时候，我们只需要从 U 入手，反过来考虑：<strong>看如何通过行变换可以将上三角矩阵 U 变回 A，然后再将单位阵按此形式变化，就得到了 L 矩阵。</strong>这个性质也是<script type="math/tex">A=LU</script>形式分解矩阵的最大优点。</p><h3 id="LU-分解意义"><a href="#LU-分解意义" class="headerlink" title="LU 分解意义"></a>LU 分解意义</h3><p>对于线性方程组 <script type="math/tex">Ax = b</script>，当矩阵 A 可以进行 LU 分解<script type="math/tex">A = LU</script>时，原方程组可转化为 <script type="math/tex">LUx = b</script>。令 <script type="math/tex">Ux = y</script>，则先求解 <script type="math/tex">Ly = b</script>（因为 L 是下三角矩阵，求解相对容易，可通过前代法逐步计算），得到 y；再求解 <script type="math/tex">Ux = y</script>（U 是上三角矩阵，可通过回代法求解），从而得到原方程组的解 x。相比于直接求解 <script type="math/tex">Ax = b</script>，这种方法在计算量上通常更具优势，尤其是对于大型矩阵，可显著减少计算量和计算时间。</p><h3 id="运算量"><a href="#运算量" class="headerlink" title="运算量"></a>运算量</h3><p>以上，我们已经学会了 A=LU 分解矩阵方法，那么现在有一个额外问题，就是消元的运算量问题，比如现在我们有一个 <script type="math/tex">100\times 100</script> 的大矩阵(无 0 元素)。我们需要运算(将一个数乘系数后加到另一数上消元，每一个这样的过程称为一次运算)多少次后，才能将其化为上三角矩阵呢？</p><p>这个问题我们先从列的角度进行考虑，第一列消元运算结束后，矩阵将会变成 <script type="math/tex">\begin{bmatrix}1 & ... & ... & ...\\0 & ... & ... & ...\\... & ... & ... & ...\\0 & ... & ... & ...\\\end{bmatrix}</script>的形式，这一步中，第一列的元素运算了100次，而第一行一共有100个元素，于是仅第一行与第一列的消元结束后，我们就运算了<script type="math/tex">100^2</script>次。之后我们要研究的就变成了剩下的 <script type="math/tex">99\times 99</script>的矩阵。以此类推，最后的运算量为：<script type="math/tex">\sum_{k=1}^{n}k^2</script></p><p>这种写法看上去比较难计算，我们可以根据微积分中学到的知识，加入我们计算的不是离散点之和，而是连续区域上函数的黎曼和的话，我们可以通过积分来计算区域面积值的和。我们可以采用积分来估计和，也就是这样估算：<script type="math/tex">\sum_{k=1}^{n}k^2=\int_{1}^{n}x^2dx</script>。</p><h2 id="置换矩阵"><a href="#置换矩阵" class="headerlink" title="置换矩阵"></a>置换矩阵</h2><p>我们之前接触过行变换所用到的矩阵，即是将单位阵 I 按照对应行变换方式进行操作之后得到的矩阵。它可以交换矩阵中的两行，代替矩阵行变换。什么时候我们需要使用矩阵行变换呢？一个经典的例子就是：在消元过程中，当矩阵主元位置上面为 0 时，我们就需要用行变换将主元位置换位非 0 数。</p><p>这样的由单位阵变换而来的矩阵，通过矩阵乘法可以使被乘矩阵行交换。我们将这样的矩阵称为置换矩阵 P。我们通过一个例子来熟悉一下置换矩阵。</p><p>【例】求矩阵 <script type="math/tex">\begin{bmatrix}1 & 0 & 0\\0 & 1 & 0\\0 & 0 & 1\\\end{bmatrix}</script> 的所有置换矩阵，并判断其性质。</p><p>一共有 6 个置换矩阵：</p><script type="math/tex; mode=display">\begin{bmatrix}1 & 0 & 0\\0 & 1 & 0\\0 & 0 & 1\\\end{bmatrix}\begin{bmatrix}0 & 1 & 0\\1 & 0 & 0\\0 & 0 & 1\\\end{bmatrix}\begin{bmatrix}1 & 0 & 0\\0 & 0 & 1\\0 & 1 & 0\\\end{bmatrix}\begin{bmatrix}0 & 1 & 0\\0 & 0 & 1\\1 & 0 & 0\\\end{bmatrix}\begin{bmatrix}0 & 0 & 1\\0 & 1 & 0\\1 & 0 & 0\\\end{bmatrix}\begin{bmatrix}0 & 0 & 1\\1 & 0 & 0\\0 & 1 & 0\\\end{bmatrix}</script><p>这可以理解为一个群，很明显，我们任取两个矩阵相乘，结果仍在这个群中。</p><blockquote><p>推广到 n 阶矩阵，n 阶矩阵有(n!)个置换矩阵，就是将单位矩阵 I 各行重新排列后所有可能的情况数量。其中(n!)的计算过程如下：首先单看第一行，有 n 种选择，其次看第二行，有(n-1)中选择，依次到最后一行，因此一共有(n!)个置换矩阵。</p></blockquote><h2 id="学习感悟"><a href="#学习感悟" class="headerlink" title="学习感悟"></a>学习感悟</h2><p>本节我们对矩阵的转置、逆矩阵的性质进行了部分介绍，学习了矩阵的 LU 分解，了解了这种分解方式的优点所在，并学会了直接构造 L 矩阵，简化消元过程。</p><p><img src="https://raw.githubusercontent.com/XduDavid/Blog_Img/main/matrix_lu_xmind.png" alt="matrix_lu_xmind"></p>]]></content>
    
    
    <summary type="html">矩阵的LU分解</summary>
    
    
    
    <category term="Linear_Algebra" scheme="http://david-luge.cn/categories/Linear-Algebra/"/>
    
    
    <category term="Linear_Algebra" scheme="http://david-luge.cn/tags/Linear-Algebra/"/>
    
  </entry>
  
  <entry>
    <title>线性代数03-矩阵乘法和逆矩阵</title>
    <link href="http://david-luge.cn/2025/03/16/Linear_Algebra/%E7%BA%BF%E6%80%A7%E4%BB%A3%E6%95%B0-3/"/>
    <id>http://david-luge.cn/2025/03/16/Linear_Algebra/%E7%BA%BF%E6%80%A7%E4%BB%A3%E6%95%B0-3/</id>
    <published>2025-03-16T02:54:39.000Z</published>
    <updated>2025-03-16T02:54:39.000Z</updated>
    
    <content type="html"><![CDATA[<h1 id="Linear-Algebra-乘法和逆矩阵-03"><a href="#Linear-Algebra-乘法和逆矩阵-03" class="headerlink" title="Linear Algebra-乘法和逆矩阵-03"></a>Linear Algebra-乘法和逆矩阵-03</h1><h2 id="知识概要"><a href="#知识概要" class="headerlink" title="知识概要"></a>知识概要</h2><p>前面介绍了向量与矩阵之间的乘法，这一节我们要介绍两个矩阵之间的乘法，并讨论逆矩阵存在的条件。最后介绍了求解逆矩阵的方法。</p><h2 id="矩阵乘法"><a href="#矩阵乘法" class="headerlink" title="矩阵乘法"></a>矩阵乘法</h2><h3 id="矩阵乘法最常见求解方式"><a href="#矩阵乘法最常见求解方式" class="headerlink" title="矩阵乘法最常见求解方式"></a>矩阵乘法最常见求解方式</h3><p>首先了解下矩阵之间进行乘法时，我们是如何求解单个元素的呢？</p><p>以$C=A\times B$为例，矩阵 C 中第 i 行第 k 列的元素等于矩阵 A 的第 i 行元素与矩阵 B 的第 k 列对应元素乘积之和。</p><p>设矩阵 A 是一个 $3\times4$的矩阵，矩阵B是一个$4\times4$的矩阵，根据矩阵乘法规则，它们的乘积$C = AB$是一个 $3\times4$的矩阵。其计算公式为：<script type="math/tex">c_{ik}=\sum_{j = 1}^{4}a_{ij}b_{jk}=a_{i1}b_{1k}+a_{i2}b_{2k}+a_{i3}b_{3k}+a_{i4}b_{4k}</script></p><p>推广到一般：<script type="math/tex">C_{ij}=(A的第i行)\cdot(B的第j列)=\sum_{k=1}^{n}a_{ik}b_{kj}</script></p><p>需要注意的是矩阵的规格问题，从向量点乘的角度看，<strong>A 的列数必须要与 B 的行数相同</strong>。</p><h3 id="列组合与行组合方式"><a href="#列组合与行组合方式" class="headerlink" title="列组合与行组合方式"></a>列组合与行组合方式</h3><h4 id="列组合"><a href="#列组合" class="headerlink" title="列组合"></a>列组合</h4><p>上一节我们学习到，矩阵与列向量的乘积，结果是一个列向量，该列向量可视为矩阵各列的线性组合。</p><p>那我们在计算矩阵间的乘法时，<strong>B 矩阵中的各列其实就是用来组合 A 矩阵的各列向量</strong>。其中<script type="math/tex">b_{0},b_{1}</script>等分别是 B 矩阵的列向量：</p><script type="math/tex; mode=display">A\times B = A\times \begin{bmatrix}b_{0} & b_{1} & b_{2} & b_{3}\end{bmatrix}=\begin{bmatrix}Ab_{0} & Ab_{1} & Ab_{2} & Ab_{3}\end{bmatrix}=C</script><p>该方法关键在于将右侧矩阵 B 看做列向量的线性组合，将问题转化为矩阵与向量的乘法问题。表明了矩阵 C 就是矩阵 A 中各列向量的线性组合，而 B 其实是在告诉我们，要以什么样的方式组合 A 中的列向量。</p><h4 id="行组合"><a href="#行组合" class="headerlink" title="行组合"></a>行组合</h4><p>同理，我们还学过行向量与矩阵的乘法，得到一个行向量。</p><script type="math/tex; mode=display">\begin{bmatrix}   m & n & k\end{bmatrix}\begin{bmatrix}   a_{1,1} & a_{1,2} & a_{1,3}\\   a_{2,1} & a_{2,2} & a_{2,3}\\   a_{3,1} & a_{3,2} & a_{3,3}\end{bmatrix}=m\begin{bmatrix}   a_{1,1} & a_{1,2} & a_{1,3}\end{bmatrix}+n\begin{bmatrix}   a_{2,1} & a_{2,2} & a_{2,3}\end{bmatrix}+k\begin{bmatrix}   a_{3,1} & a_{3,2} & a_{3,3}\end{bmatrix}</script><p>因此这次就把矩阵 A 看做行向量的组合就行了，其中<script type="math/tex">a_{0}^{T},a_{1}^{T}</script>分别是 A 的行向量：</p><script type="math/tex; mode=display">A\times B=\begin{bmatrix}   a_{0}^{T} \\   a_{1}^{T} \\   a_{2}^{T}\end{bmatrix}\times B=\begin{bmatrix}   a_{0}^{T}\times B \\   a_{1}^{T}\times B \\   a_{2}^{T}\times B\end{bmatrix} = C</script><p>即矩阵 B 各行的线性组合组成了 C 的各行。</p><h3 id="列乘以行"><a href="#列乘以行" class="headerlink" title="列乘以行"></a>列乘以行</h3><p>常规方法中，计算$A\times B=C$的矩阵乘法时，使用 A 的行向量乘上 B 的列向量得到 C 中各个位置的元素。</p><p>而我们这次介绍的方法，是用 A 的列向量乘以 B 的行向量，得到各个矩阵，再将矩阵相加，得到 C。</p><p>我们通过一个例子来说明：</p><p>【例】求解 <script type="math/tex">\begin{bmatrix}2 & 7\\3 & 8\\4 & 9\end{bmatrix}\begin{bmatrix}1 & 6\\1 & 2\end{bmatrix}</script></p><p>列乘行方法：</p><script type="math/tex; mode=display">\begin{bmatrix}2 & 7\\3 & 8\\4 & 9\end{bmatrix}\begin{bmatrix}1 & 6\\1 & 2\end{bmatrix}=\begin{bmatrix}2\\3\\4\end{bmatrix}\begin{bmatrix}1 & 6\end{bmatrix}+\begin{bmatrix}7\\8\\9\end{bmatrix}\begin{bmatrix}1 & 2\end{bmatrix}=\begin{bmatrix}2 & 12\\3 & 18\\4 & 24\end{bmatrix}+\begin{bmatrix}7 & 14\\8 & 16\\9 & 18\end{bmatrix}=\begin{bmatrix}9 & 26\\11 & 34\\13 & 42\end{bmatrix}</script><p>注意这里每一次都是用列向量与行向量相乘得到一个矩阵，而每次得到的矩阵都是有特点的，比如 <script type="math/tex">\begin{bmatrix}2\\3\\4\end{bmatrix}\begin{bmatrix}1 & 6\end{bmatrix}=\begin{bmatrix}2 & 12\\3 & 18\\4 & 24\end{bmatrix}</script>，其中<script type="math/tex">\begin{bmatrix}2 & 12\\3 & 18\\4 & 24\end{bmatrix}</script>的每一列都与<script type="math/tex">\begin{bmatrix}2\\3\\4\end{bmatrix}</script>同向，每一行都与<script type="math/tex">\begin{bmatrix}1 & 6\end{bmatrix}</script> 同向。因此，该矩阵的列空间(矩阵列所有可能的线性组合)和行空间(矩阵行所有可能的线性组合)都是一条直线。</p><h3 id="分块乘法"><a href="#分块乘法" class="headerlink" title="分块乘法"></a>分块乘法</h3><p>分块乘法就是宏观上的矩阵乘法，比如现在有一个 $50\times 50$的矩阵与$50\times 50$矩阵相乘，一个个进行运算很麻烦，尤其是如果矩阵在某一区域上有一定的性质(如某一矩阵分块内全部为 0 元素)，那么我们可以将其分块，如：</p><script type="math/tex; mode=display">\begin{bmatrix}A_{1} & A_{2}\\A_{3} & A_{4}\end{bmatrix}\begin{bmatrix}B_{1} & B_{2}\\B_{3} & B_{4}\end{bmatrix}=\begin{bmatrix}C_{1} & C_{2}\\C_{3} & C_{4}\end{bmatrix}</script><p>其中的<script type="math/tex">A_{i},B_{i}</script>都是划分后的一块块矩阵，如：</p><p><img src="https://raw.githubusercontent.com/XduDavid/Blog_Img/main/blocked_matrix_mulply.png" alt="blocked_matrix_mulply"></p><p>而<script type="math/tex">C_{1}=A_{1}B_{1}+A_{2}B_{3}</script>，和矩阵乘法的计算步骤一样，只是这里的<script type="math/tex">A_{1}B_{1},A_{2}B_{3}</script>都是矩阵间的乘法而已。只要 A 和 B 分块相互匹配，就可以用这样的分块乘法求解。</p><h2 id="逆矩阵"><a href="#逆矩阵" class="headerlink" title="逆矩阵"></a>逆矩阵</h2><h3 id="逆矩阵介绍"><a href="#逆矩阵介绍" class="headerlink" title="逆矩阵介绍"></a>逆矩阵介绍</h3><p>之前我们介绍过一些逆矩阵的定义，对于一个<strong>方阵</strong> A，如果 A 可逆，就有$A^{-1}$，使得：$AA^{-1}=I=A^{-1}A$。</p><p>如果 A 是<strong>非方阵</strong>，左侧的$A^{-1}$与右侧的$A^{-1}$不可能相同，因为此时左右侧的$A^{-1}$形状一定不相同。</p><p>再以一个没有逆的矩阵为例：<script type="math/tex">\begin{bmatrix}1 & 2\\3 & 6\end{bmatrix}</script>，矩阵中的两个列向量互为倍数，也就是说其中一个向量对他们的线性组合无意义，那么这个 A 不可能有逆，换句话说：<strong>若存在非零向量 x，使得 Ax=0，那么 A 就不可能有逆矩阵。</strong></p><p>为什么呢？如果 A 有逆，且 x 是非零向量。则我们在$Ax=0$这个等式两边同时乘上$A^{-1}$，就有$A^{-1}Ax=Ix=0$，又因为$Ix=x$不是零向量，矛盾。因此此时 A 没有逆矩阵。</p><p>此时再回头看矩阵 <script type="math/tex">\begin{bmatrix}1 & 2\\3 & 6\end{bmatrix}</script>，由于两个列向量线性相关，一定有一个x，使得$Ax=0$，如<script type="math/tex">\begin{bmatrix}3\\-1\end{bmatrix}</script>，因此该矩阵不可逆。</p><h3 id="逆矩阵求解"><a href="#逆矩阵求解" class="headerlink" title="逆矩阵求解"></a>逆矩阵求解</h3><p>其实求逆矩阵就是解方程组的过程，举例说明：</p><p>【例】求解 <script type="math/tex">\begin{bmatrix}1 & 3\\2 & 7\end{bmatrix}</script> 的逆矩阵</p><script type="math/tex; mode=display">\begin{bmatrix}1 & 3\\2 & 7\end{bmatrix}\begin{bmatrix}a & b\\c & d\end{bmatrix}=I=\begin{bmatrix}1 & 0\\0 & 1\end{bmatrix}</script><p>从列向量的角度看，得到两个方程：</p><script type="math/tex; mode=display">\begin{bmatrix}1 & 3\\2 & 7\end{bmatrix}\begin{bmatrix}a\\c\end{bmatrix}=\begin{bmatrix}1\\0\end{bmatrix}</script><script type="math/tex; mode=display">\begin{bmatrix}1 & 3\\2 & 7\end{bmatrix}\begin{bmatrix}b\\d\end{bmatrix}=\begin{bmatrix}0\\1\end{bmatrix}</script><p>解这个方程就行了，但是这样做低阶矩阵还好，高阶矩阵计算量未免太大了。所以这里介绍一下高斯-若尔当方法。</p><h3 id="高斯-若尔当方法"><a href="#高斯-若尔当方法" class="headerlink" title="高斯-若尔当方法"></a>高斯-若尔当方法</h3><p>还是上面的例子，两个方程：<script type="math/tex">\begin{bmatrix}1 & 3\\2 & 7\end{bmatrix}\begin{bmatrix}a\\c\end{bmatrix}=\begin{bmatrix}1\\0\end{bmatrix}</script>，<script type="math/tex">\begin{bmatrix}1 & 3\\2 & 7\end{bmatrix}\begin{bmatrix}b\\d\end{bmatrix}=\begin{bmatrix}0\\1\end{bmatrix}</script></p><p>这个方法就是可以同时处理两个方程组，即使用增广矩阵联系两个方程。增广矩阵格式如下：</p><script type="math/tex; mode=display">\begin{bmatrix}1 & 3 & 1 & 0\\2 & 7 & 0 & 1\end{bmatrix}</script><p>接下来进行行变换，将左侧的 $2\times 2$ 矩阵消为单位矩阵 I，此时右侧矩阵即为逆矩阵。</p><script type="math/tex; mode=display">\begin{bmatrix}1 & 3 & 1 & 0\\2 & 7 & 0 & 1\end{bmatrix}->\begin{bmatrix}1 & 3 & 1 & 0\\0 & 1 & -2 & 1\end{bmatrix}->\begin{bmatrix}1 & 0 & 7 & -3\\0 & 1 & -2 & 1\end{bmatrix}</script><p>即逆矩阵为 <script type="math/tex">\begin{bmatrix}7 & -3\\-2 & 1\end{bmatrix}</script>。</p><p>接下来我们论证其合理性：</p><p>上面这个过程，对 <script type="math/tex">\begin{bmatrix}1 & 3\\2 & 7\end{bmatrix}</script>进行消元处理使它变成单位矩阵I，就相当于<strong>左乘一堆的消元矩阵</strong>，设为E，就有<script type="math/tex">E\begin{bmatrix}1 & 3\\2 & 7\end{bmatrix}=I</script>，那么E肯定就是$A^{-1}$。再看右边，单位矩阵I经历了与<script type="math/tex">\begin{bmatrix}1 & 3\\2 & 7\end{bmatrix}</script>同样的消元过程，最后的结果相当于$EI=A^{-1}$，那虚线右侧得到的结果就是$A^{-1}$。</p><h2 id="学习收获"><a href="#学习收获" class="headerlink" title="学习收获"></a>学习收获</h2><p>本节介绍了认识矩阵乘法的不同角度，并介绍了逆矩阵的相关知识以及如何求解逆矩阵。MIT 的课程少有繁琐的证明，更多的是理解和类比，多从向量、空间、线性组合的角度去认识矩阵之间的运算。</p><p><img src="https://raw.githubusercontent.com/XduDavid/Blog_Img/main/linear_algebra_multiply_and_inverse.png" alt="linear_algebra_multiply_and_inverse"></p>]]></content>
    
    
    <summary type="html">矩阵乘法和逆矩阵</summary>
    
    
    
    <category term="Linear_Algebra" scheme="http://david-luge.cn/categories/Linear-Algebra/"/>
    
    
    <category term="Linear_Algebra" scheme="http://david-luge.cn/tags/Linear-Algebra/"/>
    
  </entry>
  
  <entry>
    <title>线性代数02-矩阵消元</title>
    <link href="http://david-luge.cn/2025/03/16/Linear_Algebra/%E7%BA%BF%E6%80%A7%E4%BB%A3%E6%95%B0-2/"/>
    <id>http://david-luge.cn/2025/03/16/Linear_Algebra/%E7%BA%BF%E6%80%A7%E4%BB%A3%E6%95%B0-2/</id>
    <published>2025-03-16T01:54:39.000Z</published>
    <updated>2025-03-16T01:54:39.000Z</updated>
    
    <content type="html"><![CDATA[<h1 id="Linear-Algebra-矩阵消元-02"><a href="#Linear-Algebra-矩阵消元-02" class="headerlink" title="Linear Algebra-矩阵消元-02"></a>Linear Algebra-矩阵消元-02</h1><h2 id="概要"><a href="#概要" class="headerlink" title="概要"></a>概要</h2><p>这一节中我们介绍一下消元法，即是上一节中我们提到的“系统化”求解方程所用的方法，通过矩阵的消元运算可以很轻松地求解复杂方程。另外介绍了消元矩阵，即消元运算在矩阵乘法中所表现的形式。并从消元矩阵引入，介绍逆矩阵的基础知识。</p><h2 id="消元法求解方程"><a href="#消元法求解方程" class="headerlink" title="消元法求解方程"></a>消元法求解方程</h2><h3 id="消元法介绍"><a href="#消元法介绍" class="headerlink" title="消元法介绍"></a>消元法介绍</h3><p>对于一些“好”的系数矩阵（可逆）A 来说，我们可以使用<strong>消元法</strong>来求解方程$Ax=b$，我们还是从一个例子开始谈起。</p><p>求解方程：$x+2y+z=2, 3x+8y+z=12, 4y+z=2$</p><p>还是使用矩阵运算，将方程写成矩阵的形式$Ax=b$，$\begin{bmatrix}<br>1 &amp; 2 &amp; 1 \\<br>3 &amp; 8 &amp; 1 \\<br>0 &amp; 4 &amp; 1<br>\end{bmatrix}\begin{bmatrix}<br>x \\<br>y \\<br>z<br>\end{bmatrix}=\begin{bmatrix}<br>2 \\<br>12 \\<br>2<br>\end{bmatrix}$</p><p>所谓矩阵的消元法，与我们初等数学中学习的解二元一次方程组的消元法其实师出同门，都是将不同行的方程进行消元运算来简化方程，最后能得到简化的方程组，只不过这里我们是将系数单独抽出来做运算，<strong>寻找一种矩阵情况下的普遍规律而已</strong>。</p><p>消元针对的是系数矩阵 A：$\begin{bmatrix}<br>1 &amp; 2 &amp; 1 \<br>3 &amp; 8 &amp; 1 \<br>0 &amp; 4 &amp; 1<br>\end{bmatrix}$。首先注意，左上角的 1 是消元法的关键，被称为主元“1”，接下来通过我们熟悉的“将一行乘倍数加到另一行”的行化简方法将第一列中除了主元之外的元素全变为 0。</p><script type="math/tex; mode=display">\begin{bmatrix}   1 & 2 & 1 \\   3 & 8 & 1 \\   0 & 4 & 1\end{bmatrix}-(2,1)->\begin{bmatrix}   1 & 2 & 1 \\   0 & 2 & -2 \\   0 & 4 & 1\end{bmatrix}</script><p>第一步目标达成，我们在第一列中只留下了主元 1，很好，接下来我们可以认为第一行与第一列已经“完工”了，再看去掉第一行第一列之后右下角剩下的部分：$\begin{bmatrix}<br>2 &amp; -2 \\<br>4 &amp; 1<br>\end{bmatrix}$，同样，我们将左上角的 2 视为主元，消元第一列，使其列上（不包括已经完成消元的第一行中的元素）除此主元 2 外都为 0。</p><script type="math/tex; mode=display">\begin{bmatrix}   1 & 2 & 1 \\   0 & 2 & -2 \\   0 & 4 & 1\end{bmatrix}-(3,2)->\begin{bmatrix}   1 & 2 & 1 \\   0 & 2 & -2 \\   0 & 0 & 5\end{bmatrix}</script><p>这时候第三行只剩下 5，我们直接将其处理为主元即可。得：</p><script type="math/tex; mode=display">\begin{bmatrix}   1 & 2 & 1 \\   3 & 8 & 1 \\   0 & 4 & 1\end{bmatrix}-(2,1)->\begin{bmatrix}   1 & 2 & 1 \\   0 & 2 & -2 \\   0 & 4 & 1\end{bmatrix}-(3,2)->\begin{bmatrix}   1 & 2 & 1 \\   0 & 2 & -2 \\   0 & 0 & 5\end{bmatrix}</script><p>由于<strong>矩阵 A 可逆</strong>，因此经过消元处理得到的上三角矩阵 $U=\begin{bmatrix}<br>1 &amp; 2 &amp; 1 \\<br>0 &amp; 2 &amp; -2 \\<br>0 &amp; 0 &amp; 5<br>\end{bmatrix}$ 中有三个主元。至此，消元结束，得到的 U 即为我们想要化简的形式。</p><blockquote><p>TIPS：<br>并不是所有的矩阵都可以消元处理，需要注意在消元过程中，如果主元位置(左上角)为 0，那么意味着这个主元不可取，需要进行“换行处理”，首先看它的下一行对应位置是不是 0，如果不是，就将这两行位置互换，将非零数视为主元。如果是，就再看下下行，以此类推。若其下面每一行都看到了，仍然没有非零数的话，那就意味着这个矩阵不可逆，消元法求出的解不唯一。下面是三个例子：<br>$\begin{bmatrix}<br>0 &amp; 2 &amp; 1 \\<br>0 &amp; 2 &amp; -2 \\<br>0 &amp; 0 &amp; 5<br>\end{bmatrix}$，$\begin{bmatrix}<br>1 &amp; 2 &amp; 1 \\<br>0 &amp; 0 &amp; -2 \\<br>0 &amp; 0 &amp; 5<br>\end{bmatrix}$，$\begin{bmatrix}<br>1 &amp; 2 &amp; 1 \\<br>0 &amp; 2 &amp; -2 \\<br>0 &amp; 0 &amp; 0<br>\end{bmatrix}$</p></blockquote><h3 id="回带求解"><a href="#回带求解" class="headerlink" title="回带求解"></a>回带求解</h3><p>其实回带求解应该跟消元法同时进行，只不过一些在一些软件的工作原理中他们是分别进行的，所以这里我们分开讨论，先介绍增广矩阵：</p><p>仍然是例一中的方程：$\begin{bmatrix}<br>1 &amp; 2 &amp; 1 \\<br>3 &amp; 8 &amp; 1 \\<br>0 &amp; 4 &amp; 1<br>\end{bmatrix}\begin{bmatrix}<br>x \\<br>y \\<br>z<br>\end{bmatrix}=\begin{bmatrix}<br>2 \\<br>12 \\<br>2<br>\end{bmatrix}$，我们先给出增广矩阵形式：</p><script type="math/tex; mode=display">\begin{bmatrix}   1 & 2 & 1 & 2\\   3 & 8 & 1 & 12\\   0 & 4 & 1 & 2\end{bmatrix}</script><p>显然，就是把系数矩阵 A 和向量 b 拼接成一个矩阵就行了。</p><p>然后像我们之前说的那样消元，但是这次要带着增广的 $b=\begin{bmatrix}<br>2 \\<br>12 \\<br>2<br>\end{bmatrix}$ 一起进行：</p><script type="math/tex; mode=display">\begin{bmatrix}   1 & 2 & 1 & 2\\   3 & 8 & 1 & 12\\   0 & 4 & 1 & 2\end{bmatrix}-(2,1)->\begin{bmatrix}   1 & 2 & 1 & 2\\   0 & 2 & -2 & 6\\   0 & 4 & 1 & 2\end{bmatrix}-(3,2)->\begin{bmatrix}   1 & 2 & 1 & 2 \\   0 & 2 & -2 & 6\\   0 & 0 & 5 & -10\end{bmatrix}</script><p>之后，我们再带回方程$Ax=b$，变为：</p><script type="math/tex; mode=display">x+2y+z=2, 2y-2z=6, 5z=-10</script><p>从下向上开始求解，就很容易求出 x, y, z 的值了。</p><h2 id="消元矩阵"><a href="#消元矩阵" class="headerlink" title="消元矩阵"></a>消元矩阵</h2><h3 id="行向量与矩阵的乘法"><a href="#行向量与矩阵的乘法" class="headerlink" title="行向量与矩阵的乘法"></a>行向量与矩阵的乘法</h3><p>上面的消元法是从简单的变换角度介绍了消元的具体操作，接下来我们需要用矩阵来表示变换的步骤，这是十分必要的，因为这是一种“系统地”变换矩阵的方法。</p><p>首先介绍向量与矩阵之间的乘法，上一节中我们提到了矩阵和列向量之间的乘法，是矩阵中列向量的线性组合，如：</p><script type="math/tex; mode=display">\begin{bmatrix}   a_{1,1} & a_{1,2} & a_{1,3}\\   a_{2,1} & a_{2,2} & a_{2,3}\\   a_{3,1} & a_{3,2} & a_{3,3}\end{bmatrix}\begin{bmatrix}   m\\   n\\   k\end{bmatrix}=m\begin{bmatrix}   a_{1,1}\\   a_{2,1}\\   a_{3,1}\end{bmatrix}+n\begin{bmatrix}   a_{1,2}\\   a_{2,2}\\   a_{3,2}\end{bmatrix}+k\begin{bmatrix}   a_{1,3}\\   a_{2,3}\\   a_{3,3}\end{bmatrix}</script><p>但这并不能解决我们现在的问题，因为我们在消元法中使用到的是行变换，那么我们就要思考，行向量和矩阵的乘积是什么呢？</p><script type="math/tex; mode=display">\begin{bmatrix}   m & n & k\end{bmatrix}\begin{bmatrix}   a_{1,1} & a_{1,2} & a_{1,3}\\   a_{2,1} & a_{2,2} & a_{2,3}\\   a_{3,1} & a_{3,2} & a_{3,3}\end{bmatrix}=m\begin{bmatrix}   a_{1,1} & a_{1,2} & a_{1,3}\end{bmatrix}+n\begin{bmatrix}   a_{2,1} & a_{2,2} & a_{2,3}\end{bmatrix}+k\begin{bmatrix}   a_{3,1} & a_{3,2} & a_{3,3}\end{bmatrix}</script><p>从上面的过程可以看出，<strong>行向量和矩阵的乘积是矩阵中行向量的线性组合</strong>。</p><p>至于行向量为什么放左边则是从矩阵乘法的维数匹配去考虑，以上式为例，行向量维数为 $1\times3$，矩阵维数为$3\times3$，因此行向量只能置于矩阵的左侧。</p><h3 id="消元矩阵介绍"><a href="#消元矩阵介绍" class="headerlink" title="消元矩阵介绍"></a>消元矩阵介绍</h3><p>该部分内容是重点。学会了行向量与矩阵之间的乘法，我们就可以使用行向量对矩阵的行进行操作了。所谓消元矩阵，就是将消元过程中的行变换转化为矩阵之间的乘法形式。</p><p>首先需知下面三个式子成立：</p><script type="math/tex; mode=display">\begin{bmatrix}   1 & 0 & 0\end{bmatrix}\begin{bmatrix}   a_{1,1} & a_{1,2} & a_{1,3}\\   a_{2,1} & a_{2,2} & a_{2,3}\\   a_{3,1} & a_{3,2} & a_{3,3}\end{bmatrix} = \begin{bmatrix}   a_{1,1} & a_{1,2} & a_{1,3}\end{bmatrix}</script><script type="math/tex; mode=display">\begin{bmatrix}   0 & 1 & 0\end{bmatrix}\begin{bmatrix}   a_{1,1} & a_{1,2} & a_{1,3}\\   a_{2,1} & a_{2,2} & a_{2,3}\\   a_{3,1} & a_{3,2} & a_{3,3}\end{bmatrix} = \begin{bmatrix}   a_{2,1} & a_{2,2} & a_{2,3}\end{bmatrix}</script><script type="math/tex; mode=display">\begin{bmatrix}   0 & 0 & 1\end{bmatrix}\begin{bmatrix}   a_{1,1} & a_{1,2} & a_{1,3}\\   a_{2,1} & a_{2,2} & a_{2,3}\\   a_{3,1} & a_{3,2} & a_{3,3}\end{bmatrix} = \begin{bmatrix}   a_{3,1} & a_{3,2} & a_{3,3}\end{bmatrix}</script><p>此时将 $\begin{bmatrix}<br>1 &amp; 0 &amp; 0<br>\end{bmatrix}\begin{bmatrix}<br>0 &amp; 1 &amp; 0<br>\end{bmatrix}\begin{bmatrix}<br>0 &amp; 0 &amp; 1<br>\end{bmatrix}$构成一个矩阵：单位阵：$\begin{bmatrix}<br>1 &amp; 0 &amp; 0\\<br>0 &amp; 1 &amp; 0\\<br>0 &amp; 0 &amp; 1<br>\end{bmatrix}$，易得单位阵与矩阵相乘不改变矩阵。消元矩阵就是单位阵的变换形式，我们仍以例一中的矩阵说明：</p><script type="math/tex; mode=display">\begin{bmatrix}   ? & ? & ?\\   ? & ? & ?\\   ? & ? & ?\end{bmatrix}\begin{bmatrix}   1 & 2 & 1\\   3 & 8 & 1\\   0 & 4 & 1\end{bmatrix}=\begin{bmatrix}   1 & 2 & 1\\   0 & 2 & -2\\   0 & 4 & 1\end{bmatrix}</script><p>首先明确：</p><script type="math/tex; mode=display">\begin{bmatrix}   1 & 0 & 0\\   0 & 1 & 0\\   0 & 0 & 1\end{bmatrix}\begin{bmatrix}   1 & 2 & 1\\   3 & 8 & 1\\   0 & 4 & 1\end{bmatrix}=\begin{bmatrix}   1 & 2 & 1\\   3 & 8 & 1\\   0 & 4 & 1\end{bmatrix}</script><p>消元过程的第一步是将第一行乘(-3)加到第二行，这是对第二行的操作，那么我们就从单位阵的第二行着手：</p><script type="math/tex; mode=display">\begin{bmatrix}   1 & 0 & 0\\   0 & 1 & 0\\   0 & 0 & 1\end{bmatrix}-[L2=L2+L1*(-3)]->\begin{bmatrix}   1 & 0 & 0\\   -3 & 1 & 0\\   0 & 0 & 1\end{bmatrix}</script><p>根据先前的结论，“<strong>行向量和矩阵的乘积是矩阵中行向量的线性组合”</strong>。因此</p><script type="math/tex; mode=display">\begin{bmatrix}   -3 & 1 & 0\end{bmatrix}\begin{bmatrix}   1 & 2 & 1\\   3 & 8 & 1\\   0 & 4 & 1\end{bmatrix}=-3\begin{bmatrix}   1 & 2 & 1\end{bmatrix}+1\begin{bmatrix}   3 & 8 & 1\end{bmatrix}=\begin{bmatrix}   0 & 2 & -2\end{bmatrix}</script><p>因此，经验证，这一步的消元矩阵就是 $\begin{bmatrix}<br>1 &amp; 0 &amp; 0\\<br>-3 &amp; 1 &amp; 0\\<br>0 &amp; 0 &amp; 1<br>\end{bmatrix}$，我们将其记为$E_{21}$，意义是将矩阵 A 中 2 行 1 列(2,1)位置变为 0 的消元矩阵。</p><p>同样，计算 $\begin{bmatrix}<br>1 &amp; 2 &amp; 1 &amp; 2\\<br>0 &amp; 2 &amp; -2 &amp; 6\\<br>0 &amp; 4 &amp; 1 &amp; 2<br>\end{bmatrix}-(3,2)-&gt;\begin{bmatrix}<br>1 &amp; 2 &amp; 1 &amp; 2\\<br>0 &amp; 2 &amp; -2 &amp; 6\\<br>0 &amp; 0 &amp; 5 &amp; -10<br>\end{bmatrix}$ 这一步的消元矩阵，即为：</p><script type="math/tex; mode=display">\begin{bmatrix}   1 & 0 & 0\\   0 & 1 & 0\\   0 & 0 & 1\end{bmatrix}-[L3=L3+L2*(-2)]->\begin{bmatrix}   1 & 0 & 0\\   0 & 1 & 0\\   0 & -2 & 1\end{bmatrix}</script><p>得到：</p><script type="math/tex; mode=display">E_{32}E_{21}A=U(Upper\ triangular\ matrix)</script><p>其中 U 为上三角矩阵。使用矩阵乘法的结合律，先计算<script type="math/tex">E_{32}E_{21}</script>，即为 E，则 E 就是整个此次消元过程的消元矩阵。</p><p>核心：求消元矩阵就是从单位阵 I 入手，按照 A 每次变换的消元步骤操作 I 矩阵，能分别得到$E_{row,col}$，最后相乘得到 E 即可。</p><h3 id="行交换矩阵与逆矩阵"><a href="#行交换矩阵与逆矩阵" class="headerlink" title="行交换矩阵与逆矩阵"></a>行交换矩阵与逆矩阵</h3><h4 id="行变换与列变换"><a href="#行变换与列变换" class="headerlink" title="行变换与列变换"></a>行变换与列变换</h4><p>有了上面消元矩阵的启发，易得能够交换 $2\times2$ 矩阵中两行的矩阵为：</p><script type="math/tex; mode=display">\begin{bmatrix}   0 & 1\\   1 & 0\end{bmatrix}\begin{bmatrix}   a & b\\   c & d\end{bmatrix}=\begin{bmatrix}   c & d\\   a & b\end{bmatrix}</script><p>而交换 $2\times2$ 矩阵中两列的矩阵为：</p><script type="math/tex; mode=display">\begin{bmatrix}   a & b\\   c & d\end{bmatrix}\begin{bmatrix}   0 & 1\\   1 & 0\end{bmatrix}=\begin{bmatrix}   b & a\\   d & c\end{bmatrix}</script><p>所以，<strong>左乘等同于行变换，右乘等同于列变换</strong>。</p><h4 id="逆矩阵初探"><a href="#逆矩阵初探" class="headerlink" title="逆矩阵初探"></a>逆矩阵初探</h4><p>可以说我们学会了消元矩阵，就相当于我们可以用矩阵乘法对一个矩阵进行任何变化了，那么我们考虑一个逆过程，即我们如何把一个消元结束的矩阵 U 变为未经消元的矩阵 A 呢？答案就是乘上一个逆矩阵。</p><p>如例一中的$E_{21}$，是第一行乘以3到第二行，即</p><script type="math/tex; mode=display">E_{21}=\begin{bmatrix}1 & 0 & 0\\-3 & 1 & 0\\0 & 0 & 1\end{bmatrix}</script><p>那么与之相反，我们在第二行加上第一行$\times3$就可以复原这一运算过程，即：$\begin{bmatrix}<br>1 &amp; 0 &amp; 0\\<br>3 &amp; 1 &amp; 0\\<br>0 &amp; 0 &amp; 1<br>\end{bmatrix}\begin{bmatrix}<br>1 &amp; 0 &amp; 0\\<br>-3 &amp; 1 &amp; 0\\<br>0 &amp; 0 &amp; 1<br>\end{bmatrix}=\begin{bmatrix}<br>1 &amp; 0 &amp; 0\\<br>0 &amp; 1 &amp; 0\\<br>0 &amp; 0 &amp; 1<br>\end{bmatrix}=I$。其中的I是单位矩阵。<br>此时的$\begin{bmatrix}<br>1 &amp; 0 &amp; 0\\<br>3 &amp; 1 &amp; 0\\<br>0 &amp; 0 &amp; 1<br>\end{bmatrix}$称为<script type="math/tex">E_{21}^{-1}</script>，就有了<script type="math/tex">E_{21}^{-1}E_{21}=I</script>。</p><h2 id="学习感悟"><a href="#学习感悟" class="headerlink" title="学习感悟"></a>学习感悟</h2><p>本节从矩阵消元的角度，介绍解方程的通用做法，并介绍了消元矩阵，使我们从矩阵乘法层面理解了消元的过程，并延伸了消元矩阵的应用：就是基于单位阵 I 的变化，对矩阵 A 进行行列变换的过程。</p>]]></content>
    
    
    <summary type="html">矩阵消元</summary>
    
    
    
    <category term="Linear_Algebra" scheme="http://david-luge.cn/categories/Linear-Algebra/"/>
    
    
    <category term="Linear_Algebra" scheme="http://david-luge.cn/tags/Linear-Algebra/"/>
    
  </entry>
  
  <entry>
    <title>线性代数01-方程组的几何解释</title>
    <link href="http://david-luge.cn/2025/03/15/Linear_Algebra/%E7%BA%BF%E6%80%A7%E4%BB%A3%E6%95%B0-1/"/>
    <id>http://david-luge.cn/2025/03/15/Linear_Algebra/%E7%BA%BF%E6%80%A7%E4%BB%A3%E6%95%B0-1/</id>
    <published>2025-03-15T05:54:39.000Z</published>
    <updated>2025-03-15T05:54:39.000Z</updated>
    
    <content type="html"><![CDATA[<h1 id="Linear-Algebra-方程组的几何解释-01"><a href="#Linear-Algebra-方程组的几何解释-01" class="headerlink" title="Linear Algebra-方程组的几何解释-01"></a>Linear Algebra-方程组的几何解释-01</h1><h2 id="概要"><a href="#概要" class="headerlink" title="概要"></a>概要</h2><p>从本节开始，我们重新开始学习线性代数的有关知识。首先从解方程谈起，学习线性代数的应用之一就是求解复杂的方程问题，本文的核心就是从行图像和列图像的角度解方程。</p><h2 id="方程组的几何解释"><a href="#方程组的几何解释" class="headerlink" title="方程组的几何解释"></a>方程组的几何解释</h2><h3 id="二维的行图像"><a href="#二维的行图像" class="headerlink" title="二维的行图像"></a>二维的行图像</h3><p>首先我们可以通过一个例子来从行图像角度求解方程：</p><p>[例]求解方程：$2x-y=0, -x+2y=3$</p><p>我们首先按行将方程写成矩阵形式：$\begin{bmatrix}<br>2 &amp; -1 \\<br>-1 &amp; 2<br>\end{bmatrix}\begin{bmatrix}<br>x \\<br>y<br>\end{bmatrix}=\begin{bmatrix}<br>0 \\<br>3<br>\end{bmatrix}\\<br>$</p><p>系数矩阵(A)：将方程系数按行提取出来，构成一个矩阵；</p><p>未知向量(x)：将方程未知数提取出来，按列构成一个向量；</p><p>向量(b)：将等号右侧结果按列提取，构成一个向量；</p><p>下面我们可以通过行图像来求解这个方程，所谓行图像，就是在系数矩阵上，一次取一行构成方程，在坐标系上作图。和我们在初等数学中学习的作图求解方程的过程无异。由图可知，图中的绿点(1,2)就是方程组的解。</p><p><img src="https://raw.githubusercontent.com/XduDavid/Blog_Img/main/EhNZbaZKooRziqxci8bccsZznzc.png" alt="矩阵解的几何形式"></p><h3 id="二维的列图像"><a href="#二维的列图像" class="headerlink" title="二维的列图像"></a>二维的列图像</h3><p>从列图像角度，我们再次求解这个方程 $2x-y=0, -x+2y=3$</p><p>这一次我们求解过程中，我们将方程按列提取，使用的矩阵为：$x\begin{bmatrix}<br>2 \\<br>-1<br>\end{bmatrix}+y\begin{bmatrix}<br>-1 \\<br>2<br>\end{bmatrix}=\begin{bmatrix}<br>0 \\<br>3<br>\end{bmatrix}$</p><p>如上，我们使用列向量构成系数矩阵，<strong>将问题转化为</strong>：</p><p>如何将向量 $\begin{bmatrix}<br>2 \\<br>-1<br>\end{bmatrix}$与向量$\begin{bmatrix}<br>-1 \\<br>2<br>\end{bmatrix}$正确组合，得到结果向量$\begin{bmatrix}<br>0 \\<br>3<br>\end{bmatrix}$?</p><p>接下来我们使用列图像求解此方程：</p><p><img src="https://raw.githubusercontent.com/XduDavid/Blog_Img/main/linear_column_pic0.png" alt="linear_column_pic0"></p><p>即寻找合适的 x，y 使得 x 倍的(2, -1) + y 倍的(-1, 2)得到最终的向量(0, 3)。很明显能看出来，x 为 1，y 为 2 时满足条件。反映在图像上，显然结果正确。</p><p>进一步思考的话，对于 $x\begin{bmatrix}<br>2 \\<br>-1<br>\end{bmatrix}+y\begin{bmatrix}<br>-1 \\<br>2<br>\end{bmatrix}$ 这个方程，如果 x 和 y 可以取任意值，那么可以得到什么呢？显然<strong>我们可以得到二维平面中任何方向的向量。</strong></p><h2 id="方程组的几何解释推广"><a href="#方程组的几何解释推广" class="headerlink" title="方程组的几何解释推广"></a>方程组的几何解释推广</h2><h3 id="高维行图像"><a href="#高维行图像" class="headerlink" title="高维行图像"></a>高维行图像</h3><p>我们将方程维数推广，从三维开始，$2x-y=0, -x+2y-z=-1, -3y+4z=4$，如果我们继续使用行图像的方法求解，那么会得到一个很复杂的图像。</p><p>矩阵形式如下：</p><p>$A=\begin{bmatrix}<br>2&amp;-1&amp;0\\<br>-1&amp;2&amp;-1\\<br>0&amp;-3&amp;4<br>\end{bmatrix}$，$b=\begin{bmatrix}<br>0\\<br>-1\\<br>4<br>\end{bmatrix}$，方程：$Ax=b$，$\begin{bmatrix}<br>2&amp;-1&amp;0\\<br>-1&amp;2&amp;-1\\<br>0&amp;-3&amp;4<br>\end{bmatrix}\begin{bmatrix}<br>x\\<br>y\\<br>z<br>\end{bmatrix}=\begin{bmatrix}<br>0\\<br>-1\\<br>4<br>\end{bmatrix}$</p><p>如果绘制行图像，这是 3 个平面相交得到一点，常见的思路是先联立其中两个平面，使其相交于一条直线，再研究这条直线与剩下的第三个平面相交于哪个点，最后得到的点坐标即为方程的解。直观上这种求解方式很难直接绘制更高维数的图像。</p><h3 id="高维列图像"><a href="#高维列图像" class="headerlink" title="高维列图像"></a>高维列图像</h3><p>还是刚刚的例子，$2x-y=0\\-x+2y-z=-1\\-3y+4z=4$，如果我们使用列图像的思路进行计算，那么矩阵形式就变为：</p><script type="math/tex; mode=display">x\begin{bmatrix}   2\\\\   -1\\\\   0\end{bmatrix}+y\begin{bmatrix}   -1\\\\   2\\\\   -3\end{bmatrix}+z\begin{bmatrix}   0\\\\   -1\\\\   4\end{bmatrix}=\begin{bmatrix}   0\\\\   -1\\\\   4\end{bmatrix}</script><p>左侧是线性组合，右侧是线性组合组成的结果，这样一来思路就清晰多了，“寻找线性组合”成为了解题的关键。</p><p>显然这道题是一个特例，明显$x=0,y=0,z=1$是方程的解，这在行图像中并不明显。</p><p>我们之所以更推荐使用列图像求解方程，是因为<strong>这是一种更系统的求解方法，即寻找线性组合</strong>，而不用绘制每个行方程的图像后寻找那个很难直观看出来的交点坐标。另一个优势在于，如果我们改变最后的结果 b，如本题中，我们将其改为 $x\begin{bmatrix}<br>2\\<br>-1\\<br>0<br>\end{bmatrix}+y\begin{bmatrix}<br>-1\\<br>2\\<br>-3<br>\end{bmatrix}+z\begin{bmatrix}<br>0\\<br>-1\\<br>4<br>\end{bmatrix}=\begin{bmatrix}<br>1\\<br>1\\<br>-3<br>\end{bmatrix}$，那么我们就重新寻找一个线性组合就够了。但如果我们使用的是行图像呢？那意味着我们要完全重画三个平面图像，就简便性来讲，两种方法高下立判。</p><p>另外，还要注意的一点是，对任意的 b 是不是都能求解$Ax=b$这个矩阵方程呢？也就是对于 $3\times3$的系数矩阵A，其列的线性组合是否都能覆盖整个三维空间呢？对于我们上面举的这些例子，都是可以的。但是有些矩阵就是不行的，比如三个列向量本身就只构成了一个平面，那么这样的三个向量组成的向量只能分布在该平面上，肯定无法覆盖整个三维空间。如三个列向量分别为：$\begin{bmatrix}<br>2\\<br>-1\\<br>0<br>\end{bmatrix}$，$\begin{bmatrix}<br>-1\\<br>2\\<br>-3<br>\end{bmatrix}$，$\begin{bmatrix}<br>1\\<br>1\\<br>-3<br>\end{bmatrix}$。这三个向量就构成了一个平面，其中$\begin{bmatrix}<br>2\\<br>-1\\<br>0<br>\end{bmatrix}+\begin{bmatrix}<br>-1\\<br>2\\<br>-3<br>\end{bmatrix}=\begin{bmatrix}<br>1\\<br>1\\<br>-3<br>\end{bmatrix}$。对于这个方程组而言，就无法实现对于任意的 b，方程的解都存在。</p><h3 id="矩阵乘法"><a href="#矩阵乘法" class="headerlink" title="矩阵乘法"></a>矩阵乘法</h3><p>如 Ax，如果我们已知一个矩阵 A 和一个向量 x，那么我们如何求解它们的积呢？例如 $A=\begin{bmatrix}<br>2&amp;5\\<br>1&amp;3<br>\end{bmatrix}$，$x=\begin{bmatrix}<br>1\\<br>2<br>\end{bmatrix}$，我们这样求：</p><ul><li>法一：将矩阵 A 看做列向量的组合：</li></ul><script type="math/tex; mode=display">\begin{bmatrix}   2&5\\\\   1&3\end{bmatrix}\begin{bmatrix}   1\\\\   2\end{bmatrix}=1\begin{bmatrix}   2\\\\   1\end{bmatrix}+2\begin{bmatrix}   5\\\\   3\end{bmatrix}=\begin{bmatrix}   12\\\\   7\end{bmatrix}</script><p>即 x 每个分量与矩阵中各列向量相乘，再将其求和。</p><ul><li>法二：向量点乘</li></ul><script type="math/tex; mode=display">\begin{bmatrix}   2&5\\\\   1&3\end{bmatrix}\begin{bmatrix}   1\\\\   2\end{bmatrix}=\begin{bmatrix}   (2,5)\cdot(1,2)\\\\   (1,3)\cdot(1,2)\end{bmatrix}=\begin{bmatrix}   12\\\\   7\end{bmatrix}</script><h2 id="感悟"><a href="#感悟" class="headerlink" title="感悟"></a>感悟</h2><p>该部分内容是对线性代数内容的初涉，从解方程谈起，引入列空间的概念，可以发现从列空间角度将求解方程，变化为求列向量的线性组合，这种方法更加科学，并从列向量的线性组合方式了解矩阵乘法。</p>]]></content>
    
    
    <summary type="html">方程组的几何解释</summary>
    
    
    
    <category term="Linear_Algebra" scheme="http://david-luge.cn/categories/Linear-Algebra/"/>
    
    
    <category term="Linear_Algebra" scheme="http://david-luge.cn/tags/Linear-Algebra/"/>
    
  </entry>
  
  <entry>
    <title>EVM-概念与数学原理</title>
    <link href="http://david-luge.cn/2025/03/12/Com/EVM-%E6%A6%82%E5%BF%B5%E4%B8%8E%E6%95%B0%E5%AD%A6%E5%8E%9F%E7%90%86/"/>
    <id>http://david-luge.cn/2025/03/12/Com/EVM-%E6%A6%82%E5%BF%B5%E4%B8%8E%E6%95%B0%E5%AD%A6%E5%8E%9F%E7%90%86/</id>
    <published>2025-03-12T13:54:39.000Z</published>
    <updated>2025-03-12T13:54:39.000Z</updated>
    
    <content type="html"><![CDATA[<h1 id="EVM：概念与数学原理"><a href="#EVM：概念与数学原理" class="headerlink" title="EVM：概念与数学原理"></a>EVM：概念与数学原理</h1><h3 id="引言"><a href="#引言" class="headerlink" title="引言"></a><strong>引言</strong></h3><p>在无线通信系统中，信号的质量直接影响数据传输的稳定性和速率。误差向量幅度（Error Vector Magnitude, EVM）是衡量调制信号质量的重要参数，广泛应用于 Wi-Fi、蜂窝网络和其他无线技术。本文将详细介绍 EVM 的概念、数学原理以及它对 Wi-Fi 传输性能的影响。</p><hr><h3 id="1-什么是-EVM？"><a href="#1-什么是-EVM？" class="headerlink" title="1. 什么是 EVM？"></a><strong>1. 什么是 EVM？</strong></h3><p>EVM 是衡量接收信号与理想信号之间误差的指标。它描述了调制信号在接收端与发送端理想信号之间的偏差程度，通常以百分比（%）或 dB（分贝）表示。</p><p>在 Wi-Fi（IEEE 802.11 标准）中，EVM 被用来评估不同调制方案（如 BPSK、QPSK、16-QAM、64-QAM、256-QAM）的信号质量。较低的 EVM 值表示更好的信号质量，而较高的 EVM 值则意味着更多的误差，可能导致数据误码率（BER）上升。</p><hr><h3 id="2-EVM-的数学原理"><a href="#2-EVM-的数学原理" class="headerlink" title="2. EVM 的数学原理"></a><strong>2. EVM 的数学原理</strong></h3><h4 id="2-1-EVM-的计算公式"><a href="#2-1-EVM-的计算公式" class="headerlink" title="2.1 EVM 的计算公式"></a><strong>2.1 EVM 的计算公式</strong></h4><p>EVM 计算的基本公式如下：</p><script type="math/tex; mode=display">EVM_{rms} = \sqrt{\frac{\sum_{i=1}^{N} |S_i - R_i|^2}{\sum_{i=1}^{N} |S_i|^2}} \times 100</script><p>其中：</p><ul><li>$S_i$ 是理想信号（发送信号）的 IQ 复数坐标。</li><li>$ R_i $ 是实际接收到的信号 IQ 复数坐标。</li><li>$ N $ 是符号的总数。</li><li>$ |S_i - R_i| $ 表示发送信号与接收信号之间的误差向量。</li><li>$ |S_i| $ 是理想信号的幅度。</li></ul><p>该公式表示误差向量的均方根（RMS）值与理想信号功率的比值，并转换为百分比形式。</p><p><img src="https://raw.githubusercontent.com/XduDavid/Blog_Img/main/KSpjbVNUno0b8Axrnl9chsa5nij.png" alt="KSpjbVNUno0b8Axrnl9chsa5nij"></p><h4 id="2-2-dB-形式的-EVM-计算"><a href="#2-2-dB-形式的-EVM-计算" class="headerlink" title="2.2 dB 形式的 EVM 计算"></a><strong>2.2 dB 形式的 EVM 计算</strong></h4><p>在无线通信测试中，EVM 常以 dB 形式表示，其计算公式为：</p><script type="math/tex; mode=display">EVM_{dB} = 10 \log_{10} \left( \frac{\sum_{i=1}^{N} |S_i - R_i|^2}{\sum_{i=1}^{N} |S_i|^2} \right)</script><p>这种形式的 EVM 便于与其他无线通信参数（如信噪比 SNR）进行对比。</p><hr><h3 id="3-EVM-对-Wi-Fi-传输的影响"><a href="#3-EVM-对-Wi-Fi-传输的影响" class="headerlink" title="3. EVM 对 Wi-Fi 传输的影响"></a><strong>3. EVM 对 Wi-Fi 传输的影响</strong></h3><p>EVM 直接影响 Wi-Fi 设备的通信质量，并与以下因素密切相关：</p><h4 id="3-1-调制方式与-EVM-要求"><a href="#3-1-调制方式与-EVM-要求" class="headerlink" title="3.1 调制方式与 EVM 要求"></a><strong>3.1 调制方式与 EVM 要求</strong></h4><p>不同的 Wi-Fi 调制方式（BPSK、QPSK、16-QAM、64-QAM、256-QAM、1024-QAM）对 EVM 的要求不同，调制阶数越高，对 EVM 的要求越严格。例如：</p><table><tr><td>调制方式<br/></td><td>典型 EVM 要求 (dB)<br/></td></tr><tr><td>BPSK<br/></td><td>-5 dB<br/></td></tr><tr><td>QPSK<br/></td><td>-10 dB<br/></td></tr><tr><td>16-QAM<br/></td><td>-16 dB<br/></td></tr><tr><td>64-QAM<br/></td><td>-22 dB<br/></td></tr><tr><td>256-QAM<br/></td><td>-28 dB<br/></td></tr><tr><td>1024-QAM<br/></td><td>-32 dB<br/></td></tr></table><p>当 EVM 超过规定的阈值时，接收端可能无法正确解调信号，导致数据误码率上升，从而降低吞吐量。</p><h4 id="3-2-影响-EVM-的主要因素"><a href="#3-2-影响-EVM-的主要因素" class="headerlink" title="3.2 影响 EVM 的主要因素"></a><strong>3.2 影响 EVM 的主要因素</strong></h4><ol><li><strong>射频链路非理想性</strong>：包括相位噪声、非线性放大、IQ 失衡等。</li><li><strong>信号干扰</strong>：其他 Wi-Fi 设备、电磁干扰源可能会影响信号质量。</li><li><strong>多径效应</strong>：无线信号在传播过程中经过反射、衍射等现象，会导致信号失真。</li><li><strong>天线和匹配网络设计</strong>：不良的天线匹配会影响信号传输质量。</li></ol><hr><h3 id="4-如何优化-EVM-以提高-Wi-Fi-质量？"><a href="#4-如何优化-EVM-以提高-Wi-Fi-质量？" class="headerlink" title="4. 如何优化 EVM 以提高 Wi-Fi 质量？"></a><strong>4. 如何优化 EVM 以提高 Wi-Fi 质量？</strong></h3><p>为了降低 EVM 并提高 Wi-Fi 通信质量，可以采取以下措施：</p><ol><li><strong>优化射频设计</strong>：改进功放线性度，减少 IQ 失衡。</li><li><strong>增强信号处理算法</strong>：采用数字预失真（DPD）等技术补偿非线性失真。</li><li><strong>减少干扰</strong>：使用 5GHz 或 6GHz 频段，避免 2.4GHz 的拥塞。</li><li><strong>天线优化</strong>：使用高质量天线，并确保阻抗匹配。</li><li><strong>提高 SNR</strong>：使用更高增益的天线，减少环境噪声，提高接收灵敏度。</li></ol><hr><h3 id="5-结论"><a href="#5-结论" class="headerlink" title="5. 结论"></a><strong>5. 结论</strong></h3><p>EVM 是衡量 Wi-Fi 信号质量的重要指标，它通过计算误差向量的均方根值来评估接收信号与理想信号的偏差。较低的 EVM 值意味着更好的调制解调性能，从而提高数据传输的稳定性和速率。通过优化射频设计、减少干扰、提升 SNR，可以有效降低 EVM，提升 Wi-Fi 设备的通信质量。</p><p>随着 Wi-Fi 6（802.11ax）和 Wi-Fi 7（802.11be）的发展，EVM 在高阶调制（如 1024-QAM、4096-QAM）中的作用将更加关键。因此，深入理解 EVM 及其优化方法，对无线通信工程师而言至关重要。</p>]]></content>
    
    
    <summary type="html">简要介绍了EVM指标</summary>
    
    
    
    <category term="Communication" scheme="http://david-luge.cn/categories/Communication/"/>
    
    
    <category term="Communication" scheme="http://david-luge.cn/tags/Communication/"/>
    
  </entry>
  
  <entry>
    <title>DPD-数字预失真</title>
    <link href="http://david-luge.cn/2025/03/12/Com/DPD-%E6%95%B0%E5%AD%97%E9%A2%84%E5%A4%B1%E7%9C%9F/"/>
    <id>http://david-luge.cn/2025/03/12/Com/DPD-%E6%95%B0%E5%AD%97%E9%A2%84%E5%A4%B1%E7%9C%9F/</id>
    <published>2025-03-12T02:54:39.000Z</published>
    <updated>2025-03-12T02:54:39.000Z</updated>
    
    <content type="html"><![CDATA[<h1 id="DPD-数字预失真"><a href="#DPD-数字预失真" class="headerlink" title="DPD-数字预失真"></a>DPD-数字预失真</h1><h1 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h1><p>家人们，今天咱来唠唠通信界的一个超重要 “选手”——数字预失真 DPD(Digital Pre-Distortion)，它在通信领域那可是相当有存在感，就像游戏里的神助攻，能让射频放大器变得超厉害！</p><h1 id="DPD-是个啥"><a href="#DPD-是个啥" class="headerlink" title="DPD 是个啥"></a>DPD 是个啥</h1><p>DPD 这名字听起来有点绕，简单来说，就是让正常的数字信号提前 “变个样”。</p><p>“数字” 嘛，说明是在数字的地盘儿搞事情，和模拟域没啥关系；</p><p>“预” 就是提前的意思，在射频功率放大器 “开工” 之前就先行动；</p><p>“失真” 呢，信号在传输过程中走样了就叫失真，DPD 就是故意让原始信号 “失失真” 。这就好比给信号提前做了个 “变形手术”，专门用来对付功率放大器的那些小脾气。</p><p>既然 DPD 是为了对付 PA 的小脾气的，自然在信号处理系统中，DPD 就要放在 PA 的前面。</p><h1 id="为啥需要-DPD"><a href="#为啥需要-DPD" class="headerlink" title="为啥需要 DPD"></a>为啥需要 DPD</h1><p>这就得吐槽一下射频功率放大器啦！它有个让人头疼的毛病，输入功率加到一定程度，就开始 “耍小性子”，进入非线性区。这时候，输入和输出不再是 “铁哥们”，不再成线性关系。增加输入功率，输出功率却不给力，效率直线下降，信号还失真了。就好比你使劲给车加油，车却跑不起来，还跑偏了。</p><p><img src="https://raw.githubusercontent.com/XduDavid/Blog_Img/main/Oqirbaoknoleu8xUGgscVMTJnge.png" alt="DPD示意图"></p><p>接收端收到失真信号后，还会继续 “捣乱”，把失真加剧。那咋办呢？</p><p>一般有两种办法，要么降低输入信号功率，躲开非线性区这个 “大坑”；要么增加输入信号功率，牺牲点能量换信号不失真。</p><p>DPD 就属于后者，它就像个聪明的 “信号整形师”，让原先的信号朝着和功率放大器相反的方向 “变形”，抵消掉功率放大器的非线性影响 。这么一来，输出和输入信号之间的线性关系区间变宽了，功率放大器效率也提升了，不过功耗也增加了点，就当是给效率提升交的 “小电费” 吧。而且用了 DPD，无线基站的效率能大幅提升，能给网络运营商省下不少钱呢！</p><p><img src="https://raw.githubusercontent.com/XduDavid/Blog_Img/main/Oqirbaoknoleu8xUGgscVMTJnge1.png" alt="PA特性"></p><h1 id="谁能搞定-DPD？"><a href="#谁能搞定-DPD？" class="headerlink" title="谁能搞定 DPD？"></a>谁能搞定 DPD？</h1><h2 id="设备厂家"><a href="#设备厂家" class="headerlink" title="设备厂家"></a>设备厂家</h2><p>那些大型设备厂家，像华为、中兴、爱立信、诺基亚、三星，都是 DPD 技术的 “大拿”，自家都有厉害的 DPD 技术，就像有独家秘籍一样。</p><p>小厂就有点尴尬啦，大多没有自己的 DPD 技术，毕竟没积累嘛。没办法，只能找学校 “取经”，或者直接买 FPGA 公司提供的 IP core，就像借别人的工具来干活。</p><h2 id="芯片厂家"><a href="#芯片厂家" class="headerlink" title="芯片厂家"></a>芯片厂家</h2><p>FPGA 芯片厂家可就牛了，不仅能提供高性能的 DPD 解决方案，而且 IP 核参数还能自己调，不用手动一点点定制，省了好多事儿，就像给你一把万能钥匙，直接打开 DPD 的大门，还能提供超小占位面积、低成本的 FPGA 解决方案。</p><h1 id="DPD-有什么实现难点？"><a href="#DPD-有什么实现难点？" class="headerlink" title="DPD 有什么实现难点？"></a>DPD 有什么实现难点？</h1><p>DPD 想发挥好作用，也不是一帆风顺的。首先，它的数学模型和参数得和功率放大器（PA）完美匹配，PA 要是变了，DPD 的数学模型或参数也得跟着变，就像脚变了，鞋也得换。</p><p>随着 5G 时代到来，载波带宽越来越宽，都能达到 800MHz。以前 4G 的 DPD 数学模型在 5G 基站 PA 这儿就 “水土不服” 了，性能根本不达标，所以还得深入研究新的数学模型。</p><p>最后，DPD 不管是用 FPGA、CPU 还是 DSP 来实现，都得从实现难度、资源消耗、成本控制、研发周期等多方面综合考虑，这里面的技术门道可多了，一般人还真搞不定。</p><h1 id="功率放大器的模型是什么样？"><a href="#功率放大器的模型是什么样？" class="headerlink" title="功率放大器的模型是什么样？"></a>功率放大器的模型是什么样？</h1><h2 id="“宽带”-功放线性区数学模型"><a href="#“宽带”-功放线性区数学模型" class="headerlink" title="“宽带” 功放线性区数学模型"></a>“宽带” 功放线性区数学模型</h2><p>所谓 “宽带”，就是信号带宽超宽，啥频率都能在功率放大器里畅通无阻。假设输入是 IQ 调制信号，线性区模型就是输出和输入是简单的倍数关系。经过功率放大器后，信号频谱不变，幅度还放大了，就像给信号打了一针 “放大剂”。</p><h2 id="“宽带”-功放非线性区数学模型"><a href="#“宽带”-功放非线性区数学模型" class="headerlink" title="“宽带” 功放非线性区数学模型"></a>“宽带” 功放非线性区数学模型</h2><p>到了非线性区，情况就复杂了。可以用幂指数函数或者幂级数函数来描述。</p><p>幂指数函数的图像如下：</p><p><img src="https://raw.githubusercontent.com/XduDavid/Blog_Img/main/WnTobcCD8oiC5px9lqMcRnBCnWc.png" alt="幂指函数"></p><p>幂级数函数是用来模拟非线性特性的</p><p>拿幂级数函数来说，它适合模拟无记忆的弱非线性系统。</p><script type="math/tex; mode=display">y=\sum_{n=0}^{\infty}a_{n}(x-x_{0})^{n}</script><p>上面的公式被称为幂级数，其中$x<em>{0}$为常数，$a</em>{0},a<em>{1},…a</em>{n}$称为幂级数的系数。</p><p>下面以输出信号为 IQ 调制信号为例，来说明经过功率放大器后会产生很多的谐波分量；</p><p><strong>假设 1</strong>：输入信号为 IQ 调制信号(双音正弦信号)：</p><script type="math/tex; mode=display">x(t)=A_{1}cos(wt)+A_{2}sin(wt)</script><p><strong>假设 2</strong>：功率放大器是三阶函数：</p><script type="math/tex; mode=display">y(t)=a_{1}x(t)+a_{2}x^{2}(t)+a_{3}x^{3}(t)</script><p>则输出信号的频谱为：基波分量 W，二阶谐波分量 2W，三阶谐波分量 3W；</p><p>显然，经过功率放大器后，信号有很多的谐波分量，这就会导致信号的失真；</p><ul><li>产生的非基波频谱分量(二次、三次谐波分量)分走了本该作用在全部基波上的功率，造成了能量的损失；</li><li>产生的非基波频谱分量(二次、三次谐波分量)落在信号通带、邻带和其他有用通带内，如果不用滤波器加以滤除，则会对有用信号产生干扰；</li><li>如果产生谐波分量正好落在<strong>信号带宽内</strong>，这就<strong>无法滤除</strong>，产生无法消除的信号干扰；</li></ul><p>因此，如果功率放大器在非线性区对高频信号进行放大，损失能量是小事，最麻烦的问题是，会产生谐波干扰信号；</p><p>因此，要尽量避免功率放大器对输入信号进行非线性放大，要尽量对信号进行线性放大。</p><p>那么可能会有人说，直接让 PA 工作在线性区不就行了吗？实际的通信系统中会面临如下问题：</p><p><img src="https://raw.githubusercontent.com/XduDavid/Blog_Img/main/Ww2tbZD2zoyDIgxCcrHc4GzpnMh.png" alt="DPD问题"></p><ul><li>信号的幅度变化较大，峰均比（信号峰值与信号均值的比值）比较高，这就意味着即使信号均值落在线性区，信号的峰值也有可能落在非线性区；</li><li>如果信号峰值和均值都落在线性区，这功率放大器的利用率就很低，大部分时间工作在低功率区，对功率放大器是很大的浪费，功率放大器的线性区间越宽，价格越贵，并且价格相差很大；</li><li>移动通信系统中，要增加信号的覆盖区，就需要增大发射功率；</li></ul><p>因此，无论是从成本，还是实际部署的角度考虑，都期望尽可能让输入信号的功率，<strong>工作在接近非线性区附近</strong>。</p><p>有了这些原因，才会有工程师想，能不能在 PA 之前，先对原始的输入信号$X(t)$进行预处理，得到$Z(t)$，使得功率放大器的输入信号$Z(t)$工作在非线性区，输出信号$Y(t)$与$X(t)$之间还是线性关系呢？</p><p>这就是数字预失真 DPD 和削峰 CFR；其中 CFR 的作用是降低信号的峰均比；</p><p><img src="https://raw.githubusercontent.com/XduDavid/Blog_Img/main/QkgHbEVYQorlGzxKlcRcCnrEnJh.png" alt="CFR+DPD"></p><p>这样带来两个好处：</p><ul><li>虽然 PA 工作在非线性区，但是如果 DPD+PA，从整体来看，PA 的输出信号和 DPD 的输入信号之间还是线性关系，没有导致输入信号失真；</li><li>从逻辑上看，在不改变功率放大器的情况下，增大了功率放大器的线性区间；</li></ul><h2 id="“带限”-系统的-Volterra-级数模型"><a href="#“带限”-系统的-Volterra-级数模型" class="headerlink" title="“带限” 系统的 Volterra 级数模型"></a>“带限” 系统的 Volterra 级数模型</h2><p>实际系统大多是 “带限” 系统，带宽有限制，DAC 对带宽影响很大。带宽增加，不仅会带来记忆效应，对 ADC 要求也更高。“带限” 系统只关心载带和邻带信号，数学模型是 Volterra 级数模型，不同阶数的非线性多项式对应不同带宽的信号非线性分量。为了让建模更准，还得在传统模型里加带限函数。</p><p>下图是 DPD 结构的一个示意图</p><p><img src="https://raw.githubusercontent.com/XduDavid/Blog_Img/main/STW0bDuZUo1cvIx3egycJTjHnie.png" alt="DPD结构示意图"></p><p>我们使用 Volterra 级数模型对 PA 进行建模的话，可以同时考虑到非线性和记忆效应；</p><script type="math/tex; mode=display">F[x(n)]=\sum_{k=1}^K\sum_{q=0}^Qa_{kq}x(n-q)\left|x(n-q)\right|^{k-1}</script><p>其中 K 是多项式级数，Q 是记忆深度。</p><blockquote><p>From Xilinx DPD IP Doc，Xilinx 对于$a_{kq}$的求解</p></blockquote><h1 id="思维导图"><a href="#思维导图" class="headerlink" title="思维导图"></a>思维导图</h1><p><img src="https://raw.githubusercontent.com/XduDavid/Blog_Img/main/whiteboard_exported_image.png" alt="DPD思维导图"></p>]]></content>
    
    
    <summary type="html">简要介绍了数字预失真技术</summary>
    
    
    
    <category term="Communication" scheme="http://david-luge.cn/categories/Communication/"/>
    
    
    <category term="Communication" scheme="http://david-luge.cn/tags/Communication/"/>
    
  </entry>
  
</feed>
